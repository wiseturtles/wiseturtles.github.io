<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wise Turtles</title><link href="http://blog.wiseturtles.com/" rel="alternate"></link><link href="http://blog.wiseturtles.com/feeds/all.atom.xml" rel="self"></link><id>http://blog.wiseturtles.com/</id><updated>2015-01-09T15:27:00+08:00</updated><entry><title>free</title><link href="http://blog.wiseturtles.com/posts/linux-free.html" rel="alternate"></link><updated>2015-01-09T15:27:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-09:posts/linux-free.html</id><summary type="html">&lt;p&gt;本来转载自:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/coldplayerest/archive/2010/02/20/1669949.html"&gt;http://www.cnblogs.com/coldplayerest/archive/2010/02/20/1669949.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多free命令可参看:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Tuning_and_Optimizing_Red_Hat_Enterprise_Linux_for_Oracle_9i_and_10g_Databases/chap-Oracle_9i_and_10g_Tuning_Guide-Memory_Usage_and_Page_Cache.html"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.linuxatemyram.com/"&gt;http://www.linuxatemyram.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;top命令输出解释&lt;/h2&gt;
&lt;p&gt;下面是free的运行结果，一共有4行。为了方便说明，我加上了列号.
&lt;pre&gt;
                   1          2          3          4          5          6
1              total       used       free     shared    buffers     cached
2 Mem:      24677460   23276064    1401396          0     870540   12084008
3 -/+ buffers/cache:   10321516   14355944
4 Swap:     25151484     224188   24927296
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这样可以把free的输出看成一个二维数组&lt;span class="caps"&gt;FO&lt;/span&gt;(Free&amp;nbsp;Output)。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FO[2][1] = 24677460
FO[3][2] = 10321516
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;free的输出一共有四行，第四行为交换区的信息，分别是交换的总量（total），使用量（used）和有多少空闲的交换区（free），这个比较清楚，不说太多。
free输出的第二行和第三行是比较让人迷惑的。这两行都是说明内存使用情况的。第一列是总量（total），第二列是使用量（used），第三列是可用量（free）。
第一行的输出时从操作系统（&lt;span class="caps"&gt;OS&lt;/span&gt;）来看的。也就是说，从&lt;span class="caps"&gt;OS&lt;/span&gt;的角度来看，计算机上一共有:
&lt;span class="caps"&gt;24677460KB&lt;/span&gt;（缺省时free的单位为&lt;span class="caps"&gt;KB&lt;/span&gt;）物理内存，即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][1]；在这些物理内存中有&lt;span class="caps"&gt;23276064KB&lt;/span&gt;（即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][2]）被使用了；还用&lt;span class="caps"&gt;1401396KB&lt;/span&gt;（即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]）是可用的；&amp;nbsp;这里得到第一个等式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FO[2][1] = FO[2][2] + FO[2][3]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;FO&lt;/span&gt;[2][4]表示被几个进程共享的内存的，现在已经deprecated，其值总是0（当然在一些系统上也可能不是0，主要取决于free命令是怎么实现的）。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;FO&lt;/span&gt;[2][5]表示被&lt;span class="caps"&gt;OS&lt;/span&gt; buffer住的内存。&lt;span class="caps"&gt;FO&lt;/span&gt;[2][6]表示被&lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;cache的内存。在有些时候buffer和cache这两个词经常混用。不过在一些比较低层的软件里是要区分这两个词的，看老外的洋文:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A buffer is something that has yet to be &amp;#8220;written&amp;#8221; to&amp;nbsp;disk.&lt;/li&gt;
&lt;li&gt;A cache is something that has been &amp;#8220;read&amp;#8221; from the disk and stored for later&amp;nbsp;use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说buffer是用于存放要输出到disk（块设备）的数据的，而cache是存放从disk上读出的数据。这二者是为了提高&lt;span class="caps"&gt;IO&lt;/span&gt;性能的，并由&lt;span class="caps"&gt;OS&lt;/span&gt;管理。&lt;/p&gt;
&lt;p&gt;Linux和其他成熟的操作系统（例如windows），为了提高&lt;span class="caps"&gt;IO&lt;/span&gt; read的性能，总是要多cache一些数据，这也就是为什么&lt;span class="caps"&gt;FO&lt;/span&gt;[2][6]（cached memory）比较大，而&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]比较小的原因。我们可以做一个简单的测试:&lt;/p&gt;
&lt;p&gt;释放掉被系统cache占用的数据；&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo 3&amp;gt;/proc/sys/vm/drop_caches
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;读一个大文件，并记录时间；
关闭该文件；
重读这个大文件，并记录时间；&amp;nbsp;第二次读应该比第一次快很多。原来我做过一个BerkeleyDB的读操作，大概要读5G的文件，几千万条记录。在我的环境上，第二次读比第一次大概可以快9倍左右。&lt;/p&gt;
&lt;p&gt;free输出的第二行是从一个应用程序的角度看系统内存的使用情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于&lt;span class="caps"&gt;FO&lt;/span&gt;[3][2]，即-buffers/cache，表示一个应用程序认为系统被用掉多少内存；&lt;/li&gt;
&lt;li&gt;对于&lt;span class="caps"&gt;FO&lt;/span&gt;[3][3]，即+buffers/cache，表示一个应用程序认为系统还有多少内存；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为被系统cache和buffer占用的内存可以被快速回收，所以通常&lt;span class="caps"&gt;FO&lt;/span&gt;[3][3]比&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]会大很多。&lt;/p&gt;
&lt;p&gt;这里还用两个等式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FO[3][2] = FO[2][2] - FO[2][5] - FO[2][6]
FO[3][3] = FO[2][3] + FO[2][5] + FO[2][6]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这二者都不难理解。&lt;/p&gt;
&lt;p&gt;free命令由procps.*.rpm提供（在Redhat系列的&lt;span class="caps"&gt;OS&lt;/span&gt;上）。free命令的所有输出值都是从/proc/meminfo中读出的。&lt;/p&gt;
&lt;p&gt;在系统上可能有meminfo(2)这个函数，它就是为了解析/proc/meminfo的。procps这个包自己实现了meminfo()这个函数。可以下载一个procps的tar包看看具体实现，现在最新版式3.2.8。&lt;/p&gt;</summary><category term="linux"></category><category term="command"></category><category term="free"></category></entry><entry><title>WIFI Hotspot Setup On Ubuntu 12.04</title><link href="http://blog.wiseturtles.com/posts/wifi-hotspot-setup-on-ubuntu.html" rel="alternate"></link><updated>2014-12-30T00:00:00+08:00</updated><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2014-12-30:posts/wifi-hotspot-setup-on-ubuntu.html</id><summary type="html">&lt;p&gt;hotspot配置参考：http://thenewbieblog.wordpress.com/2012/05/01/wifi-hotspot-setup-on-ubuntu/
Android利用Fiddler抓包：http://www.trinea.cn/android/android-network-sniffer/&amp;nbsp;Android利用tcpdump抓包：http://www.trinea.cn/android/tcpdump_wireshark/&lt;/p&gt;
&lt;p&gt;为了Ubuntu笔记本方便对Android手机上的Apps做抓包, 本文介绍两种方法，方法二更容易配置。
有线、无线同时可以工作时，用下面方法将无线网卡作为hotspot，通过有线连接外网。
如果想直接通过无线网卡上外网，需要先停掉hostapd 或&amp;nbsp;ap-hotspot，并重启网络。&lt;/p&gt;
&lt;p&gt;重启网络:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service network-manager restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;方法一&lt;/h1&gt;
&lt;h2&gt;查看无线网卡硬件信息&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i network
03:00.0 Network controller: Intel Corporation Wireless &lt;span class="m"&gt;7260&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev 6b&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看无线网卡驱动信息&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsmod
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看无线网卡设备名称&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;iwconfig
wlan0     IEEE 802.11bgn  Mode:Master  Tx-Power&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt; dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Power Management:on
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装需要的软件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install dhcp3-server hostapd
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/hostapd/hostapd.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/hostapd/hostapd.conf
&lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wlan0
&lt;span class="nv"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nl80211
&lt;span class="nv"&gt;ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_hotspot_name
&lt;span class="nv"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;hw_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;g
&lt;span class="nv"&gt;auth_algs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;wpa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
&lt;span class="nv"&gt;wpa_passphrase&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your-password
&lt;span class="nv"&gt;wpa_key_mgmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;WPA-PSK
&lt;span class="nv"&gt;wpa_pairwise&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;TKIP CCMP
&lt;span class="nv"&gt;rsn_pairwise&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;CCMP
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/default/isc-dhcp-server&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep INTERFACES /etc/default/isc-dhcp-server
&lt;span class="nv"&gt;INTERFACES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wlan0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/dhcp/dhcpd.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;配置文件: /etc/dhcp/dhcpd.conf
Make sure the follow lines are Commented out &lt;span class="o"&gt;(&lt;/span&gt; put a &lt;span class="nb"&gt;hash&lt;/span&gt; “#”  sign at the beginning of the line &lt;span class="o"&gt;)&lt;/span&gt; the following lines:
&lt;span class="c"&gt;# option definitions common to all supported networks…&lt;/span&gt;
&lt;span class="c"&gt;#option domain-name “example.org”;&lt;/span&gt;
&lt;span class="c"&gt;#option domain-name-servers ns1.example.org, ns2.example.org;&lt;/span&gt;
&lt;span class="c"&gt;#default-lease-time 600;&lt;/span&gt;
&lt;span class="c"&gt;#max-lease-time 7200;&lt;/span&gt;

Add the following lines to the file &lt;span class="o"&gt;(&lt;/span&gt;copy and paste&lt;span class="o"&gt;)&lt;/span&gt;
subnet 10.10.0.0 netmask 255.255.255.0 &lt;span class="o"&gt;{&lt;/span&gt;
        range 10.10.0.2 10.10.0.16&lt;span class="p"&gt;;&lt;/span&gt;
        option domain-name-servers 8.8.4.4, 208.67.222.222&lt;span class="p"&gt;;&lt;/span&gt;
        option routers 10.10.0.1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;Note: the only other line in this whole config file that is uncommented is :

ddns-update-style none&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/default/hostapd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep -E &lt;span class="s1"&gt;&amp;#39;RUN_DAEMON|DAEMON_CONF|DAEMON_OPTS&amp;#39;&lt;/span&gt; /etc/default/hostapd &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;^#&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;RUN_DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/hostapd/hostapd.conf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-dd&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/network/interfaces&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/network/interfaces
auto lo
iface lo inet loopback
auto wlan0
iface wlan0 inet static
    address 10.10.0.1
    netmask 255.255.255.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/sysctl.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep net.ipv4.ip_forward /etc/sysctl.conf 
net.ipv4.ip_forward&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/rc.local&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;编辑 /etc/rc.local, 在 &lt;span class="s2"&gt;&amp;quot;exit 0&amp;quot;&lt;/span&gt; 前添加下一行
iptables -t nat -A POSTROUTING -s 10.10.0.0/16 -o ppp0 -j MASQUERADE
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重启电脑&lt;/h2&gt;
&lt;p&gt;重启电脑，手机测试是否可以连接.&lt;/p&gt;
&lt;h1&gt;方法二&lt;/h1&gt;
&lt;p&gt;用ap-hotspot更容易搭建。&lt;/p&gt;
&lt;h2&gt;ap-hotspot安装、配置&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:nilarimogard/webupd8
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install ap-hotspot
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ap-hotspot configure &lt;span class="c"&gt;# configure&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ap-hotspot start &lt;span class="c"&gt;# start&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ap-hotspot stop &lt;span class="c"&gt;# stop&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ap-hotspot restart &lt;span class="c"&gt;# restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Ubuntu"></category></entry><entry><title>MySQL查看用户权限</title><link href="http://blog.wiseturtles.com/posts/show-grants.html" rel="alternate"></link><updated>2014-12-17T11:25:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-17:posts/show-grants.html</id><summary type="html">&lt;h2&gt;命令&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;SHOW&lt;/span&gt; &lt;span class="caps"&gt;GRANTS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方文档: &lt;a href="http://dev.mysql.com/doc/refman/5.6/en/show-grants.html"&gt;http://dev.mysql.com/doc/refman/5.6/en/show-grants.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;常看帮助&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;HELP&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看当前登陆用户在当前机器上的权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看特定用户在特定主机上的权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# 查看test用户在主机&amp;#39;%&amp;#39;上的权限(没有指定主机时，默认是&amp;#39;%&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看test用户在主机&amp;#39;localhost&amp;#39;上的权限(没有指定主机时，默认是&amp;#39;%&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看用户在哪些主机上分配了权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;各种权限用法表&lt;/h2&gt;
&lt;p&gt;参考自
&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/grant.html"&gt;http://dev.mysql.com/doc/refman/5.6/en/grant.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="table"&gt;
&lt;a name="idm140062991811312"&gt;&lt;/a&gt;&lt;p class="title"&gt;&lt;b&gt;Table&amp;nbsp;13.1&amp;nbsp;Permissible Privileges for &lt;span class="caps"&gt;GRANT&lt;/span&gt; and &lt;span class="caps"&gt;REVOKE&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;div class="table-contents"&gt;
&lt;table summary="Permissible Privileges for GRANT and REVOKE" border="1"&gt;&lt;colgroup&gt;&lt;col&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;thead&gt;&lt;tr&gt;&lt;th scope="col"&gt;Privilege&lt;/th&gt;&lt;th scope="col"&gt;Meaning and Grantable Levels&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_all"&gt;&lt;code class="literal"&gt;ALL [PRIVILEGES]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Grant all privileges at specified access level except
                &lt;a class="link" href="privileges-provided.html#priv_grant-option"&gt;&lt;code class="literal"&gt;GRANT OPTION&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_alter"&gt;&lt;code class="literal"&gt;ALTER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="alter-table.html" title="13.1.7&amp;nbsp;ALTER TABLE Syntax"&gt;&lt;code class="literal"&gt;ALTER TABLE&lt;/code&gt;&lt;/a&gt;. Levels:
                Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_alter-routine"&gt;&lt;code class="literal"&gt;ALTER ROUTINE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable stored routines to be altered or dropped. Levels: Global,
                database, procedure.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create"&gt;&lt;code class="literal"&gt;CREATE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable database and table creation. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-routine"&gt;&lt;code class="literal"&gt;CREATE ROUTINE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable stored routine creation. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-tablespace"&gt;&lt;code class="literal"&gt;CREATE TABLESPACE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable tablespaces and log file groups to be created, altered, or
                dropped. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-temporary-tables"&gt;&lt;code class="literal"&gt;CREATE TEMPORARY TABLES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="create-table.html" title="13.1.17&amp;nbsp;CREATE TABLE Syntax"&gt;&lt;code class="literal"&gt;CREATE
                TEMPORARY TABLE&lt;/code&gt;&lt;/a&gt;. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-user"&gt;&lt;code class="literal"&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="create-user.html" title="13.7.1.2&amp;nbsp;CREATE USER Syntax"&gt;&lt;code class="literal"&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="drop-user.html" title="13.7.1.3&amp;nbsp;DROP USER Syntax"&gt;&lt;code class="literal"&gt;DROP USER&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="rename-user.html" title="13.7.1.5&amp;nbsp;RENAME USER Syntax"&gt;&lt;code class="literal"&gt;RENAME USER&lt;/code&gt;&lt;/a&gt;, and
                &lt;a class="link" href="revoke.html" title="13.7.1.6&amp;nbsp;REVOKE Syntax"&gt;&lt;code class="literal"&gt;REVOKE ALL
                PRIVILEGES&lt;/code&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-view"&gt;&lt;code class="literal"&gt;CREATE VIEW&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable views to be created or altered. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_delete"&gt;&lt;code class="literal"&gt;DELETE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="delete.html" title="13.2.2&amp;nbsp;DELETE Syntax"&gt;&lt;code class="literal"&gt;DELETE&lt;/code&gt;&lt;/a&gt;. Level: Global,
                database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_drop"&gt;&lt;code class="literal"&gt;DROP&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable databases, tables, and views to be dropped. Levels: Global,
                database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_event"&gt;&lt;code class="literal"&gt;EVENT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of events for the Event Scheduler. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_execute"&gt;&lt;code class="literal"&gt;EXECUTE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to execute stored routines. Levels: Global, database,
                table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_file"&gt;&lt;code class="literal"&gt;FILE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to cause the server to read or write files. Level:
                Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_grant-option"&gt;&lt;code class="literal"&gt;GRANT OPTION&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable privileges to be granted to or removed from other accounts.
                Levels: Global, database, table, procedure, proxy.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_index"&gt;&lt;code class="literal"&gt;INDEX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable indexes to be created or dropped. Levels: Global, database,
                table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_insert"&gt;&lt;code class="literal"&gt;INSERT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="insert.html" title="13.2.5&amp;nbsp;INSERT Syntax"&gt;&lt;code class="literal"&gt;INSERT&lt;/code&gt;&lt;/a&gt;. Levels: Global,
                database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_lock-tables"&gt;&lt;code class="literal"&gt;LOCK TABLES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="lock-tables.html" title="13.3.5&amp;nbsp;LOCK TABLES and UNLOCK TABLES Syntax"&gt;&lt;code class="literal"&gt;LOCK TABLES&lt;/code&gt;&lt;/a&gt; on tables for
                which you have the &lt;a class="link" href="select.html" title="13.2.9&amp;nbsp;SELECT Syntax"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;
                privilege. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_process"&gt;&lt;code class="literal"&gt;PROCESS&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to see all processes with &lt;a class="link" href="show-processlist.html" title="13.7.5.30&amp;nbsp;SHOW PROCESSLIST Syntax"&gt;&lt;code class="literal"&gt;SHOW
                PROCESSLIST&lt;/code&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_proxy"&gt;&lt;code class="literal"&gt;PROXY&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable user proxying. Level: From user to user.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_references"&gt;&lt;code class="literal"&gt;REFERENCES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not implemented&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_reload"&gt;&lt;code class="literal"&gt;RELOAD&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="flush.html" title="13.7.6.3&amp;nbsp;FLUSH Syntax"&gt;&lt;code class="literal"&gt;FLUSH&lt;/code&gt;&lt;/a&gt; operations. Level:
                Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_replication-client"&gt;&lt;code class="literal"&gt;REPLICATION CLIENT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to ask where master or slave servers are. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_replication-slave"&gt;&lt;code class="literal"&gt;REPLICATION SLAVE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable replication slaves to read binary log events from the master.
                Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_select"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="select.html" title="13.2.9&amp;nbsp;SELECT Syntax"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;. Levels: Global,
                database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_show-databases"&gt;&lt;code class="literal"&gt;SHOW DATABASES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable &lt;a class="link" href="show-databases.html" title="13.7.5.15&amp;nbsp;SHOW DATABASES Syntax"&gt;&lt;code class="literal"&gt;SHOW DATABASES&lt;/code&gt;&lt;/a&gt; to show all
                databases. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_show-view"&gt;&lt;code class="literal"&gt;SHOW VIEW&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="show-create-view.html" title="13.7.5.14&amp;nbsp;SHOW CREATE VIEW Syntax"&gt;&lt;code class="literal"&gt;SHOW CREATE VIEW&lt;/code&gt;&lt;/a&gt;. Levels:
                Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_shutdown"&gt;&lt;code class="literal"&gt;SHUTDOWN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="mysqladmin.html" title="4.5.2&amp;nbsp;mysqladmin — Client for Administering a MySQL Server"&gt;&lt;span class="command"&gt;&lt;strong&gt;mysqladmin shutdown&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_super"&gt;&lt;code class="literal"&gt;SUPER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of other administrative operations such as
                &lt;a class="link" href="change-master-to.html" title="13.4.2.1&amp;nbsp;CHANGE MASTER TO Syntax"&gt;&lt;code class="literal"&gt;CHANGE MASTER TO&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="kill.html" title="13.7.6.4&amp;nbsp;KILL Syntax"&gt;&lt;code class="literal"&gt;KILL&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="purge-binary-logs.html" title="13.4.1.1&amp;nbsp;PURGE BINARY LOGS Syntax"&gt;&lt;code class="literal"&gt;PURGE BINARY LOGS&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="set-statement.html" title="13.7.4&amp;nbsp;SET Syntax"&gt;&lt;code class="literal"&gt;SET
                GLOBAL&lt;/code&gt;&lt;/a&gt;, and &lt;a class="link" href="mysqladmin.html" title="4.5.2&amp;nbsp;mysqladmin — Client for Administering a MySQL Server"&gt;&lt;span class="command"&gt;&lt;strong&gt;mysqladmin
                debug&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt; command. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_trigger"&gt;&lt;code class="literal"&gt;TRIGGER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable trigger operations. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_update"&gt;&lt;code class="literal"&gt;UPDATE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="update.html" title="13.2.11&amp;nbsp;UPDATE Syntax"&gt;&lt;code class="literal"&gt;UPDATE&lt;/code&gt;&lt;/a&gt;. Levels: Global,
database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_usage"&gt;&lt;code class="literal"&gt;USAGE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Synonym for &lt;span class="quote"&gt;“&lt;span class="quote"&gt;no privileges&lt;/span&gt;”&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;</summary><category term="mysql"></category><category term="user"></category><category term="grants"></category></entry><entry><title>uptime</title><link href="http://blog.wiseturtles.com/posts/linux-uptime.html" rel="alternate"></link><updated>2014-12-15T10:08:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-15:posts/linux-uptime.html</id><summary type="html">&lt;h2&gt;用途&lt;/h2&gt;
&lt;p&gt;man&amp;nbsp;page&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uptime gives a one line display of the following information.  The cur‐
rent time, how long the system has been running,  how  many  users  are
currently  logged  on,  and the system load averages for the past 1, 5,
and 15&amp;nbsp;minutes.&lt;/p&gt;
&lt;p&gt;System load averages is the average number of processes that are either
in a runnable or uninterruptable state.  A process in a runnable  state
is  either  using the &lt;span class="caps"&gt;CPU&lt;/span&gt; or waiting to use the &lt;span class="caps"&gt;CPU&lt;/span&gt;. A process in unin‐
terruptable state is waiting for some I/O access, eg waiting for  disk.
The  averages  are  taken over the three time intervals. Load averages
are not normalized for the number of CPUs in a system, so a load  aver‐
age  of 1 means a single &lt;span class="caps"&gt;CPU&lt;/span&gt; system is loaded all the time while on a 4
&lt;span class="caps"&gt;CPU&lt;/span&gt; system it means it was idle 75% of the&amp;nbsp;time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Load averages are not normalized for the number of CPUs in a system, so a load  aver‐ age  of 1 means a single &lt;span class="caps"&gt;CPU&lt;/span&gt; system is loaded all the time while on a 4 &lt;span class="caps"&gt;CPU&lt;/span&gt; system it means it was idle 75% of the&amp;nbsp;time.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;语法&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;uptime
10:14:31 up &lt;span class="m"&gt;10&lt;/span&gt; days, 20:55,  &lt;span class="m"&gt;6&lt;/span&gt; users,  load average: 0.28, 0.42, 0.54
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面的结果显示的分别是系统的当前时间，运行时间，当前用户数，过去1, 5, 15分钟的系统平均负载
总体来说，值为1时，当只有单个&lt;span class="caps"&gt;CPU&lt;/span&gt;表示已经完全利用，当有４个&lt;span class="caps"&gt;CPU&lt;/span&gt;时，表示还有75%的空闲.&lt;/p&gt;
&lt;p&gt;关于平均负载的值可以阅读&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages"&gt;http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category><category term="command"></category><category term="uptime"></category></entry><entry><title>Upgrade Ubuntu from 10.04 to 12.04</title><link href="http://blog.wiseturtles.com/posts/upgrade-ubuntu-from-10.04-to-12.04.html" rel="alternate"></link><updated>2014-12-04T00:00:00+08:00</updated><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2014-12-04:posts/upgrade-ubuntu-from-10.04-to-12.04.html</id><summary type="html">&lt;p&gt;公司开发人员电脑都安装的是Ubuntu 10.04，现在越来越不好用，而且，很多同事发现编译最新的Firefox &lt;span class="caps"&gt;OS&lt;/span&gt;都有问题，所以，我尝试升级并把碰到的问题记录下来。&lt;/p&gt;
&lt;h1&gt;升级&lt;/h1&gt;
&lt;h2&gt;修改源&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/apt/sources.list
deb http://172.26.32.18/ubuntu/ lucid main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-security main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-updates main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-proposed main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-backports main restricted universe multiverse

&lt;span class="c"&gt;# aliyun&lt;/span&gt;
deb http://mirrors.aliyun.com/ubuntu/ lucid main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-backports main restricted universe multiverse
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;开始升级&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo &lt;span class="k"&gt;do&lt;/span&gt;-release-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;nis无法启动，导致升级过程中配置nis包失败&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep redhat /etc/hosts
172.26.32.12    &lt;span class="nb"&gt;cd&lt;/span&gt;-redhat-001.TCTCD

&lt;span class="nv"&gt;$ &lt;/span&gt;tail -1 /etc/yp.conf 
ypserver &lt;span class="nb"&gt;cd&lt;/span&gt;-redhat-001.TCTCD

&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/defaultdomain 
TCTCD

&lt;span class="nv"&gt;$ &lt;/span&gt;grep NIS /etc/default/nis &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;NISSERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="nv"&gt;NISCLIENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;NISMASTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/auto.master
/home /etc/auto.home

&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/auto.home 
xcsu &lt;span class="nb"&gt;cd&lt;/span&gt;-redhat-001.TCTCD:/home/xcsu

&lt;span class="nv"&gt;$ &lt;/span&gt;/usr/lib/yp/ypinit -s &lt;span class="nb"&gt;cd&lt;/span&gt;-redhat-001.TCTCD

&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service portmap restart
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service nis restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;启动后登录时发现只能用administrator和guest登录&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/lightdm/lightdm.conf 
&lt;span class="o"&gt;[&lt;/span&gt;SeatDefaults&lt;span class="o"&gt;]&lt;/span&gt;
user-session&lt;span class="o"&gt;=&lt;/span&gt;ubuntu
greeter-session&lt;span class="o"&gt;=&lt;/span&gt;unity-greeter
allow-guest&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
greeter-show-manual-login&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重启电脑，就可以用其它用户登录了&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo reboot
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Ubuntu"></category><category term="Nis"></category></entry><entry><title>如何发表文章</title><link href="http://blog.wiseturtles.com/posts/about-wiseturtles.html" rel="alternate"></link><updated>2014-12-03T00:04:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-03:posts/about-wiseturtles.html</id><summary type="html">&lt;h2&gt;为什么要有这个博客&lt;/h2&gt;
&lt;p&gt;方便知识的整理，分享和交流。更主要的是慢慢感觉年纪越来越大(黑线！！！)，记性越来越差，需要一个可以记录东西的地方.&lt;/p&gt;
&lt;p&gt;古话说得好&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好记性不如烂笔头嘛!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;名字的由来&lt;/h2&gt;
&lt;p&gt;为什么取名叫Wise Turtles？在这里我不得不吐槽一下咯。取名字，本来就是一件很难的事情，取一个有意义的名字就更难了，让一个理工宅男来取就难到吐血啦。
为了取一个有意义的名字，同时又能注册到域名和github组织名，我简直是使出了吃奶的力气, 从dota3一直试到了dota100， 域名都被注册了，想死的心都有。
伤心欲绝时，突然灵光一闪，想到了不久前热映的电影《忍者神龟》， 四兄弟团结, 幽默, 充满活力, 这不是我们所追求的团队精神吗? 所以决定以忍者神龟作为名字啦！
悲剧的是turtles竟然也被注册了，坚持着不放弃的原则，我觉得我们团队的兄弟姐妹们比起忍着神龟更加睿智，于是就用Wise Turtles啦！（实在不想再为名字纠结咯），&amp;nbsp;赶紧去注册了域名和github组织名，大功告成！&lt;/p&gt;
&lt;h2&gt;如何加入组织&lt;/h2&gt;
&lt;p&gt;请大家把github的&lt;strong&gt;用户名&lt;/strong&gt;（注意是用户名：而不是登陆邮箱）发给我，&amp;nbsp;我会逐一给大家发送邀请。然后大家用自己的账号登陆github，访问&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wiseturtles"&gt;https://github.com/wiseturtles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;即可接受邀请。&lt;/p&gt;
&lt;h2&gt;博客的功能介绍&lt;/h2&gt;
&lt;p&gt;博客采用开源的&lt;a href="http://blog.getpelican.com"&gt;pelican&lt;/a&gt;静态博客引擎，集成了Disqus评论，百度分享，百度统计(不要问我为什么用百度，你懂的)，支持Atom/&lt;span class="caps"&gt;RSS&lt;/span&gt; feeds
订阅，响应式布局（移动端访问排版依然良好），Travis-ci自动构建文章。文章格式支持Markdown， reStructuredText,&amp;nbsp;html语法。通过jinjia定义主题模板，git版本控制，以及程序员喜欢的语法高亮。&lt;/p&gt;
&lt;p&gt;附上一些常用语法的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wowubuntu.com/markdown/index.html"&gt;Markdown 语法说明&amp;nbsp;(简体中文版)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docutils.sourceforge.net/rst.html"&gt;Rst语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;与博客有关的repo介绍&lt;/h2&gt;
&lt;p&gt;我们的blog主要用到了三个repo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wiseturtles.github.io  (博客静态html文件库，也就是博客展示的最终库，由travis-ci自动修改,&amp;nbsp;不需要手动修改）&lt;/li&gt;
&lt;li&gt;blog  &amp;nbsp;（博客源码库，大家平时写文章时需要提交的库）&lt;/li&gt;
&lt;li&gt;theme    （主题库，可以定制博客的排版，样式和布局,&amp;nbsp;感觉现在博客难看的同学可以修改）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家平时主要使用到的也就是blog这个库，下面就blog的目录结构简单介绍一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 下载blog库&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone --recursive git@github.com:wiseturtles/blog.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;tree -aL 1
.
├── cache       &lt;span class="c"&gt;# 编译生成静态文件的cache库，加快编译速度&lt;/span&gt;
├── content     &lt;span class="c"&gt;# 博客内容库，所有写的文章都按照目录来分类并放在这个目录下面&lt;/span&gt;
├── deploy.sh   &lt;span class="c"&gt;# 部署编译出来的静态文件到wiseturtles.github.io库的脚本，由travis-ci调用&lt;/span&gt;
├── develop_server.sh
├── fabfile.py  &lt;span class="c"&gt;# 封装了常用命令的fab文件&lt;/span&gt;
├── Makefile    &lt;span class="c"&gt;# 封装了常用命令的makefile文件&lt;/span&gt;
├── output      &lt;span class="c"&gt;# 编译生成静态html文件的目录，wiseturtles.github.io库里的内容就是这个目录下的&lt;/span&gt;
├── pelicanconf.py  &lt;span class="c"&gt;# 博客的配置文件&lt;/span&gt;
├── publishconf.py  &lt;span class="c"&gt;# 博客发布时调用的配置文件, 主要覆盖了pelicanconf.py里的一些配置&lt;/span&gt;
├── README.md
├── requirements.txt  &lt;span class="c"&gt;# 记录安装本库需要使用的python包文件&lt;/span&gt;
├── theme       &lt;span class="c"&gt;# 主题目录，其实就是theme库，作为一个子库放在blog里面&lt;/span&gt;
└── .travis.yml &lt;span class="c"&gt;# travis-ci的配置文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所有的文章写好之后，都要放到coetent目录下， 所有的文章按照目录分类，可以根据自己的需要在content下创建需要的目录(目录名会出现在&lt;span class="caps"&gt;URL&lt;/span&gt;中，建议是英文的）。&lt;/p&gt;
&lt;h2&gt;如何搭建本地环境&lt;/h2&gt;
&lt;p&gt;为了使整个过程简洁，下面以&lt;strong&gt;本地python版本为2.7.X, 不创建python虚拟为前提&lt;/strong&gt;。
如果不满足这两个条件，可以参考我的另一片文章 &lt;a href="http://blog.wiseturtles.com/posts/setup-pelican.html"&gt;pelican + github&amp;nbsp;搭建个人Blog&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone --recursive git@github.com:wiseturtles/blog.git  &lt;span class="c"&gt;# 下载代码&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo pip install -r requirements.txt  &lt;span class="c"&gt;# 安装必要的python库, 如果不需要本地预览的话，可以跳过这一步&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;touch content/test/hello.md   &lt;span class="c"&gt;# 此处略去编辑content/test/hello.md文件过程的三千字&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver    &lt;span class="c"&gt;# 启动本地预览的server， 访问http://127.0.0.1:8000/查看文章那个效果&lt;/span&gt;
&lt;span class="c"&gt;# 重复上面两个步骤,直到决定发布文章&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git add content/test/hello.md
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;add hello.md&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;， 打完收工！ 过一会访问我们的博客&lt;a href="http://blog.wiseturtles.com/"&gt;http://blog.wiseturtles.com/&lt;/a&gt;就可以看到自己刚刚发表的文章啦!&lt;/p&gt;
&lt;p&gt;整个过程概述起来就跟把大象放进冰箱一样简单，只需要三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载blog代码&lt;/li&gt;
&lt;li&gt;写好文章&lt;/li&gt;
&lt;li&gt;提交文章&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;在线环境&lt;/h2&gt;
&lt;p&gt;如果感觉搭建本地环境麻烦的话，那就直接用github的在线编辑功能吧。&amp;nbsp;访问&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wiseturtles/blog"&gt;https://github.com/wiseturtles/blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;即可在线编辑.&lt;/p&gt;
&lt;h2&gt;文件模板&lt;/h2&gt;
&lt;p&gt;无论选择Markdown， reStructuredText,&amp;nbsp;html哪种语法，文章模板都应该像下面这样：&lt;/p&gt;
&lt;h3&gt;reStructuredText（Rst）格式（文件名以.rst结尾）&lt;/h3&gt;
&lt;pre&gt;
My super title
##############

:date: 2010-10-03 10:20
:modified: 2010-10-04 18:40
:tags: thats, awesome
:category: yeah
:slug: my-super-post
:authors: Alexis Metaireau, Conan Doyle
:summary: Short version for index and feeds

This is the content of my super blog post.
&lt;/pre&gt;

&lt;h3&gt;md格式(文件名以 .md, .markdown, .mkd,&amp;nbsp;.mdown结尾）&lt;/h3&gt;
&lt;pre&gt;
Title: My super title
Date: 2010-12-03 10:20
Modified: 2010-12-05 19:30
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Authors: Alexis Metaireau, Conan Doyle
Summary: Short version for index and feeds

This is the content of my super blog post.

&lt;/pre&gt;

&lt;h3&gt;html格式(文件名以.html and&amp;nbsp;.htm结尾）&lt;/h3&gt;
&lt;pre&gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;My super title&amp;lt;/title&amp;gt;
&amp;lt;meta name="tags" content="thats, awesome" /&amp;gt;
&amp;lt;meta name="date" content="2012-07-09 22:28" /&amp;gt;
&amp;lt;meta name="modified" content="2012-07-10 20:14" /&amp;gt;
&amp;lt;meta name="category" content="yeah" /&amp;gt;
&amp;lt;meta name="authors" content="Alexis Métaireau, Conan Doyle" /&amp;gt;
&amp;lt;meta name="summary" content="Short version for index and feeds" /&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
This is the content of my super blog post.
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;从上面的模板可以看出，无论选择哪种语言，都包含了共同的信息.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要注意的一点是slug标签的信息就是文章的&lt;span class="caps"&gt;URL&lt;/span&gt;链接，最好不要是中文的&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;代码高亮&lt;/h2&gt;
&lt;p&gt;对于Rst格式,&amp;nbsp;用如下格式&lt;/p&gt;
&lt;pre&gt;

.. code-block:: identifier

   &amp;lt;indented code block goes here&amp;gt;

&lt;/pre&gt;

&lt;p&gt;md格式&lt;/p&gt;
&lt;pre&gt;

A block of text.

    :::identifier
    &amp;lt;code goes here&amp;gt;

&lt;/pre&gt;

&lt;h2&gt;图片和附件管理&lt;/h2&gt;
&lt;p&gt;一般不建议将文章中要使用到的图片或附件提交到blog库中，避免引起blog库迅速增大， blog库建议只保存纯文本的东西。可以将要使用的图片或附件上传到支持外链的第三方存储，然后在文正里直接引用图片或附件的&lt;span class="caps"&gt;URL&lt;/span&gt;。或者单独建立一个git库来保存图片和附件。&lt;/p&gt;
&lt;h2&gt;最后&lt;/h2&gt;
&lt;p&gt;这里只是介绍了大体上的一些用法，更多请参阅: &lt;a href="http://docs.getpelican.com/en/3.5.0/content.html"&gt;http://docs.getpelican.com/en/3.5.0/content.html&lt;/a&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry><entry><title>pelican + github 搭建个人Blog</title><link href="http://blog.wiseturtles.com/posts/setup-pelican.html" rel="alternate"></link><updated>2014-11-30T22:42:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-11-30:posts/setup-pelican.html</id><summary type="html">&lt;h2&gt;为什么选择Pelican&lt;/h2&gt;
&lt;p&gt;想搭建一个博客，不想受门户网站博客的限制，想用更纯净的方式写作，方便数据转移，
专注内容而不是格式，在这个页面&lt;a href="https://www.staticgen.com"&gt;https://www.staticgen.com&lt;/a&gt;罗列了各种语言的静态博客引擎,&amp;nbsp;最终选择了Pelican.&lt;/p&gt;
&lt;p&gt;为什么呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为人生苦短，我用python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;特色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它是一个基于python语言的静态博客引擎&lt;/li&gt;
&lt;li&gt;使用Jinjia作为主题的模板语言&lt;/li&gt;
&lt;li&gt;支持Markdown,&amp;nbsp;reStructuredText格式&lt;/li&gt;
&lt;li&gt;其他牛逼的特色等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装Pelican&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;官方入门指南：&lt;a href="http://docs.getpelican.com/en/latest/getting_started.html"&gt;http://docs.getpelican.com/en/latest/getting_started.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文以Pelican3.5为例，使用Pelican需要python环境，官方推荐的python版本是2.7.X，因此开始之前，最好是检查一下当前系统的python版本是否满足情况。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python --version
Python 2.7.6
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;创建虚拟环境&lt;/h3&gt;
&lt;p&gt;如果当前系统默认是2.7.X, 我们则可以直接创建一个虚拟环境来为安装pelican做准备。
关于python虚拟环境的创建，详细可以参考: &lt;a href="http://liuzhijun.iteye.com/blog/1872241"&gt;http://liuzhijun.iteye.com/blog/1872241&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面说说主要步骤&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo pip install virtualenv virtualenvwrapper
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[[ -s /usr/local/bin/virtualenvwrapper.sh ]] &amp;amp;&amp;amp; source /usr/local/bin/virtualenvwrapper.sh&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;mkvirtualenv pelican &lt;span class="c"&gt;# 创建名字为pelican的虚拟环境，这里可以将pelican替换成任意你喜欢的名字&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;workon pelican &lt;span class="c"&gt;# 激活虚拟环境&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另一种情况是当前系统默认python版本不是2.7.X的，
为了方便及不影响当前系统的python版本，可以使用&lt;a href="https://github.com/utahta/pythonbrew"&gt;pythonbrew&lt;/a&gt;来搭建Python2.7.x环境。
安装步骤: &lt;a href="https://github.com/utahta/pythonbrew/blob/master/README.rst"&gt;https://github.com/utahta/pythonbrew/blob/master/&lt;span class="caps"&gt;README&lt;/span&gt;.rst&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 安装pythonbrew&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;curl -kL http://xrl.us/pythonbrewinstall &lt;span class="p"&gt;|&lt;/span&gt; bash    &lt;span class="c"&gt;# 这步执行成功后会生成目录: ~/.pythonbrew&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[[ -s &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pythonbrew/etc/bashrc ]] &amp;amp;&amp;amp; source &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pythonbrew/etc/bashrc&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew --version      &lt;span class="c"&gt;# 检查是否安装成功&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew install --verbose 2.7.5       &lt;span class="c"&gt;# 安装python 2.7.5&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew use 2.7.5      &lt;span class="c"&gt;# 临时在当前会话使用python 2.7.5&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;which python              &lt;span class="c"&gt;# 检查python版本信息是否正确&lt;/span&gt;

&lt;span class="c"&gt;# 一些关于pythonbrew的常用命令&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew list           &lt;span class="c"&gt;# 查看已经安装了的python版本&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew off            &lt;span class="c"&gt;# 禁用pythonbrew，使用系统默认的python环境&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew list -k        &lt;span class="c"&gt;# 查看pythonbrew提供了哪些python版本可以安装&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew switch 2.7.5   &lt;span class="c"&gt;# 永久切换到python 2.7.5,与use有点不同&lt;/span&gt;
&lt;span class="c"&gt;# 更多命令可以参考官方文档&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用pythonbrew自带的virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew use 2.7.5
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv init       &lt;span class="c"&gt;# 初始化虚拟环境&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv create pelican  &lt;span class="c"&gt;# 创建名字为pelican的虚拟环境，这里可以将pelican替换成任意你喜欢的名字&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv use pelican     &lt;span class="c"&gt;# 开启虚拟环境&lt;/span&gt;

&lt;span class="c"&gt;# 为了以后使用方便,设置penv为开启虚拟环境的别名&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;alias  penv=&amp;#39;pythonbrew use 2.7.5 &amp;amp;&amp;amp; pythonbrew venv use pelican&amp;#39;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc

&lt;span class="c"&gt;# 一些常用的命令&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv list
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv use proj
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv delete proj
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv rename proj proj2
&lt;span class="nv"&gt;$ &lt;/span&gt;pythonbrew venv clone proj proj2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装pelican&lt;/h3&gt;
&lt;p&gt;在配置好了虚拟环境之后，就让我们进入虚拟环境安装pelican吧&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 需要先激活虚拟环境&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;workon pelican  &lt;span class="c"&gt;# 如果是使用的pythonbrew ,则是“penv”&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican markdown typogrif  &lt;span class="c"&gt;# 安装必须的python包&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;博客配置&lt;/h2&gt;
&lt;p&gt;现在一切环境都好了，就让我们开始动手写博客吧&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir myblog           &lt;span class="c"&gt;# 创建一个目录，用于存放博客&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;myblog
&lt;span class="nv"&gt;$ &lt;/span&gt;pelican-quickstart     &lt;span class="c"&gt;# 开始创建博客的向导&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行&lt;code&gt;pelican-quickstart&lt;/code&gt;命令，会有一些问题，根据实际情况选择即可, 暂时不理解的也无所谓，直接回车就行了，后面都可以在配置文件里面修改。&amp;nbsp;通过上面的向导，博客的基本框架就建立起来了。&lt;/p&gt;
&lt;p&gt;默认Pelican提供了Fabric文件和Makefile封装了常用操作, 可以根据自身的喜好选择。&amp;nbsp;下面介绍一些常用的make命令，以后会用得比较频繁。&lt;/p&gt;
&lt;pre&gt;
    $ make     # 直接运行make， 查看命令帮助

    make html                        (re)generate the web site(生成网站)
    make clean                       remove the generated files
    make regenerate                  regenerate files upon modification(每当本地文件被修改时，都自动生存网站）
    make publish                     generate using production settings
    make serve                       serve site at http://localhost:8000 （开始本地服务，可以通过http://localhost:8000查看）
    make devserver                   start/restart develop_server.sh (make regenerate 和make serve两个命令的集合）
    make stopserver                  stop local server (关闭本地服务)
    ssh_upload                       upload the web site via SSH
    rsync_upload                     upload the web site via rsync+ssh
    dropbox_upload                   upload the web site via Dropbox
    ftp_upload                       upload the web site via FTP
    s3_upload                        upload the web site via S3
    github                           upload the web site via gh-pages
&lt;/pre&gt;

&lt;h3&gt;创建第一篇文章&lt;/h3&gt;
&lt;p&gt;说了这么多了，都还没有开始写呢，让我们开始写第一篇文章吧。
pelican 支持三种格式的文件： reStructuredText， markdown和html。
个人偏好于markdwon。下面就主要介绍markdown的吧，其他的可以到&lt;a href="http://docs.getpelican.com/en/3.2/getting_started.html#kickstart-your-site"&gt;官网查看&lt;/a&gt;.&amp;nbsp;上面写得很清楚。&lt;/p&gt;
&lt;p&gt;创建第一篇文章，直接使用官网的例子。文章看起来应该大致像如下模板：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: 文章标题
Date: 2014-11-30 23:15(日期)
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Author: crazygit
Summary: hello

这里是文章内容。
##你好，pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将上面的内容保存到&lt;code&gt;content&lt;/code&gt;目录下，取名为&lt;code&gt;test.md&lt;/code&gt;
。现在就要用到前面的命令了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make html
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在打开&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;，怎么样?&amp;nbsp;看到了我们的第一篇文章了吧。&lt;/p&gt;
&lt;h3&gt;配置文件修改&lt;/h3&gt;
&lt;p&gt;博客的配置通过修改&lt;code&gt;publishconf.py&lt;/code&gt;
文件来实现，由于可以pelican比较灵活，可以配置的地方比较的多，就不介绍了，可以
查看&lt;a href="http://docs.getpelican.com/en/3.2/settings.html"&gt;官方文档&lt;/a&gt;查找自己需要的
。其实，默认的配置基本上已经很好了，我自己除了在配置文件里面加上了时区之外，其他的基本上没有修改什么了。&amp;nbsp;给一个官方的配置文件示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Alexis Métaireau&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Alexis&amp;#39; log&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://blog.notmyidea.org&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Europe/Paris&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# can be useful in development, but set to False when you&amp;#39;re ready to publish&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://github.com/ametaireau/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blog-notmyidea&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;PDF_GENERATOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;REVERSE_CATEGORY_ORDER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Biologeek&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://biologeek.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Filyb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://filyb.info/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Libert-fr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://www.libert-fr.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;N1k0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://prendreuncafe.com/blog/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Tarek Ziadé&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://ziade.org/blog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Zubin Mithra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://zubin71.wordpress.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://twitter.com/ametaireau&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lastfm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://lastfm.com/user/akounet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://github.com/ametaireau&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# global metadata to all the contents&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yeah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;it is&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# static paths will be copied under the same name&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pictures&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# A list of files to copy from the source to the destination&lt;/span&gt;
&lt;span class="n"&gt;FILES_TO_COPY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;extra/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# custom page generated with a jinja2 template&lt;/span&gt;
&lt;span class="n"&gt;TEMPLATE_PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pages/jinja2_template.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;jinja2_template.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# foobar will not be used, because it&amp;#39;s not in caps. All configuration keys&lt;/span&gt;
&lt;span class="c"&gt;# have to be in caps&lt;/span&gt;
&lt;span class="n"&gt;foobar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;barbaz&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;主题安装&lt;/h3&gt;
&lt;p&gt;默认的博客主题是不是不符合你自己的胃口呢？没关系，pelican已经有很多漂亮的主题&amp;nbsp;供你选择了，在&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;已经有很多现成的主题了，打开每个主题的文件夹都有一张主题效果的截图，可以方便选择自己喜欢的主题。什么？这些主题都不满意。好吧，你还可以选择&lt;a href="http://docs.getpelican.com/en/3.2/themes.html#theming-pelican"&gt;创建属于自己独有的主题&lt;/a&gt;。由于个人比较懒，信奉拿来主义，所以就选择了&lt;code&gt;tuxlite_tbs&lt;/code&gt;这个主题，自己只做了一些细节的修改。&lt;/p&gt;
&lt;p&gt;废话不多说，让我们开始安装主题吧。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git://github.com/getpelican/pelican-themes.git ~/pelican-themes &lt;span class="c"&gt;# 下载主题到`~/pelican-themes/`目录下&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/pelican-themes/
&lt;span class="nv"&gt;$ &lt;/span&gt;git submodule init  &lt;span class="c"&gt;# 由于这个git库里面的一些主题是单独的一个子模块，所以将它们一起下载下来&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git submodule update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，现在已经有了所有的主题了，打开每个主题的文件夹都有一张主题效果的截图，选择自己喜欢的主题。&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;publishconf.py&lt;/code&gt; 文件，添加&lt;code&gt;THEME&lt;/code&gt;关键字，如果已经有了，则直接修改值即可，我选择的是&lt;code&gt;tuxlite-tbs&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;THEME = &amp;quot;~/pelican-themes/tuxlite-tbs&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后重新执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make html
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;访问&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;看看新的主题效果吧。&lt;/p&gt;
&lt;h3&gt;主题定制&lt;/h3&gt;
&lt;p&gt;新的主题怎么样呢？是不是还是有点遗憾呢？老外制作的主题总是弄Twitter，Google Plus等。这些东西虽然好，但是我们身在天朝，又用不上，要是我们能够把自己的新浪微博，&lt;span class="caps"&gt;QQ&lt;/span&gt;，等添加到自己的博客里面，看起来是不是更爽一点呢？&amp;nbsp;下面就来添加吧!&lt;/p&gt;
&lt;h3&gt;添加新浪微博关注按钮&lt;/h3&gt;
&lt;p&gt;首先到&lt;a href="http://open.weibo.com/widget/followbutton.php"&gt;新浪开放平台&lt;/a&gt;获取关注按钮的代码吧。在我使用的时候，它主要提供了两中样式，一种是&lt;span class="caps"&gt;WBML&lt;/span&gt;标准版，一种是JavaScript简化版本。在实际使用的时候发现JavaScript版本时候会有一些问题。
&lt;a href="http://open.weibo.com/qa/index.php?qa=11802&amp;amp;qa_1=%E4%BD%BF%E7%94%A8%E5%85%B3%E6%B3%A8%E6%8C%89%E9%92%AEjavascript%E7%AE%80%E5%8C%96%E7%89%88%EF%BC%8C%E6%8F%90%E7%A4%BAclient-js%E6%B2%A1%E6%9C%89sendmessage%E6%96%B9%E6%B3%95&amp;amp;code=4b3704c5bce7d8cc46de2fe229687bdb"&gt;提示client.js没有sendMessage方法&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;因此下面主要介绍如何添加&lt;span class="caps"&gt;WBML&lt;/span&gt;标准版本的。取得类似下面的代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;wb:follow-button&lt;/span&gt; &lt;span class="na"&gt;uid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2991975565&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red_1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;67&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;24&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/wb:follow-button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意上面的uid就是自己微博帐号的id，type就是选择的样式。&amp;nbsp;为了让这个代码有通用性。我将它修改为如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;wb:follow-button&lt;/span&gt; &lt;span class="na"&gt;uid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;WEIBO_UID&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;WEIBO_TYPE&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;64&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/wb:follow-button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样我们就可以通过在&lt;code&gt;pelicanconf.py&lt;/code&gt;通过配置&lt;code&gt;WEIBO_UID&lt;/code&gt;和&lt;code&gt;WEIBO_TYPE&lt;/code&gt;灵活地设置帐号和样式。
将上面的代码保存在weibo.html文件中，并将文件保存到主题代码库的&lt;code&gt;~/pelican-themes/tuxlite-tbs/templates&lt;/code&gt;目录下。&amp;nbsp;再修改这个目录下的base.html文件，引用我们的weibo.html。具体改动如下:&lt;/p&gt;
&lt;p&gt;在&lt;span class="caps"&gt;HTML&lt;/span&gt;标签中增加&lt;span class="caps"&gt;XML&lt;/span&gt;命名空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;html xmlns:wb=“http://open.weibo.com/wb”&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;span class="caps"&gt;HEAD&lt;/span&gt;头中引入&lt;span class="caps"&gt;WB&lt;/span&gt;.&lt;span class="caps"&gt;JS&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://tjs.sjs.sinajs.cn/open/api/js/wb.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在需要显示微博关注按钮的地方includ刚刚的weibo.html，我把它添加在了社交下面.同时设置了&lt;span class="caps"&gt;WEIBO&lt;/span&gt;变量来设置是否显示微博关注按钮&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;WEIBO&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;social&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;well&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;padding: 8px 0; background-color: #FBFBFB;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav nav-list&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav-header&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    新浪微博
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;weibo.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;pelicanconf.py&lt;/code&gt;,&amp;nbsp;添加如下字段：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 新浪微博新关注按钮&lt;/span&gt;
&lt;span class="n"&gt;WEIBO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;WEIBO_UID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1768615155&lt;/span&gt;        &lt;span class="c"&gt;# 填入uid&lt;/span&gt;
&lt;span class="n"&gt;WEIBO_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red_3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译发布并预览。在本地预览的时候可能不会看到效果。需要发布到github&amp;nbsp;pages上面才能看到.下面马上会讲如何部署到github上面.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make html
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;部署到Github上面&lt;/h3&gt;
&lt;p&gt;如何利用github&amp;nbsp;pages功能来创建个人的博客，网上和官网已经有很多教程了，就不再细讲具体步骤的，唯一需要注意的是，它主要分两类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户级别的pages&lt;/li&gt;
&lt;li&gt;项目级别的pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面两个不同之处是提交代码的时候一个是master分支，另一个是gh-pages分支.
因此，我们只需要将output 目录下的内容提交到上面的分支中。
为了做这件事情，我们可以使用前面介绍的ghp-import工具. 同时在我们的Makefile文件中也有封装这个命令
具体使用&lt;a href="http://docs.getpelican.com/en/3.2/tips.html#publishing-to-github"&gt;参考这里&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;但是需要根据实际修改Makefile文件中的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
    ghp-import &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
    git push origin gh-pages   &lt;span class="c"&gt;# 根据实际使用的pages情况修改这里&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改好了之后，可以直接使用&lt;code&gt;make github&lt;/code&gt; 发布博客了.&lt;/p&gt;
&lt;p&gt;我使用的用户级别的pages时，具体修改如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;myblog &lt;span class="c"&gt;# 进入博客代码目录&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin git@github.com:username/username.github.io.git &lt;span class="c"&gt;# 需要替换username&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git add .
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s1"&gt;&amp;#39;init pelican source code&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;penv  &lt;span class="c"&gt;#打开虚拟环境&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make html 编译代码
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改Makefile文件如下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
    ghp-import &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# 这一步会在本地创建一个gh-pages分支。并将OUTPUTDIR里面的内容拷贝到这个分支&lt;/span&gt;
    git push -f origin gh-pages:master
&lt;span class="c"&gt;# 注意我这里添加了参数f，在后面每次往master 分支提交代码的时候，如果有冲突，会强制覆盖master的代码&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后一步，提交代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，打开你自己的github pages, 如&lt;a href="http://username.github.io/"&gt;http://username.github.io/&lt;/a&gt;查看效果。&lt;strong&gt;注意&lt;/strong&gt;： 首次部署到github pages&amp;nbsp;需要等15分钟才有效&lt;/p&gt;
&lt;h3&gt;使用google在线字体&lt;/h3&gt;
&lt;p&gt;有些时候，我们想在文章中使用一些好看的字体，怎么办呢？伟大的Google替我们解决了这个问题，提供了&lt;a href="http://www.google.com/fonts/"&gt;Google Web Fonts&lt;/a&gt;。
在这里可以选择一些好看的字体来用。怎么用也写得很清楚，就不再这里叙述了。
一些效果如下：
&lt;p class="googlefont"&gt;Hello Google Web&amp;nbsp;Fonts&lt;/p&gt;
&lt;p class="font-effect-fire-animation"&gt;Hello Google&amp;nbsp;Fonts&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是上面的字体有些老的浏览器不支持，所以在使用的时候注意下当前的浏览器是否支持这些字体。&lt;/p&gt;
&lt;h3&gt;图片添加&lt;/h3&gt;
&lt;p&gt;有时候，再多的语言，也比不上一张图片来得直白，虽然我们可以将图片直接放在写博客的代码库里面再直接引用。但是个人感觉这样做并不好。图片一多，代码库就明显变大。一点也不方便。最好的方法是选用一个第三方的图片托管，支持外链的。这样我们只需要在图片托管处上传图片，然后在博客里面引用即可。在网上搜寻一番之后，在&lt;a href="http://c7sky.com/image-storage-server.html"&gt;这里&lt;/a&gt;找到了一些关于各种图片托管的介绍。在这里我选择了yupoo。大家也可以根据自己的需求任意选择一款。不说了，直接上图吧.&lt;/p&gt;
&lt;p&gt;&lt;img alt="第一张图片" src="http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;由于markdown语法本身没有代办设置图片布局，所以可以用html标签来设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Test Image&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p align="center"&gt;&lt;img src="http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg" title="Test Image"/&gt;&lt;/p&gt;

&lt;h3&gt;添加文章评论系统，分享按钮，访问统计&lt;/h3&gt;
&lt;p&gt;这些步骤与添加新浪关注按钮一样，就不再赘述了。
这些设置再我当前使用的主题中都添加了，如果有需要的话大家可以&lt;a href="https://github.com/crazygit/pelican-themes-tuxlite-tbs-mine"&gt;参考一下&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;其他功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;导入已经存在的博客&lt;/li&gt;
&lt;li&gt;文字的多语言设置&lt;/li&gt;
&lt;li&gt;个人私有文章和草稿箱&lt;/li&gt;
&lt;li&gt;插件使用&lt;/li&gt;
&lt;li&gt;标签云&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt;订阅&lt;/li&gt;
&lt;li&gt;文章分类&lt;/li&gt;
&lt;li&gt;&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些功能&lt;a href="http://docs.getpelican.com"&gt;官方文档&lt;/a&gt;都有介绍，可以自己查找。&lt;/p&gt;
&lt;h3&gt;结束语&lt;/h3&gt;
&lt;p&gt;暂时使用到的功能就这么多了，以后有什么新的添加我会更新的，由于小弟也是刚刚接触这个，加上文笔不怎么好，如果有什么不明白的地方或错误的地方，欢迎留言，大家一起交流下。&lt;/p&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry></feed>