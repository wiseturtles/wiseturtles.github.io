<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wise Turtles</title><link href="http://blog.wiseturtles.com/" rel="alternate"></link><link href="http://blog.wiseturtles.com/feeds/all.atom.xml" rel="self"></link><id>http://blog.wiseturtles.com/</id><updated>2016-06-15T22:09:00+08:00</updated><entry><title>Write Your First ASM Program</title><link href="http://blog.wiseturtles.com/posts/Write-Your-First-ASM-Program.html" rel="alternate"></link><published>2016-06-15T22:09:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-06-15:posts/Write-Your-First-ASM-Program.html</id><summary type="html">&lt;p&gt;用汇编写个Hello&amp;nbsp;World，同时看看如何一步一步将c程序编译成可执行文件。&lt;/p&gt;
&lt;h2&gt;开发环境准备&lt;/h2&gt;
&lt;p&gt;所有开发都在Ubuntu上完成，需要用的binutils, gcc,&amp;nbsp;gdb。&lt;/p&gt;
&lt;p&gt;Ubuntu上安装软件很方便，指令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install binutils gcc gdb
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;asm Hello&amp;nbsp;World&lt;/h2&gt;
&lt;p&gt;用asm写个Hello World，.data数据段中定义msg变量为 &amp;#8220;Hello World\n&amp;#8221;，.text指令段从_start开始，否则需要ld时指定-e label。&amp;nbsp;程序调用了printf输出msg，然后调用exit(0)退出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat hello.s
&lt;span class="c1"&gt;#hello.s Just a Hello World in asm.&lt;/span&gt;
.section .data
msg:
    .ascii &lt;span class="s2"&gt;&amp;quot;Hello World\n&amp;quot;&lt;/span&gt;
.section .text
.globl _start
_start:
    movl &lt;span class="nv"&gt;$4&lt;/span&gt;, %eax
    movl &lt;span class="nv"&gt;$1&lt;/span&gt;, %ebx
    movl &lt;span class="nv"&gt;$msg&lt;/span&gt;, %ecx
    movl &lt;span class="nv"&gt;$12&lt;/span&gt;, %edx
    int &lt;span class="nv"&gt;$0&lt;/span&gt;x80
    movl &lt;span class="nv"&gt;$1&lt;/span&gt;, %eax
    movl &lt;span class="nv"&gt;$0&lt;/span&gt;, %ebx
    int &lt;span class="nv"&gt;$0&lt;/span&gt;x80
$ as -o hello.o hello.s
$ ld -o hello hello.o
$ ./hello
Hello World
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;如何一步一步编译、链接c程序&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat helloc.c
&lt;span class="c1"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

int main&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    printf&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello World\n&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    exit&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

$ gcc -S helloc.c
$ as -o helloc.o helloc.s
$ ld -e main -lc -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o helloc helloc.o
$ ./helloc
Hello World
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;说明：
- gcc -S生成c代码对应的汇编代码，但是汇编代码中的.globl label为main
- 因为汇编代码的&lt;code&gt;.globl label&lt;/code&gt;是&lt;code&gt;main&lt;/code&gt;，所以必须使用&lt;code&gt;-e&lt;/code&gt;参数指定label为&lt;code&gt;main&lt;/code&gt;；默认是&lt;code&gt;_start&lt;/code&gt;
- 因为汇编代码直接使用了c的库函数printf、exit，所以必须指定-lc链接c标准库
- -lc动态链接c标准库，所以，必须指定运行时加载动态库的程序，即：&lt;code&gt;-dynamic-linker /lib64/ld-linux-x86-64.so.2&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;asm Hello World&amp;nbsp;(改进版)&lt;/h2&gt;
&lt;p&gt;既然汇编代码中可以直接调用c的标准库函数，那就看看怎么改进之前的hello.s。
下面代码调用c库中的puts和exit函数。
可以用gcc编译、链接汇编代码，而gcc默认只认&lt;code&gt;.globl main&lt;/code&gt;而不是&lt;code&gt;.globl _start&lt;/code&gt;，所以，我们下面用&lt;code&gt;.globl main&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat new_hello.s
&lt;span class="c1"&gt;#new_hello.s Just a &amp;quot;Hello World&amp;quot;&lt;/span&gt;
.section .data
msg:
    .string &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
.section .text
.global main
main:
    movl &lt;span class="nv"&gt;$msg&lt;/span&gt;, %edi
    call puts
    movl &lt;span class="nv"&gt;$0&lt;/span&gt;, %edi
    call &lt;span class="nb"&gt;exit&lt;/span&gt;
$ as -o new_hello.o new_hello.s
$ ld -e main -lc -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o new_hello new_hello.o
$ ./new_hello
Hello World

$ gcc -o new_hello new_hello.s  &lt;span class="c1"&gt;# 当然可以直接用这条指令编译、链接生成可执行文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="asm"></category><category term="Linux"></category></entry><entry><title>Ubuntu/Debian自动安装安全更新</title><link href="http://blog.wiseturtles.com/posts/ubuntu-debian-automatic-security-updates.html" rel="alternate"></link><published>2016-05-06T12:38:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-05-06:posts/ubuntu-debian-automatic-security-updates.html</id><summary type="html">&lt;p&gt;有台Ubuntu机器，仅仅为了科学上网，但，这年头漏洞这么多，万一哪天成肉鸡了呢。。。&lt;/p&gt;
&lt;p&gt;本文简单记录下Ubuntu系统配置自己安装系统安全补丁。(Debian系统应该也适用)&lt;/p&gt;
&lt;h2&gt;安装unattended-upgrades自动更新安全补丁&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install unattended-upgrades
$ sudo dpkg-reconfigure unattended-upgrades  &lt;span class="c1"&gt;# 选Yes，自动下载安装&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据自己情况修改配置文件 - &lt;code&gt;/etc/apt/apt.conf.d/50unattended-upgrades&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以设置邮件通知。&lt;/p&gt;
&lt;h2&gt;如果只想收到邮件通知，可以安装apticron&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt-get install apticron
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改配置文件 - &lt;code&gt;/etc/apticron/apticron.conf&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;订阅相关邮件列表，了解最新安全信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[Ubuntu Security Notices]&lt;a href="http://www.ubuntu.com/usn/"&gt;http://www.ubuntu.com/usn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Debian Security Information]&lt;a href="https://www.debian.org/security/index.en.html"&gt;https://www.debian.org/security/index.en.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/AutomaticSecurityUpdates"&gt;https://help.ubuntu.com/community/AutomaticSecurityUpdates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spin.atomicobject.com/2014/08/04/debian-ubuntu-security-updates/"&gt;https://spin.atomicobject.com/2014/08/04/debian-ubuntu-security-updates/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Ubunu"></category><category term="Debian"></category></entry><entry><title>MySQL自动备份，并同步到AmazonS3</title><link href="http://blog.wiseturtles.com/posts/MySQL-backup-to-Amazon-S3.html" rel="alternate"></link><published>2016-04-05T11:39:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-04-05:posts/MySQL-backup-to-Amazon-S3.html</id><summary type="html">&lt;p&gt;MySQL自动备份，并将本地备份同步到Amazon&amp;nbsp;S3，然后配置邮件通知。&lt;/p&gt;
&lt;p&gt;注: 系统为Ubuntu&amp;nbsp;14.04，Debian系统也类似。&lt;/p&gt;
&lt;h2&gt;安装automysqlbackup&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install automysqlbackup
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置automysqlbackup&lt;/h2&gt;
&lt;h3&gt;参数介绍&lt;/h3&gt;
&lt;p&gt;配置文件路径: &lt;code&gt;/etc/default/automysqlbackup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;主要参数:
&lt;span class="caps"&gt;USERNAME&lt;/span&gt; - 数据库登陆用户名
&lt;span class="caps"&gt;PASSWORD&lt;/span&gt; - 数据库登陆密码
&lt;span class="caps"&gt;DBHOST&lt;/span&gt; - 数据库主机名或&lt;span class="caps"&gt;IP&lt;/span&gt;地址
&lt;span class="caps"&gt;DBNAMES&lt;/span&gt; - 需要备份的MySQL数据库
&lt;span class="caps"&gt;BACKUPDIR&lt;/span&gt; - 备份文件存放路径
&lt;span class="caps"&gt;SOCKET&lt;/span&gt; - MySQL服务的本地unix socket路径
&lt;span class="caps"&gt;MAILCONTENT&lt;/span&gt; - 发送邮件内容，可以为: log, files, stdout, quiet
&lt;span class="caps"&gt;MAXATTSIZE&lt;/span&gt; - 最大允许的邮件内容大小
&lt;span class="caps"&gt;MAILADDR&lt;/span&gt; - 接收通知的邮箱地址
&lt;span class="caps"&gt;PREBACKUP&lt;/span&gt; - 备份前运行的脚本
&lt;span class="caps"&gt;POSTBACKUP&lt;/span&gt; -&amp;nbsp;备份后运行的脚本&lt;/p&gt;
&lt;p&gt;其它参数参考 &lt;code&gt;/etc/default/automysqlbackup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;DBNAMES&lt;/code&gt;, &lt;code&gt;BACKUPDIR&lt;/code&gt;，指定需要备份的数据库名称和备份文件存放路径。&lt;/p&gt;
&lt;h3&gt;发送邮件通知&lt;/h3&gt;
&lt;p&gt;修改&lt;code&gt;MAILCONTENT&lt;/code&gt;, &lt;code&gt;MAILADDR&lt;/code&gt;指定发送什么内容到指定邮箱。&lt;/p&gt;
&lt;p&gt;注:&amp;nbsp;先确保通过postfix在命令行可以发送邮件到你的邮箱.&lt;/p&gt;
&lt;h3&gt;备份到Amazon&amp;nbsp;S3&lt;/h3&gt;
&lt;p&gt;安装s3cmd，使用s3cmd同步备份文件到Amazon&amp;nbsp;S3。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install s3cmd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;POSTBACKUP&lt;/code&gt;，备份完成后同步备份文件到Amazon&amp;nbsp;S3。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;POSTBACKUP=/etc/automysqlbackup/mysql-backup-post
$ cat /etc/automysqlbackup/mysql-backup-post
#!/bin/bash

sudo /usr/local/bin/s3cmd -c /home/user/.s3cfg -r sync local-automysqlbackup-path s3://your-backup-bucket/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注: 备份前配置s3cmd，确保它有权限操作你的S3&amp;nbsp;bucket&lt;/p&gt;</summary><category term="mysql"></category><category term="backup"></category><category term="S3"></category></entry><entry><title>Gerrit备份</title><link href="http://blog.wiseturtles.com/posts/Gerrit-backup.html" rel="alternate"></link><published>2016-03-11T18:52:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-03-11:posts/Gerrit-backup.html</id><summary type="html">&lt;p&gt;将Gerrit实时同步到其它系统完成Gerrit git repos备份。通常用这种方式完成Gerrit&amp;nbsp;Mirror。&lt;/p&gt;
&lt;h2&gt;通过Gerrit replication&amp;nbsp;plugin完成Gerrit同步&lt;/h2&gt;
&lt;h3&gt;安装buck&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ sudo apt-get install ant
ubuntu@gerrit$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/download
ubuntu@gerrit$ git clone https://github.com/facebook/buck.git
ubuntu@gerrit$ &lt;span class="nb"&gt;cd&lt;/span&gt; buck
ubuntu@gerrit$ ant  &lt;span class="c1"&gt;# 编译完成后 buck 可执行文件就在当前的bin目录&lt;/span&gt;
ubuntu@gerrit$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;export PATH=$HOME/download/buck/bin:$PATH&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
ubuntu@gerrit$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;编译replication&amp;nbsp;plugin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ git clone https://gerrit.googlesource.com/gerrit
ubuntu@gerrit$ git checkout -b v2.11.4-tag v2.11.4  &lt;span class="c1"&gt;# 我gerrit版本是2.11.4&lt;/span&gt;
ubuntu@gerrit$ git submodule update --init --recursive
ubuntu@gerrit$ buck build plugins/replication:replication
ubuntu@gerrit$ cp buck-out/gen/plugins/replication/replication.jar /tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装replication&amp;nbsp;plugin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ ssh -p &lt;span class="m"&gt;29418&lt;/span&gt; localhost gerrit plugin install -n replication.jar - &amp;lt;/tmp/replication.jar
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置replication&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ cat etc/replication.config
&lt;span class="o"&gt;[&lt;/span&gt;remote &lt;span class="s2"&gt;&amp;quot;gerrit-backup&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; ubuntu@10.x.x.x:/data/gerrit-backup/git/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.git
    &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; +refs/heads/*:refs/heads/*
    &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; +refs/tags/*:refs/tags/*
    &lt;span class="nv"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 30
    &lt;span class="nv"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 3
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;同步一份代码到backup&amp;nbsp;gerrit&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit-backup $ sudo mkdir -p /data/gerrit-backup
ubuntu@gerrit-backup $ sudo chown -R ubuntu /data
ubuntu@gerrit-backup $ &lt;span class="nb"&gt;exit&lt;/span&gt;  &lt;span class="c1"&gt;# 退出gerrit-backup&lt;/span&gt;

ubuntu@gerrit$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/apps/gerrit/review_site  &lt;span class="c1"&gt;# 登陆gerrit,并进入Gerrit目录&lt;/span&gt;
ubuntu@gerrit$ tar cf - git &lt;span class="p"&gt;|&lt;/span&gt; ssh gerrit-backup &lt;span class="s2"&gt;&amp;quot;cd /data/gerrit-backup &amp;amp;&amp;amp; tar xf -&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;开始同步&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ ssh -p &lt;span class="m"&gt;29418&lt;/span&gt; localhost gerrit plugin reload replication  &lt;span class="c1"&gt;# reload&lt;/span&gt;
ubuntu@gerrit$ ssh -p &lt;span class="m"&gt;29418&lt;/span&gt; localhost replication start --wait --all  &lt;span class="c1"&gt;# start replication&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Gerrit&amp;nbsp;MySQL备份&lt;/h2&gt;
&lt;p&gt;通过automysqlbackup备份MySQL数据到本地文件系统.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@gerrit$ sudo apt-get install automysqlbackup
ubuntu@gerrit$ sudo automysqlbackup  &lt;span class="c1"&gt;# 运行automysqlbackup测试是否可以备份，可能需要修改 /etc/default/automysqlbackup 和 /etc/mysql* 配置文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果需要可以将MySQL数据定期同步到Amazon&amp;nbsp;S3等系统存储.&lt;/p&gt;
&lt;h2&gt;参考文档:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gerrit.googlesource.com/gerrit/+/v2.0.2/Documentation/config-replication.txt"&gt;config-replication.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Gerrit"></category><category term="replication"></category><category term="MySQL"></category></entry><entry><title>Mac System Intregrity Protection - Operation not permitted</title><link href="http://blog.wiseturtles.com/posts/Mac-System-Intregrity-Protection.html" rel="alternate"></link><published>2016-02-16T14:36:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-02-16:posts/Mac-System-Intregrity-Protection.html</id><summary type="html">&lt;p&gt;貌似刚拿到电脑是自己手动编译安装了vim 7.3，后来都是brew install&amp;nbsp;vim最新版本。&lt;/p&gt;
&lt;p&gt;今天vim出了点问题，发现系统上还有个vim 7.3，准备删除时就报&lt;code&gt;Operation not permitted&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo rm -rf /usr/share/vim/
rm: /usr/share/vim: Operation not permitted
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;习惯Linux我就觉得有没有搞错，我是root呀，什么文件不能删除呢。。。&lt;/p&gt;
&lt;p&gt;Google下才知道Apple为了防止恶意软件破坏系统开启了&lt;a href="https://support.apple.com/en-us/HT204899"&gt;System Intregrity Protection&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;解决&lt;/h2&gt;
&lt;p&gt;查看文件flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -lO /usr/share/vim
-rwxr-xr-x  &lt;span class="m"&gt;8&lt;/span&gt; root  wheel  restricted - Aug  &lt;span class="m"&gt;2&lt;/span&gt; 22:36 /usr/share/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考: &lt;a href="http://stackoverflow.com/questions/30768087/restricted-folder-files-in-os-x-el-capitan"&gt;http://stackoverflow.com/questions/30768087/restricted-folder-files-in-os-x-el-capitan&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reboot&lt;/li&gt;
&lt;li&gt;as soon as you hear the &amp;#8220;Mac sound&amp;#8221; on the grey screen, press Cmd+R to enter Recovery&amp;nbsp;mode&lt;/li&gt;
&lt;li&gt;Open&amp;nbsp;Utilities-&amp;gt;Terminal&lt;/li&gt;
&lt;li&gt;Run the command csrutil&amp;nbsp;disable&lt;/li&gt;
&lt;li&gt;Reboot, you&amp;#8217;ll land in the normal &lt;span class="caps"&gt;OS&lt;/span&gt; with &lt;span class="caps"&gt;SIP&lt;/span&gt;&amp;nbsp;disabled&lt;/li&gt;
&lt;li&gt;do all the changes you&amp;#8217;d like to&amp;nbsp;do&lt;/li&gt;
&lt;li&gt;Reboot&amp;nbsp;again&lt;/li&gt;
&lt;li&gt;as soon as you hear the &amp;#8220;Mac sound&amp;#8221; on the grey screen, press Cmd+R to enter Recovery&amp;nbsp;mode&lt;/li&gt;
&lt;li&gt;Enable &lt;span class="caps"&gt;SIP&lt;/span&gt; with csrutil&amp;nbsp;enable&lt;/li&gt;
&lt;li&gt;Reboot&amp;nbsp;again&lt;/li&gt;
&lt;li&gt;done&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;流程如下:&lt;/p&gt;
&lt;p&gt;重启 -&amp;gt; Command+R，进入恢复模式 -&amp;gt; 在终端通过&lt;code&gt;csrutil disable&lt;/code&gt;禁掉&lt;span class="caps"&gt;SIP&lt;/span&gt; -&amp;gt; 重启 -&amp;gt; 删除文件 -&amp;gt; 再通过Command+R，进入恢复模式 -&amp;gt; 通过 &lt;code&gt;csrutil enable&lt;/code&gt; 启用&lt;span class="caps"&gt;SIP&lt;/span&gt; -&amp;gt;&amp;nbsp;再次重启&lt;/p&gt;
&lt;p&gt;查看&lt;span class="caps"&gt;SIP&lt;/span&gt;状态:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ csrutil status
System Integrity Protection status: enabled.
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Mac"></category><category term="SIP"></category></entry><entry><title>Maven通过plugin在Tomcat、Jetty中运行项目</title><link href="http://blog.wiseturtles.com/posts/maven-plugin-tomcat-jetty-run.html" rel="alternate"></link><published>2016-02-09T16:00:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2016-02-09:posts/maven-plugin-tomcat-jetty-run.html</id><summary type="html">&lt;p&gt;记录下如何在pom.xml中配置插件，通过tomcat、Jetty运行项目.&lt;/p&gt;
&lt;h2&gt;配置pom.xml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tomcat6-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tomcat7-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mortbay.jetty&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jetty-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;/h2&gt;
&lt;h3&gt;Maven Tomcat&amp;nbsp;plugin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mvn tomcat:run
$ mvn tomcat7:run
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Maven Jetty&amp;nbsp;plugin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mvn jetty:run
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Java"></category><category term="Maven"></category><category term="Tomcat"></category><category term="Jetty"></category></entry><entry><title>Mac Python ValueError: unknown locale: UTF-8</title><link href="http://blog.wiseturtles.com/posts/mac-python-ValueError-unknown-locale-utf-8.html" rel="alternate"></link><published>2015-12-13T08:39:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-12-13:posts/mac-python-ValueError-unknown-locale-utf-8.html</id><summary type="html">&lt;p&gt;Mac brew更新软件报locale utf-8&amp;nbsp;unknown。&lt;/p&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;brew update &amp;amp;&amp;amp; brew upgrade&lt;/code&gt;，更新 mpv 时报错: &lt;code&gt;ValueError: unknown locale: UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;确定当前locale&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ locale
&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;LC_COLLATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_CTYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_MESSAGES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_MONETARY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_NUMERIC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Python获取当前locale&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python -c &lt;span class="s1"&gt;&amp;#39;import locale; print(locale.getdefaultlocale());&amp;#39;&lt;/span&gt;
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
File &lt;span class="s2"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;, line 1, in &amp;lt;module&amp;gt;
File &lt;span class="s2"&gt;&amp;quot;/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py&amp;quot;&lt;/span&gt;, line 543, in getdefaultlocale &lt;span class="k"&gt;return&lt;/span&gt; _parse_localename&lt;span class="o"&gt;(&lt;/span&gt;localename&lt;span class="o"&gt;)&lt;/span&gt;
File &lt;span class="s2"&gt;&amp;quot;/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py&amp;quot;&lt;/span&gt;, line 475, in _parse_localename raise ValueError, &lt;span class="s1"&gt;&amp;#39;unknown locale: %s&amp;#39;&lt;/span&gt; % localename
ValueError: unknown locale: UTF-8
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;解决&lt;/h4&gt;
&lt;p&gt;设置locale为en_US.&lt;span class="caps"&gt;UTF&lt;/span&gt;-8，我使用的zsh，所以在&lt;code&gt;~/.zshrc&lt;/code&gt;中添加locale设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LC_CTYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再通过Python获取当前locale：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python -c &lt;span class="s1"&gt;&amp;#39;import locale; print(locale.getdefaultlocale());&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en_US&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;brew upgrade&lt;/code&gt;也正常工作了。&lt;/p&gt;</summary><category term="Python"></category><category term="Shell"></category><category term="Mac"></category></entry><entry><title>top</title><link href="http://blog.wiseturtles.com/posts/linux-top.html" rel="alternate"></link><published>2015-11-23T14:21:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-11-23:posts/linux-top.html</id><summary type="html">&lt;h2&gt;简介&lt;/h2&gt;
&lt;p&gt;top命令的具体就不解释了，记录一些实用的命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# redis用户此时所使用的内存总数&lt;/span&gt;
&lt;span class="c1"&gt;# 这里的内存使用&lt;/span&gt;
top -bn1 -u redis &lt;span class="p"&gt;|&lt;/span&gt;  awk &lt;span class="s1"&gt;&amp;#39;{mem += $10} END {print mem}&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# 查看服务器所有进程的内容使用总数&lt;/span&gt;
&lt;span class="c1"&gt;# 结果可能大于100%，反应出目前机器内容可用较少, 具体解释可以参考&lt;/span&gt;
&lt;span class="c1"&gt;# http://serverfault.com/questions/471757/sum-of-memory-of-few-processes-in-top-is-greater-than-100&lt;/span&gt;
$ top -bn1 &lt;span class="p"&gt;|&lt;/span&gt;  awk &lt;span class="s1"&gt;&amp;#39;{mem += $10} END {print mem}&amp;#39;&lt;/span&gt;
135.6
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="command"></category><category term="top"></category></entry><entry><title>Jenkins自动构建iOS应用</title><link href="http://blog.wiseturtles.com/posts/Jenkins-auto-build-iOS-apps.html" rel="alternate"></link><published>2015-11-11T15:42:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-11-11:posts/Jenkins-auto-build-iOS-apps.html</id><summary type="html">&lt;p&gt;最近折腾用Jenkins自动构建iOS应用。&lt;/p&gt;
&lt;h2&gt;编译环境&lt;/h2&gt;
&lt;p&gt;为了构建iOS应用，必须找台Mac电脑做slave。
安装很简单，貌似brew install&amp;nbsp;jenkins就可以了，然后，Jenkins页面上将它加入作为slave。&lt;/p&gt;
&lt;h2&gt;开发者证书&lt;/h2&gt;
&lt;p&gt;为了可以编译、打包，需要制作开发者证书，并导出为.p12, .cer, .mobileprovision&amp;nbsp;生成过程自己Google吧。&lt;/p&gt;
&lt;h2&gt;编译、打包命令&lt;/h2&gt;
&lt;p&gt;同意Xcode和Apple &lt;span class="caps"&gt;SDK&lt;/span&gt;协议:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo xcodebuild -license
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我用Facebook开源的xctool编译iOS应用，安装xctool。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install xctool
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我没有使用Jenkins的Xcode插件，直接通过如下命令编译:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ xctool -workspace &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;WORKSPACE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -scheme &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SCHEME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; archive -archivePath &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCHIVEPATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;IPA_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
$ xcrun -sdk iphoneos PackageApplication -v &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PROJECT_BUILDDIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/*.app -o &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCHIVEPATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;IPA_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.ipa&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成dSYM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DSYM_INPUT_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; zip -r -X &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DSYM_ZIP_OUTPUT_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; *.dSYM &lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# zipping dSYM for testflight upload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;碰到的问题&lt;/h2&gt;
&lt;h3&gt;User interaction is not&amp;nbsp;allowed&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ security unlock-keychain -p &amp;lt;your-passwd&amp;gt; /Users/wlw/Library/Keychains/login.keychain
$ security show-keychain-info ~/Library/Keychains/login.keychain
$ set-keychain-settings -t &lt;span class="m"&gt;3600&lt;/span&gt; -l ~/Library/Keychains/login.keychain
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开始在命令行运行完还是一直报这个错误，后来，将unlock-keychain命令放在编译命令前就好了。&lt;/p&gt;
&lt;p&gt;记得编译前先运行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ security unlock-keychain -p &amp;lt;your-passwd&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/Library/Keychains/login.keychain&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;参考文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.egeek.me/2013/02/23/jenkins-and-xcode-user-interaction-is-not-allowed/"&gt;http://www.egeek.me/2013/02/23/jenkins-and-xcode-user-interaction-is-not-allowed/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Jenkins"></category><category term="Mac"></category><category term="iOS"></category></entry><entry><title>Linux远程文件拷贝</title><link href="http://blog.wiseturtles.com/posts/copy-remote-host-file.html" rel="alternate"></link><published>2015-11-11T10:12:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-11-11:posts/copy-remote-host-file.html</id><summary type="html">&lt;p&gt;我们经常会碰到从一个主机上拷贝文件到其他主机，本文汇总下常用方法。&lt;/p&gt;
&lt;h2&gt;ssh&lt;/h2&gt;
&lt;p&gt;提到远程文件拷贝，大家肯定首先想到的是ssh。(啥? 你想到的是ftp??&amp;nbsp;搭建个ftp好麻烦&amp;#8230;)&lt;/p&gt;
&lt;p&gt;避免输入用户密码，可以先运行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-copy-id &amp;lt;user@remote-host&amp;gt;  &lt;span class="c1"&gt;# 输入密码，它会将你的key(~/.ssh/id_rsa.pub)添加到remote-host:~user/.ssh/authorized_keys&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过scp做文件拷贝:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scp &lt;span class="o"&gt;[&lt;/span&gt;-r&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-P port&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;your-local-file&amp;gt; &lt;span class="o"&gt;[]&lt;/span&gt;&amp;lt;user&amp;gt;@&lt;span class="o"&gt;]&lt;/span&gt;&amp;lt;remote-host&amp;gt;:&amp;lt;remote-file-path&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果网络比较慢可以先压缩再拷贝:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh user@remote-host &lt;span class="s2"&gt;&amp;quot;tar zcf - /file/path/to/copy&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tar zxf - -C /file/path/to/receive  &lt;span class="c1"&gt;# 从remote-host拷贝文件回来&lt;/span&gt;
$ tar zcf - /file/path/to/copy &lt;span class="p"&gt;|&lt;/span&gt; ssh user@remote-host &lt;span class="s2"&gt;&amp;quot;tar zxf - -C /file/path/to/receive&amp;quot;&lt;/span&gt;  &lt;span class="c1"&gt;# 将本地文件拷贝到remote-host&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;也可以通过&lt;span class="caps"&gt;HTTP&lt;/span&gt;协议拷贝，如果本地正好有nginx/apache，ln -s 创建个软链接到外部可以访问的路径，从其它机器可以通过wget下载。
但，不是所有机器都装了nginx/apache，可以通过Python自带模块快速启动一个&lt;span class="caps"&gt;HTTP&lt;/span&gt; Simple&amp;nbsp;Server。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python -mSimpleHTTPServer  &lt;span class="c1"&gt;# 默认监听8000端口，你当然可以自己指定端口&lt;/span&gt;
$ python -mSimpleHTTPServer &lt;span class="m"&gt;8888&lt;/span&gt;  &lt;span class="c1"&gt;# 指定监听端口为8888&lt;/span&gt;
$ wget listen-ip:port/&amp;lt;file/path&amp;gt; &lt;span class="c1"&gt;# 从其它主机拷贝文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;既然已经有了&lt;span class="caps"&gt;HTTP&lt;/span&gt;&amp;nbsp;Server，你当然可以通过浏览器访问了。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt;完全可以支持断点续传，wget -c&amp;nbsp;就可以。&lt;/p&gt;
&lt;h2&gt;rsync&lt;/h2&gt;
&lt;p&gt;大家可能都体会过scp传输过程中，网络、主机异常导致必须重新传，小文件、网络快还好，不然真的想打人。&amp;nbsp;你一定想如果可以断点续传就好了，rsync可以完成你的心愿。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -P --rsh&lt;span class="o"&gt;=&lt;/span&gt;ssh --progress &amp;lt;your-local-file&amp;gt; user@remote-host:&amp;lt;receive-file-path&amp;gt;
$ rsync -P -v -e ssh &amp;lt;local-file&amp;gt; user@remote-host:receive-file-path  &lt;span class="c1"&gt;# 本地同步文件到remote-host&lt;/span&gt;
$ rsync -P -v -e ssh user@remote-host:receive-file-path &amp;lt;local-file-path&amp;gt;  &lt;span class="c1"&gt;# remote-host文件同步到本地&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;rsync功能强大，以后再补充。&lt;/p&gt;
&lt;h2&gt;zsync&lt;/h2&gt;
&lt;p&gt;先安装后看文档吧，基于&lt;span class="caps"&gt;HTTP&lt;/span&gt;的rsync，使用有一定限制，必须服务端有 .zsync&amp;nbsp;才行。优点是速度非常快。&lt;/p&gt;</summary><category term="Linux"></category><category term="ssh"></category><category term="sync"></category><category term="python"></category><category term="tar"></category></entry><entry><title>Python Gevent安装报错</title><link href="http://blog.wiseturtles.com/posts/gevent-install-error.html" rel="alternate"></link><published>2015-10-31T20:46:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-10-31:posts/gevent-install-error.html</id><summary type="html">&lt;p&gt;Mac上pip安装gevent报错信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;libev/ev.c:1029:42: error: &amp;#39;_Noreturn&amp;#39; keyword must precede function declarator
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-std=c99&amp;#39;&lt;/span&gt; pip install gevent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里有讨论：https://github.com/NixOS/nixpkgs/issues/8569&lt;/p&gt;</summary><category term="python"></category><category term="pip"></category><category term="gevent"></category></entry><entry><title>scrapyd和scrapyd-client使用教程</title><link href="http://blog.wiseturtles.com/posts/scrapyd.html" rel="alternate"></link><published>2015-10-29T17:42:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-10-29:posts/scrapyd.html</id><summary type="html">&lt;p&gt;scrapyd是一个用于部署和运行scrapy爬虫的程序，它允许你通过&lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt;来部署爬虫项目和控制爬虫运行&lt;/p&gt;
&lt;h2&gt;概览&lt;/h2&gt;
&lt;h3&gt;项目和版本&lt;/h3&gt;
&lt;p&gt;scrapyd可以管理多个项目，并且每个项目允许有多个版本，但是只有最新的版本会被用来运行爬虫.&lt;/p&gt;
&lt;p&gt;最方便的版本管理就是利用&lt;span class="caps"&gt;VCS&lt;/span&gt;工具来记录你的爬虫代码，版本比较不是简单的通过字母排序，而是通过智能的算法，和&lt;a href="https://docs.python.org/2/library/distutils.html"&gt;distutils&lt;/a&gt;一样，例如:&amp;nbsp;r10比r９更大.&lt;/p&gt;
&lt;h3&gt;工作原理&lt;/h3&gt;
&lt;p&gt;scrapyd是一个守护进程，监听爬虫的运行和请求，然后启动进程来执行它们&lt;/p&gt;
&lt;h3&gt;启动服务&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 注意，启动scrapyd的目录会保存整个scrapyd运行期间生成的log, item文件，所以请选择合适的位置运行该命令&lt;/span&gt;
$ scrapyd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;调度爬虫运行&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/schedule.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject -d &lt;span class="nv"&gt;spider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;spider2
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;jobid&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;26d1b1a6d6f111e0be5c001e648c57f8&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;web接口&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://localhost:6800/"&gt;http://localhost:6800/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;h3&gt;需求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python&amp;nbsp;2.6+&lt;/li&gt;
&lt;li&gt;Twisted&amp;nbsp;8.0+&lt;/li&gt;
&lt;li&gt;Scrapy&amp;nbsp;0.17+&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install scrapyd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install scrapyd
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;项目部署&lt;/h2&gt;
&lt;p&gt;直接使用&lt;a href="https://github.com/scrapy/scrapyd-client"&gt;scrapyd-client&lt;/a&gt;提供的&lt;code&gt;scrapyd-deploy&lt;/code&gt;工具.&lt;/p&gt;
&lt;h3&gt;安装scrapyd-client&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install scrapyd-client
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;scrapyd-client工作原理&lt;/h3&gt;
&lt;p&gt;打包项目，然后调用&lt;code&gt;scrapyd&lt;/code&gt;的&lt;a href="https://scrapyd.readthedocs.org/en/latest/api.html#addversion-json"&gt;&lt;code&gt;addversion.json&lt;/code&gt;&lt;/a&gt;接口部署项目&lt;/p&gt;
&lt;h3&gt;配置服务器信息&lt;/h3&gt;
&lt;p&gt;为了方便叙述，整个部署流程以部署&lt;a href="https://github.com/crazygit/scrapy_demo/tree/master/douban_movie"&gt;豆瓣电影&lt;/a&gt;爬虫为例。
配置服务器和项目信息, 需要编辑&lt;code&gt;scrapy.cfg&lt;/code&gt;文件，添加如下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[deploy:server-douban]&lt;/span&gt;
&lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;http://localhost:6800/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中&lt;code&gt;server-douban&lt;/code&gt;为服务器名称, &lt;code&gt;url&lt;/code&gt;为服务器地址，即运行了&lt;code&gt;scrapyd&lt;/code&gt;命令的服务器。&lt;/p&gt;
&lt;p&gt;检查配置,&amp;nbsp;列出当前可用的服务器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy -l
server-douban        http://localhost:6800/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;列出服务器上所有的项目, 需要确保服务器上的&lt;code&gt;scrapyd&lt;/code&gt;命令正在执行，否则会报连接失败.首次运行的话，可以看到只有一个&lt;code&gt;default&lt;/code&gt;项目&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy -L server-douban
default
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打开&lt;a href="http://localhost:6800/"&gt;http://localhost:6800/&lt;/a&gt;, 可以看到&lt;code&gt;Available projects: default&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;部署项目&lt;/h3&gt;
&lt;p&gt;在爬虫项目根目录下执行下面的命令, 其中&lt;code&gt;target&lt;/code&gt;为上一步配置的服务器名称，&lt;code&gt;project&lt;/code&gt;为项目名称，可以根据实际情况自己指定。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scrapyd-deploy &amp;lt;target&amp;gt; -p &amp;lt;project&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy server-douban -p douban-movies
Packing version 1446102534
Deploying to project &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt; in http://localhost:6800/addversion.json
Server response &lt;span class="o"&gt;(&lt;/span&gt;200&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;project&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1446102534&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;spiders&amp;quot;&lt;/span&gt;: 1, &lt;span class="s2"&gt;&amp;quot;node_name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;sky&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;部署操作会打包你的当前项目，如果当前项目下有&lt;code&gt;setup.py&lt;/code&gt;文件，就会使用它，没有的会就会自动创建一个。(如果后期项目需要打包的话，可以根据自己的需要修改里面的信息，也可以暂时不管它).&amp;nbsp;从返回的结果里面，我们可以看到部署的状态，项目名称，版本号和爬虫个数，以及当前的主机名称.&lt;/p&gt;
&lt;p&gt;检查部署结果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy -L server-douban
default
douban-movies
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或再次打开&lt;a href="http://localhost:6800/"&gt;http://localhost:6800/&lt;/a&gt;, 也可以看到&lt;code&gt;Available projects: default, douban-movies&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们也可以把项目信息写入到配置文件中，部署时就不用指定项目信息，编辑&lt;code&gt;scrapy.cfg&lt;/code&gt;文件，添加项目信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[deploy:server-douban]&lt;/span&gt;
&lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;http://localhost:6800/&lt;/span&gt;
&lt;span class="na"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;douban-movies&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下次部署可以直接执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果配置了多个服务器的话，可以将项目直接部署到多台服务器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scrapyd-deploy -a -p &amp;lt;project&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;指定版本号&lt;/h3&gt;
&lt;p&gt;默认情况下, &lt;code&gt;scrapyd-deploy&lt;/code&gt;使用当前的时间戳作为版本号，我们可以使用&lt;code&gt;--version&lt;/code&gt;来指定版本号&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scrapyd-deploy &amp;lt;target&amp;gt; -p &amp;lt;project&amp;gt; --version &amp;lt;version&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;版本号的格式必须满足&lt;a href="http://epydoc.sourceforge.net/stdlib/distutils.version.LooseVersion-class.html"&gt;LooseVersion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 设置版本号为0.1&lt;/span&gt;
$ scrapyd-deploy server-douban -p douban-movies --version 0.1
Packing version 0.1
Deploying to project &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt; in http://localhost:6800/addversion.json
Server response &lt;span class="o"&gt;(&lt;/span&gt;200&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;project&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;spiders&amp;quot;&lt;/span&gt;: 1, &lt;span class="s2"&gt;&amp;quot;node_name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;sky&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果使用了&lt;code&gt;Mercurial&lt;/code&gt;或&lt;code&gt;Git&lt;/code&gt;管理代码，　可以使用&lt;code&gt;HG&lt;/code&gt;和&lt;code&gt;GIT&lt;/code&gt;作为version的参数，也可以将它写入&lt;code&gt;scrapy.cfg&lt;/code&gt;文件，那么就会使用当前的reversion作为版本号。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[deploy:target]&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;GIT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat scrapy.cfg
...
&lt;span class="o"&gt;[&lt;/span&gt;deploy:server-douban&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; http://localhost:6800/
&lt;span class="nv"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; douban-movies
&lt;span class="nv"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; GIT

&lt;span class="c1"&gt;# 当前版本号为r7-master&lt;/span&gt;
$ scrapyd-deploy server-douban -p douban-movies 
fatal: No names found, cannot describe anything.
Packing version r7-master
Deploying to project &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt; in http://localhost:6800/addversion.json
Server response &lt;span class="o"&gt;(&lt;/span&gt;200&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;project&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;douban-movies&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;r7-master&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;spiders&amp;quot;&lt;/span&gt;: 1, &lt;span class="s2"&gt;&amp;quot;node_name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;sky&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于从&lt;span class="caps"&gt;GIT&lt;/span&gt;获取版本号的方式，可以参看&lt;code&gt;scrapyd-client&lt;/code&gt;源码部分&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;describe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rev-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rev-parse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--abbrev-ref&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;服务器添加认证信息&lt;/h3&gt;
&lt;p&gt;我们也可以在scrapyd前面加一层反向代理来实现用户认证。以nginx为例,&amp;nbsp;配置nginx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;6801&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;proxy_pass&lt;/span&gt;            &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6800&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;auth_basic&lt;/span&gt;            &lt;span class="s2"&gt;&amp;quot;Restricted&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;auth_basic_user_file&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;htpasswd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htpasswd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/etc/nginx/htpasswd/user.htpasswd&lt;/code&gt;里设置的用户名和密码都是&lt;code&gt;test&lt;/code&gt;
修改配置文件，添加用户信息信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
[deploy:server-douban]
url = http://localhost:6801/
project = douban-movies
version = GIT
username = test
password = test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意上面的&lt;code&gt;url&lt;/code&gt;已经修改为了nginx监听的端口。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提醒&lt;/strong&gt;: 记得修改服务器上scrapyd的配置&lt;code&gt;bind_address&lt;/code&gt;字段为&lt;code&gt;127.0.0.1&lt;/code&gt;，以免可以从外面绕过nginx, 直接访问6800端口。&amp;nbsp;关于配置可以参看本文后面的配置文件设置.&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;API&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;scrapyd的web界面比较简单，主要用于监控，所有的调度工作全部依靠接口实现.
具体可以参考&lt;a href="http://scrapyd.readthedocs.org/en/stable/api.html"&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常用接口:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;调度爬虫&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/schedule.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject -d &lt;span class="nv"&gt;spider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;somespider
&lt;span class="c1"&gt;# 带上参数&lt;/span&gt;
$ curl http://localhost:6800/schedule.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject -d &lt;span class="nv"&gt;spider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;somespider -d &lt;span class="nv"&gt;setting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;DOWNLOAD_DELAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; -d &lt;span class="nv"&gt;arg1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;val1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取消&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/cancel.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject -d &lt;span class="nv"&gt;job&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6487ec79947edab326d6db28a2d86511e8247444
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出项目&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/listprojects.json
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/listversions.json?project&lt;span class="o"&gt;=&lt;/span&gt;myproject
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出爬虫&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/listspiders.json?project&lt;span class="o"&gt;=&lt;/span&gt;myproject
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出job&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/listjobs.json?project&lt;span class="o"&gt;=&lt;/span&gt;myproject
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/delversion.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject -d &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r99
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除项目&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:6800/delproject.json -d &lt;span class="nv"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置文件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;scrapyd&lt;/code&gt;启动的时候会自动搜索配置文件，配置文件的加载顺序为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/scrapyd/scrapyd.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/scrapyd/conf.d/*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scrapyd.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.scrapyd.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后加载的会覆盖前面的设置&lt;/p&gt;
&lt;p&gt;默认配置文件如下,&amp;nbsp;可以根据需要修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[scrapyd]&lt;/span&gt;
&lt;span class="na"&gt;eggs_dir&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;eggs&lt;/span&gt;
&lt;span class="na"&gt;logs_dir&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;logs&lt;/span&gt;
&lt;span class="na"&gt;items_dir&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;items&lt;/span&gt;
&lt;span class="na"&gt;jobs_to_keep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5&lt;/span&gt;
&lt;span class="na"&gt;dbs_dir&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;dbs&lt;/span&gt;
&lt;span class="na"&gt;max_proc&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;max_proc_per_cpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4&lt;/span&gt;
&lt;span class="na"&gt;finished_to_keep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;100&lt;/span&gt;
&lt;span class="na"&gt;poll_interval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5&lt;/span&gt;
&lt;span class="na"&gt;http_port&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;6800&lt;/span&gt;
&lt;span class="na"&gt;debug&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;off&lt;/span&gt;
&lt;span class="na"&gt;runner&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.runner&lt;/span&gt;
&lt;span class="na"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.app.application&lt;/span&gt;
&lt;span class="na"&gt;launcher&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.launcher.Launcher&lt;/span&gt;

&lt;span class="k"&gt;[services]&lt;/span&gt;
&lt;span class="na"&gt;schedule.json&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.Schedule&lt;/span&gt;
&lt;span class="na"&gt;cancel.json&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.Cancel&lt;/span&gt;
&lt;span class="na"&gt;addversion.json&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.AddVersion&lt;/span&gt;
&lt;span class="na"&gt;listprojects.json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.ListProjects&lt;/span&gt;
&lt;span class="na"&gt;listversions.json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.ListVersions&lt;/span&gt;
&lt;span class="na"&gt;listspiders.json&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.ListSpiders&lt;/span&gt;
&lt;span class="na"&gt;delproject.json&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.DeleteProject&lt;/span&gt;
&lt;span class="na"&gt;delversion.json&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.DeleteVersion&lt;/span&gt;
&lt;span class="na"&gt;listjobs.json&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;scrapyd.webservice.ListJobs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于配置的各个参数具体含义，可以参考&lt;a href="http://scrapyd.readthedocs.org/en/stable/config.html"&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;更新&lt;/h2&gt;
&lt;p&gt;上面的对于&lt;code&gt;scrapyd&lt;/code&gt;默认项目(即是启动&lt;code&gt;scrapyd&lt;/code&gt;命令后看到的&lt;code&gt;default&lt;/code&gt;项目.)的理解有些错误，只有在scrapy项目里启动&lt;code&gt;scrapyd&lt;/code&gt;命令
时才有默认项目，默认项目就是当前的&lt;code&gt;scrapy&lt;/code&gt;项目，如果在非scrapy项目下执行&lt;code&gt;scrapyd&lt;/code&gt;, 是看不到&lt;code&gt;default&lt;/code&gt;的，　
在爬虫里项目里直接使用&lt;code&gt;scrapyd&lt;/code&gt;命令的好处是: 直接通调度爬虫运行, 比较适用于当前爬虫项目代码结构不规范，没法&lt;code&gt;Eggifying&lt;/code&gt;的情况，因为在使用&lt;code&gt;scrapyd-client&lt;/code&gt;部署爬虫的前提就是爬虫项目必须满足下面的条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Deploying your project to a Scrapyd server typically involves two&amp;nbsp;steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eggifying your project. You&amp;#8217;ll need to install setuptools for this. See Egg Caveats&amp;nbsp;below.&lt;/li&gt;
&lt;li&gt;Uploading the egg to the Scrapyd server through the addversion.json&amp;nbsp;endpoint.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;关于scrapyd，个人感觉比较适合单机部署爬虫和调度使用，分布式的爬虫调度可能不太合适，需要每台机器上都启动这样一个服务，日志也没有办法集中，用jenkins来做可能更合适.&lt;/p&gt;</summary><category term="scrapyd"></category><category term="scrapy"></category><category term="scrapyd-client"></category></entry><entry><title>Android命令行工具</title><link href="http://blog.wiseturtles.com/posts/Android-command-line-tools.html" rel="alternate"></link><published>2015-10-27T19:52:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-10-27:posts/Android-command-line-tools.html</id><summary type="html">&lt;h2&gt;Android命令行工具&lt;/h2&gt;
&lt;h3&gt;android&lt;/h3&gt;
&lt;p&gt;下面介绍命令行下使用android脚本。&lt;/p&gt;
&lt;p&gt;场景：命令行下安装android build tools、sdk、&lt;span class="caps"&gt;API&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;获取所有可用的包:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ android list sdk -a -u
$ android list sdk -a -u --proxy-host proxy-host --proxy-port proxy-port  &lt;span class="c1"&gt;# 设置代理&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装指定的包：(num1,&amp;nbsp;num2是上面命令返回的序号)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ android update sdk -u -a -t &amp;lt;num1,num2&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Android"></category></entry><entry><title>Python Pypi源</title><link href="http://blog.wiseturtles.com/posts/config-python-pip.html" rel="alternate"></link><published>2015-10-15T21:52:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-10-15:posts/config-python-pip.html</id><summary type="html">&lt;h2&gt;pip安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget https://bootstrap.pypa.io/get-pip.py
$ sudo python get-pip.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者，直接使用发行版的包管理安装:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install python-pip  &lt;span class="c1"&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;pip配置&lt;/h2&gt;
&lt;p&gt;官方源比较慢，上面是一些国内源。&lt;/p&gt;
&lt;h3&gt;国内pypi源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://pypi.mirrors.ustc.edu.cn/simple/&lt;/li&gt;
&lt;li&gt;http://mirrors.aliyun.com/pypi/simple/&lt;/li&gt;
&lt;li&gt;http://pypi.v2ex.com/simple&lt;/li&gt;
&lt;li&gt;http://pypi.douban.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;修改pip默认源&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat .pip/pip.conf
&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="o"&gt;]&lt;/span&gt;
trusted-host &lt;span class="o"&gt;=&lt;/span&gt; mirrors.aliyun.com
index-url &lt;span class="o"&gt;=&lt;/span&gt; http://mirrors.aliyun.com/pypi/simple/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果使用阿里云主机，请用下面的地址:
index-url =&amp;nbsp;http://mirrors.aliyuncs.com/pypi/simple/&lt;/p&gt;
&lt;p&gt;不加trusted-host会报下面的警告:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The repository located at mirrors.aliyun.com is not a trusted or secure host and is being ignored. If this repository is available via &lt;span class="caps"&gt;HTTPS&lt;/span&gt; it is recommended to use &lt;span class="caps"&gt;HTTPS&lt;/span&gt; instead, otherwise you may silence this warning and allow it anyways with &amp;#8216;&amp;#8212;trusted-host&amp;nbsp;mirrors.aliyun.com&amp;#8217;.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="python"></category><category term="pip"></category><category term="pypi"></category></entry><entry><title>Nginx配置SSL证书</title><link href="http://blog.wiseturtles.com/posts/nginx-config-ssl-certificate.html" rel="alternate"></link><published>2015-10-10T13:27:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-10-10:posts/nginx-config-ssl-certificate.html</id><summary type="html">&lt;p&gt;本文参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cocoachina.com/ios/20150703/12392.html"&gt;http://www.cocoachina.com/ios/20150703/12392.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hack0nair.me/2014-08-14-nginx-with-ssl-of-wosign/"&gt;https://hack0nair.me/2014-08-14-nginx-with-ssl-of-wosign/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://note.sdo.com/u/634668972018478681/n/Z1NG3C6A959F29DD2FA2D543B8C9B30B551810C3"&gt;http://note.sdo.com/u/634668972018478681/n/&lt;span class="caps"&gt;Z1NG3C6A959F29DD2FA2D543B8C9B30B551810C3&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://op.baidu.com/2015/04/https-s01a01/"&gt;http://op.baidu.com/2015/04/https-s01a01/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oncenote.com/2014/10/21/Security-1-HTTPS/"&gt;http://oncenote.com/2014/10/21/Security-1-&lt;span class="caps"&gt;HTTPS&lt;/span&gt;/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oncenote.com/2015/09/16/Security-2-HTTPS2/"&gt;http://oncenote.com/2015/09/16/Security-2-&lt;span class="caps"&gt;HTTPS2&lt;/span&gt;/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.vobe.io/114"&gt;https://www.vobe.io/114&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Nginx配置&lt;span class="caps"&gt;SSL&lt;/span&gt;证书, 启用&lt;span class="caps"&gt;HTTPS&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS9把所有的http请求都改为https了：iOS9系统发送的网络请求将统一使用&lt;span class="caps"&gt;TLS&lt;/span&gt; 1.2 &lt;span class="caps"&gt;SSL&lt;/span&gt;。
采用&lt;span class="caps"&gt;TLS&lt;/span&gt; 1.2 协议，目的是 强制增强数据访问安全，而且 系统 Foundation 框架下的相关网络请求，
将不再默认使用 Http 等不安全的网络协议，而默认采用 &lt;span class="caps"&gt;TLS&lt;/span&gt; 1.2。服务器因此需要更新，以解析相关数据。
如不更新，可通过在 Info.plist&amp;nbsp;中声明，倒退回不安全的网络请求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了客户端接口更加安全，申请免费&lt;span class="caps"&gt;SSL&lt;/span&gt;证书，启用&lt;span class="caps"&gt;HTTPS&lt;/span&gt;。&lt;/p&gt;
&lt;h2&gt;申请证书&lt;/h2&gt;
&lt;p&gt;从Wosign申请免费证书，&lt;a href="https://www.wosign.com/DVSSL/DV_KuaiSSL_Free.htm"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;配置Nginx&lt;/h2&gt;
&lt;p&gt;证书申请到会提示下载一个zip文件，解压缩后有 &lt;code&gt;for Nginx.zip&lt;/code&gt;，解压缩&lt;code&gt;for Nginx.zip&lt;/code&gt;得到 &lt;code&gt;*.crt&lt;/code&gt; 和 &lt;code&gt;*.key&lt;/code&gt;。
将&lt;code&gt;.crt&lt;/code&gt; 和 &lt;code&gt;.key&lt;/code&gt; 文件放入Nginx主机的 /etc/ssl&amp;nbsp;目录。&lt;/p&gt;
&lt;p&gt;生成dhparam.pem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /etc/ssl/certs
$ openssl dhparam -out dhparam.pem 4096
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同时，启用了spdy，参考: &lt;a href="https://www.vobe.io/114"&gt;https://www.vobe.io/114&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nginx配置文件(&lt;code&gt;/etc/nginx/sites-avaiable/default&lt;/code&gt;)如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;#server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;   &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;   &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;   &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="n"&gt;Strict&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Transport&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15768000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;   &lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;如果希望&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="err"&gt;直接跳转到&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="err"&gt;，删除该行，并去掉上面的注释&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt; &lt;span class="n"&gt;spdy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;spdy_headers_comp&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_certificate&lt;/span&gt;      &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_certificate_key&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl_protocols&lt;/span&gt; &lt;span class="n"&gt;TLSv1&lt;/span&gt; &lt;span class="n"&gt;TLSv1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;TLSv1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;AES256+EECDH:AES256+EDH:!aNULL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="m"&gt;#ssl&lt;/span&gt;&lt;span class="n"&gt;_ciphers&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;ssl_prefer_server_ciphers&lt;/span&gt;  &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_dhparam&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhparam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl_session_cache&lt;/span&gt;    &lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_session_timeout&lt;/span&gt;  &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl_stapling&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="m"&gt;#ssl&lt;/span&gt;&lt;span class="n"&gt;_trusted_certificate&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;trustchain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="m"&gt;#resolv&lt;/span&gt;&lt;span class="n"&gt;er&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="n"&gt;valid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;300s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="m"&gt;#resolv&lt;/span&gt;&lt;span class="n"&gt;er_timeout&lt;/span&gt; &lt;span class="m"&gt;10s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="n"&gt;Strict&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Transport&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15768000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Frame&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Options&lt;/span&gt; &lt;span class="n"&gt;DENY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Options&lt;/span&gt; &lt;span class="n"&gt;nosniff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="n"&gt;Alternate&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Protocol&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;npn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;spdy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;Host&lt;/span&gt;                 &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Forwarded&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Proto&lt;/span&gt;    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Forwarded&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;For&lt;/span&gt;      &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass&lt;/span&gt;         &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8888&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;span class="caps"&gt;HTTPS&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;curl测试服务器上的https接口:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl https://your-domain/your-services
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试&lt;span class="caps"&gt;HTTPS&lt;/span&gt;配置的是否安全：&lt;a href="https://www.ssllabs.com/ssltest/"&gt;https://www.ssllabs.com/ssltest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：如果安全评分比较低，请认真阅读&lt;a href="http://note.sdo.com/u/634668972018478681/n/Z1NG3C6A959F29DD2FA2D543B8C9B30B551810C3"&gt;Strong &lt;span class="caps"&gt;SSL&lt;/span&gt; Security on&amp;nbsp;nginx&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;测试&lt;span class="caps"&gt;SPDY&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;检测配置的&lt;span class="caps"&gt;SPDY&lt;/span&gt;：&lt;a href="https://spdycheck.org/"&gt;https://spdycheck.org/&lt;/a&gt;&lt;/p&gt;</summary><category term="nginx"></category><category term="ssl"></category><category term="https"></category></entry><entry><title>Gradle代理设置</title><link href="http://blog.wiseturtles.com/posts/set-gradle-proxy.html" rel="alternate"></link><published>2015-09-29T14:45:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-29:posts/set-gradle-proxy.html</id><summary type="html">&lt;p&gt;Android使用Gradle做构建工具，编译apk时可能需要从网上下载一些依赖包，国内网络情况大家都懂得。&lt;/p&gt;
&lt;h2&gt;Gradle代理设置&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.gradle/gradle.properties
systemProp.http.proxyHost&lt;span class="o"&gt;=&lt;/span&gt;your-proxy
systemProp.http.proxyPort&lt;span class="o"&gt;=&lt;/span&gt;proxy-port
&lt;span class="c1"&gt;#systemProp.http.proxyUser=userid&lt;/span&gt;
&lt;span class="c1"&gt;#systemProp.http.proxyPassword=password&lt;/span&gt;
&lt;span class="c1"&gt;#systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="gradle"></category></entry><entry><title>iptables配置</title><link href="http://blog.wiseturtles.com/posts/iptables-on-debian-centos.html" rel="alternate"></link><published>2015-09-23T16:40:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-23:posts/iptables-on-debian-centos.html</id><summary type="html">&lt;p&gt;最近使用阿里云&lt;span class="caps"&gt;ECS&lt;/span&gt;，发现既然没有提供安全组，能让小白用户方便的配置下允许外网访问的端口。&amp;nbsp;默认所有绑定到外网ip或四个零的端口，外网都可以访问，然后，看看iptables文档，自己来配下咯。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://sentry.readthedocs.org/en/stable/index.html#"&gt;官方安装文档&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;安装iptables&lt;/h2&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;p&gt;安装:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install iptables
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Debian系统中不需要启动iptables。&lt;/p&gt;
&lt;h3&gt;CentOS&lt;/h3&gt;
&lt;p&gt;安装:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install iptables -y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service iptables start
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置iptables&lt;/h3&gt;
&lt;p&gt;配置指令Debian、CentOS都一样。&lt;/p&gt;
&lt;p&gt;这两段抄的&lt;a href="http://blog.kkyun.com/?p=50"&gt;kkyun&amp;nbsp;blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;清除防火墙规则:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```
#首先在清除前要将policy INPUT改成ACCEPT,表示接受一切请求。
#这个一定要先做，不然清空后可能会悲剧
$ sudo iptables -P INPUT ACCEPT

#清空默认所有规则
$ sudo iptables -F

#清空自定义的所有规则
$ sudo iptables -X

#计数器置0
$ sudo iptables -Z
```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;常用配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```
# 允许来自于lo接口的数据包
# 如果没有此规则，你将不能通过127.0.0.1访问本地服务，例如ping 127.0.0.1
$ sudo iptables -A INPUT -i lo -j ACCEPT

# ssh端口22
$ sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT

# FTP端口21
$ sudo iptables -A INPUT -p tcp --dport 21 -j ACCEPT

# web服务端口80
$ sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT

# tomcat
$ sudo iptables -A INPUT -p tcp --dport xxxx -j ACCEPT

# mysql
$ sudo iptables -A INPUT -p tcp --dport xxxx -j ACCEPT

#允许icmp包通过,也就是允许ping
$ sudo iptables -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

#允许所有对外请求的返回包
#本机对外请求相当于OUTPUT,对于返回数据包必须接收啊，这相当于INPUT了
$ sudo iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT

#如果要添加内网ip信任（接受其所有TCP请求）
$ sudo iptables -A INPUT -p tcp -s 45.96.174.68 -j ACCEPT

#过滤所有非以上规则的请求
$ sudo iptables -P INPUT DROP

#要封停一个IP，使用下面这条命令：
$ sudo iptables -I INPUT -s ***.***.***.*** -j DROP

#要解封一个IP，使用下面这条命令:
$ sudo iptables -D INPUT -s ***.***.***.*** -j DROP
```
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;保存iptables配置&lt;/h3&gt;
&lt;p&gt;iptables配置好在当前环境生效，但，重启系统就不再可用。&amp;nbsp;所以，我们需要将iptables配置信息保存下来，并在下次系统开机时自动加载。&lt;/p&gt;
&lt;h4&gt;Debian&lt;/h4&gt;
&lt;p&gt;重启时自动加载iptables配置信息:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install iptables-persistent
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;CentOS&lt;/h4&gt;
&lt;p&gt;保存iptables配置信息:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables:&lt;span class="o"&gt;[&lt;/span&gt;  OK  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启自动运行iptables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chkconfig iptables on
&lt;/pre&gt;&lt;/div&gt;</summary><category term="iptables"></category></entry><entry><title>Debian 8.2上安装Sentry</title><link href="http://blog.wiseturtles.com/posts/setup-sentry-on-debian-8.2.html" rel="alternate"></link><published>2015-09-22T15:55:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-22:posts/setup-sentry-on-debian-8.2.html</id><summary type="html">&lt;p&gt;Sentry是一个很好用的错误、异常收集平台，支持Python, Node.js, &lt;span class="caps"&gt;PHP&lt;/span&gt;, Ruby, Java,&amp;nbsp;Go以及Android、iOS。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://sentry.readthedocs.org/en/stable/index.html#"&gt;官方安装文档&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;系统环境&lt;/h2&gt;
&lt;p&gt;查看系统版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsb_release -a
No LSB modules are available.
Distributor ID: Debian
Description:    Debian GNU/Linux 8.2 &lt;span class="o"&gt;(&lt;/span&gt;jessie&lt;span class="o"&gt;)&lt;/span&gt;
Release:    8.2
Codename:   jessie
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;准备数据库环境&lt;/h2&gt;
&lt;p&gt;virtualenv的安装、配置就不再介绍了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install postgresql libpq-dev
$ mkvirtualenv sentry
&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ pip install psycopg2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在PostgreSQL中为sentry创建数据库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo -u postgre createuser --superuser sentry
$ sudo -u sentry psql
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;# \password sentry&lt;/span&gt;
Enter new password:
Enter it again:
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;# \q&lt;/span&gt;
$ sudo -u sentry createdb -E utf8 sentry
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装sentry&lt;/h2&gt;
&lt;p&gt;数据库使用的是PostgreSQL，使用公司邮件服务器发送邮件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ workon sentry
&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ pip install sentry
&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry init /tmp/settings.py
&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sudo mv /tmp/settings.py /etc/sentry/sentry.conf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/sentry/sentry.conf.py中的数据库配置如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# You can swap out the engine for MySQL easily by changing this value&lt;/span&gt;
        &lt;span class="c1"&gt;# to ``django.db.backends.mysql`` or to PostgreSQL with&lt;/span&gt;
        &lt;span class="c1"&gt;# ``sentry.db.postgres``&lt;/span&gt;

        &lt;span class="c1"&gt;# If you change this, you&amp;#39;ll also need to install the appropriate python&lt;/span&gt;
        &lt;span class="c1"&gt;# package: psycopg2 (Postgres) or mysql-python&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;django.db.backends.postgresql_psycopg2&amp;#39;&lt;/span&gt;,

        &lt;span class="s1"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sentry&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;USER&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sentry&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;xxxx&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;5432&amp;#39;&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/sentry/sentry.conf.py中的Web服务配置如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# You MUST configure the absolute URI root for Sentry:&lt;/span&gt;
&lt;span class="nv"&gt;SENTRY_URL_PREFIX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://your-ip&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# No trailing slash!&lt;/span&gt;

&lt;span class="nv"&gt;SENTRY_WEB_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;SENTRY_WEB_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 9000
&lt;span class="nv"&gt;SENTRY_WEB_OPTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;workers&amp;#39;&lt;/span&gt;: 4,  &lt;span class="c1"&gt;# the number of gunicorn workers&lt;/span&gt;
    &lt;span class="c1"&gt;# &amp;#39;secure_scheme_headers&amp;#39;: {&amp;#39;X-FORWARDED-PROTO&amp;#39;: &amp;#39;https&amp;#39;},&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/sentry/sentry.conf.py中的邮件配置根据个人情况修改。&lt;/p&gt;
&lt;p&gt;修改完配置运行如下命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py upgrade
&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py repair
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建sentry超级用户:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py createsuperuser
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动Web服务命令如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动后就可以访问 http://your-ip:9000&amp;nbsp;了，用刚才创建的超级用户登录。&lt;/p&gt;
&lt;p&gt;启动sentry&amp;nbsp;worker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;sentry&lt;span class="o"&gt;)&lt;/span&gt;$ sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py celery worker -B -l WARNING
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;正式环境运行sentry&lt;/h2&gt;
&lt;h3&gt;supervisor管理sentry,&amp;nbsp;sentry_worker&lt;/h3&gt;
&lt;p&gt;通过supervisor管理sentry,&amp;nbsp;sentry_worker；并用nginx做反向代理。&lt;/p&gt;
&lt;p&gt;supervisor的安装也不再介绍。&lt;/p&gt;
&lt;p&gt;supervisor管理sentry:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/supervisor/conf.d/sentry.conf
&lt;span class="o"&gt;[&lt;/span&gt;program:sentry&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#directory=/var/www/.virtualenvs/sentry/bin/&lt;/span&gt;
&lt;span class="nv"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;VIRTUAL_ENV_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/www/.virtualenvs/sentry/bin/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/www/.virtualenvs/sentry/bin/sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py start
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;develop
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/sentry.stdout
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/sentry.stderr
&lt;span class="nv"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;killasgroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;supervisor管理sentry_worker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/supervisor/conf.d/sentry_worker.conf
&lt;span class="o"&gt;[&lt;/span&gt;program:sentry_worker&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#directory=/var/www/.virtualenvs/sentry/bin/&lt;/span&gt;
&lt;span class="nv"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;VIRTUAL_ENV_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/www/.virtualenvs/sentry/bin/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/www/.virtualenvs/sentry/bin/sentry --config&lt;span class="o"&gt;=&lt;/span&gt;/etc/sentry/sentry.conf.py celery worker -B -l WARNING
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;develop
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/sentry_worker.stdout
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/sentry_worker.stderr
&lt;span class="nv"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;killasgroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动sentry,&amp;nbsp;sentry_worker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service supervisor restart
$ sudo supervisorctl  &lt;span class="c1"&gt;# 查看sentry, sentry_worker运行情况&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置Nginx&lt;/h3&gt;
&lt;p&gt;/etc/nginx/sites-available/default的server配置中增加如下内容:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;```&lt;/span&gt;
&lt;span class="nt"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="nt"&gt;Host&lt;/span&gt;                 &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;http_host&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="nt"&gt;X-Real-IP&lt;/span&gt;            &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;remote_addr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="nt"&gt;X-Forwarded-For&lt;/span&gt;      &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="nt"&gt;X-Forwarded-Proto&lt;/span&gt;    &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="nt"&gt;off&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;proxy_pass&lt;/span&gt;         &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/(?&lt;/span&gt;&lt;span class="nt"&gt;P&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;projectid&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;d&lt;/span&gt;&lt;span class="o"&gt;+/)?&lt;/span&gt;&lt;span class="nt"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass&lt;/span&gt;        &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;```&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启nginx，并通过http://your-ip&amp;nbsp;访问。&lt;/p&gt;
&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;开始我们就提到过sentry支持目前所有主流语言，
参考&lt;a href="https://docs.getsentry.com/hosted/clients/python/"&gt;这里&lt;/a&gt;&amp;nbsp;可以检查是否能将错误、异常发生到自己搭建的sentry。&lt;/p&gt;</summary><category term="sentry"></category></entry><entry><title>Redis集群搭建</title><link href="http://blog.wiseturtles.com/posts/install-redis-cluster.html" rel="alternate"></link><published>2015-09-18T23:48:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-09-18:posts/install-redis-cluster.html</id><summary type="html">&lt;h2&gt;Redis集群搭建&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 下载&lt;/span&gt;
$ wget http://download.redis.io/releases/redis-3.0.4.tar.gz
$ tar -zxvf redis-3.0.4.tar.gz
$ &lt;span class="nb"&gt;cd&lt;/span&gt; redis-3.0.4

&lt;span class="c1"&gt;# 编译&lt;/span&gt;
$ make

&lt;span class="c1"&gt;# 检查依赖， 如果有错误就修复&lt;/span&gt;
&lt;span class="c1"&gt;# 如果遇到错误“Test replication partial resync: ok psync”, 可以忽略或再重复执&lt;/span&gt;
&lt;span class="c1"&gt;# 行几次make test就可以通过了&lt;/span&gt;
$ make &lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="c1"&gt;# 安装&lt;/span&gt;
$ sudo make install

&lt;span class="c1"&gt;# 添加开机启动, 会有一些交互提问，按需选择即可&lt;/span&gt;
$ sudo utils/install_server.sh
Welcome to the redis service installer
This script will &lt;span class="nb"&gt;help&lt;/span&gt; you easily &lt;span class="nb"&gt;set&lt;/span&gt; up a running redis server

Please &lt;span class="k"&gt;select&lt;/span&gt; the redis port &lt;span class="k"&gt;for&lt;/span&gt; this instance: &lt;span class="o"&gt;[&lt;/span&gt;6379&lt;span class="o"&gt;]&lt;/span&gt; 
Selecting default: &lt;span class="m"&gt;6379&lt;/span&gt; 
Please &lt;span class="k"&gt;select&lt;/span&gt; the redis config file name &lt;span class="o"&gt;[&lt;/span&gt;/etc/redis/6379.conf&lt;span class="o"&gt;]&lt;/span&gt; 
Selected default - /etc/redis/6379.conf
Please &lt;span class="k"&gt;select&lt;/span&gt; the redis log file name &lt;span class="o"&gt;[&lt;/span&gt;/var/log/redis_6379.log&lt;span class="o"&gt;]&lt;/span&gt; 
Selected default - /var/log/redis_6379.log
Please &lt;span class="k"&gt;select&lt;/span&gt; the data directory &lt;span class="k"&gt;for&lt;/span&gt; this instance &lt;span class="o"&gt;[&lt;/span&gt;/var/lib/redis/6379&lt;span class="o"&gt;]&lt;/span&gt; 
Selected default - /var/lib/redis/6379
Please &lt;span class="k"&gt;select&lt;/span&gt; the redis executable path &lt;span class="o"&gt;[&lt;/span&gt;/usr/local/bin/redis-server&lt;span class="o"&gt;]&lt;/span&gt; 
Selected config:
Port           : &lt;span class="m"&gt;6379&lt;/span&gt; 
Config file    : /etc/redis/6379.conf
Log file       : /var/log/redis_6379.log
Data dir       : /var/lib/redis/6379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli
Is this ok? Then press ENTER to go on or Ctrl-C to abort.
Copied /tmp/6379.conf &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /etc/init.d/redis_6379
Installing service...
 Adding system startup &lt;span class="k"&gt;for&lt;/span&gt; /etc/init.d/redis_6379 ...
   /etc/rc0.d/K20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc1.d/K20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc6.d/K20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc2.d/S20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc3.d/S20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc4.d/S20redis_6379 -&amp;gt; ../init.d/redis_6379
   /etc/rc5.d/S20redis_6379 -&amp;gt; ../init.d/redis_6379
Success!
Starting Redis server...
Installation successful!


&lt;span class="c1"&gt;# 因为要搭建单机集群，重复执行上面的命令，同时设置6380, 6381&lt;/span&gt;
&lt;span class="c1"&gt;# 完成后，可以看到如下文件&lt;/span&gt;
$ ls /etc/init.d/redis_*
/etc/init.d/redis_6379  /etc/init.d/redis_6380  /etc/init.d/redis_6381
$ ls /etc/redis/
6379.conf  6380.conf  6381.conf


&lt;span class="c1"&gt;# 开启集群&lt;/span&gt;
$ sudo sed -i &lt;span class="s1"&gt;&amp;#39;s/# cluster-enabled yes/cluster-enabled yes/&amp;#39;&lt;/span&gt; /etc/redis/*.conf

&lt;span class="c1"&gt;# 同时去掉/etc/redis/*.conf 文件的`cluster-config-file` 的注释，并分别设置为&lt;/span&gt;
&lt;span class="c1"&gt;# cluster-config-file /etc/redis/nodes-6379.conf&lt;/span&gt;
&lt;span class="c1"&gt;# cluster-config-file /etc/redis/nodes-6380.conf&lt;/span&gt;
&lt;span class="c1"&gt;# cluster-config-file /etc/redis/nodes-6381.conf&lt;/span&gt;

&lt;span class="c1"&gt;# 重启redis服务&lt;/span&gt;
$ ps -ef &lt;span class="p"&gt;|&lt;/span&gt;grep redis
root     &lt;span class="m"&gt;31033&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; 00:18 ?        00:00:00 /usr/local/bin/redis-server *:6379 &lt;span class="o"&gt;[&lt;/span&gt;cluster&lt;span class="o"&gt;]&lt;/span&gt;    
root     &lt;span class="m"&gt;31072&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; 00:18 ?        00:00:00 /usr/local/bin/redis-server *:6380 &lt;span class="o"&gt;[&lt;/span&gt;cluster&lt;span class="o"&gt;]&lt;/span&gt;    
root     &lt;span class="m"&gt;31111&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; 00:18 ?        00:00:00 /usr/local/bin/redis-server *:6381 &lt;span class="o"&gt;[&lt;/span&gt;cluster&lt;span class="o"&gt;]&lt;/span&gt;    

&lt;span class="c1"&gt;# 安装redis client需要的依赖&lt;/span&gt;
$ sudo apt-get install ruby
$ sudo gem install redis

&lt;span class="c1"&gt;# 查看可用的命令&lt;/span&gt;
$ src/redis-trib.rb &lt;span class="nb"&gt;help&lt;/span&gt; 
Usage: redis-trib &amp;lt;command&amp;gt; &amp;lt;options&amp;gt; &amp;lt;arguments ...&amp;gt;

  create          host1:port1 ... hostN:portN
                  --replicas &amp;lt;arg&amp;gt;
  check           host:port
  fix             host:port
  reshard         host:port
                  --from &amp;lt;arg&amp;gt;
                  --to &amp;lt;arg&amp;gt;
                  --slots &amp;lt;arg&amp;gt;
                  --yes
  add-node        new_host:new_port existing_host:existing_port
                  --slave
                  --master-id &amp;lt;arg&amp;gt;
  del-node        host:port node_id
  set-timeout     host:port milliseconds
  call            host:port &lt;span class="nb"&gt;command&lt;/span&gt; arg arg .. arg
  import          host:port
                  --from &amp;lt;arg&amp;gt;
  &lt;span class="nb"&gt;help&lt;/span&gt;            &lt;span class="o"&gt;(&lt;/span&gt;show this &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

For check, fix, reshard, del-node, set-timeout you can specify the host and port of any working node in the cluster.


&lt;span class="c1"&gt;# 创建集群&lt;/span&gt;
$ sudo src/redis-trib.rb create 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381
&amp;gt;&amp;gt;&amp;gt; Creating cluster
Connecting to node 127.0.0.1:6379: OK
Connecting to node 127.0.0.1:6380: OK
Connecting to node 127.0.0.1:6381: OK
&amp;gt;&amp;gt;&amp;gt; Performing &lt;span class="nb"&gt;hash&lt;/span&gt; slots allocation on &lt;span class="m"&gt;3&lt;/span&gt; nodes...
Using &lt;span class="m"&gt;3&lt;/span&gt; masters:
127.0.0.1:6379
127.0.0.1:6380
127.0.0.1:6381
M: 50eee84811854ce707bb25ce05f1688eafa46c8d 127.0.0.1:6379
   slots:0-5460 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
M: 3cdc94999a66c325dd91ca4af70fa9a9fe1bc623 127.0.0.1:6380
   slots:5461-10922 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5462&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
M: 059fd2e13499b22aedfa0f0ad3707fe7534d96db 127.0.0.1:6381
   slots:10923-16383 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
Can I &lt;span class="nb"&gt;set&lt;/span&gt; the above configuration? &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt; to accept&lt;span class="o"&gt;)&lt;/span&gt;: yes
&amp;gt;&amp;gt;&amp;gt; Nodes configuration updated
&amp;gt;&amp;gt;&amp;gt; Assign a different config epoch to each node
&amp;gt;&amp;gt;&amp;gt; Sending CLUSTER MEET messages to join the cluster
Waiting &lt;span class="k"&gt;for&lt;/span&gt; the cluster to join.
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check &lt;span class="o"&gt;(&lt;/span&gt;using node 127.0.0.1:6379&lt;span class="o"&gt;)&lt;/span&gt;
M: 50eee84811854ce707bb25ce05f1688eafa46c8d 127.0.0.1:6379
   slots:0-5460 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
M: 3cdc94999a66c325dd91ca4af70fa9a9fe1bc623 127.0.0.1:6380
   slots:5461-10922 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5462&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
M: 059fd2e13499b22aedfa0f0ad3707fe7534d96db 127.0.0.1:6381
   slots:10923-16383 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
&lt;span class="o"&gt;[&lt;/span&gt;OK&lt;span class="o"&gt;]&lt;/span&gt; All nodes agree about slots configuration.
&amp;gt;&amp;gt;&amp;gt; Check &lt;span class="k"&gt;for&lt;/span&gt; open slots...
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...
&lt;span class="o"&gt;[&lt;/span&gt;OK&lt;span class="o"&gt;]&lt;/span&gt; All &lt;span class="m"&gt;16384&lt;/span&gt; slots covered.

&lt;span class="c1"&gt;# 也可以设置主从, 但是需要注意，如果设置了replicas，则需要更多的结点&lt;/span&gt;
&lt;span class="c1"&gt;# --replicas 1 需要6个结点&lt;/span&gt;
&lt;span class="c1"&gt;# --replicas 2 需要12个结点&lt;/span&gt;
$ sudo src/redis-trib.rb create --replicas &lt;span class="m"&gt;1&lt;/span&gt; 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 ip:port....


&lt;span class="c1"&gt;# 检查集群状态&lt;/span&gt;
$ sudo src/redis-trib.rb check 127.0.0.1:6379
Connecting to node 127.0.0.1:6379: OK
Connecting to node 127.0.0.1:6380: OK
Connecting to node 127.0.0.1:6381: OK
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check &lt;span class="o"&gt;(&lt;/span&gt;using node 127.0.0.1:6379&lt;span class="o"&gt;)&lt;/span&gt;
M: 50eee84811854ce707bb25ce05f1688eafa46c8d 127.0.0.1:6379
   slots:0-5460 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
   &lt;span class="m"&gt;0&lt;/span&gt; additional replica&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
M: 3cdc94999a66c325dd91ca4af70fa9a9fe1bc623 127.0.0.1:6380
   slots:5461-10922 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5462&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
   &lt;span class="m"&gt;0&lt;/span&gt; additional replica&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
M: 059fd2e13499b22aedfa0f0ad3707fe7534d96db 127.0.0.1:6381
   slots:10923-16383 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5461&lt;/span&gt; slots&lt;span class="o"&gt;)&lt;/span&gt; master
   &lt;span class="m"&gt;0&lt;/span&gt; additional replica&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;OK&lt;span class="o"&gt;]&lt;/span&gt; All nodes agree about slots configuration.
&amp;gt;&amp;gt;&amp;gt; Check &lt;span class="k"&gt;for&lt;/span&gt; open slots...
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...
&lt;span class="o"&gt;[&lt;/span&gt;OK&lt;span class="o"&gt;]&lt;/span&gt; All &lt;span class="m"&gt;16384&lt;/span&gt; slots covered.

&lt;span class="c1"&gt;# 使用了集群之后，不能像以前一样使用命令行客户端了, 需要加参数`-c`&lt;/span&gt;
$ redis-cli
127.0.0.1:6379&amp;gt; ping
PONG
127.0.0.1:6379&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; a b
&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt; MOVED &lt;span class="m"&gt;15495&lt;/span&gt; 127.0.0.1:6381   &lt;span class="c1"&gt;# 设置失败&lt;/span&gt;

$ redis-cli -c
127.0.0.1:6379&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; a b
-&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;15495&lt;span class="o"&gt;]&lt;/span&gt; located at 127.0.0.1:6381
OK

&lt;span class="c1"&gt;# 同理python redis模块也是不能直接用集群模式了，需要替换成支持redis cluster的python模块&lt;/span&gt;
&lt;span class="c1"&gt;# 完毕&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="redis"></category><category term="cluster"></category><category term="install"></category></entry><entry><title>Node.js入门</title><link href="http://blog.wiseturtles.com/posts/Getstarted-Node.js.html" rel="alternate"></link><published>2015-09-18T13:49:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-18:posts/Getstarted-Node.js.html</id><summary type="html">&lt;p&gt;大家都知道Node.js是基于JavaScript的，使JavaScript可以用于后台开发。&lt;/p&gt;
&lt;h2&gt;为啥学JavaScript&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;公司项目需要&lt;/li&gt;
&lt;li&gt;JavaScript程序员之多社区之活跃&lt;/li&gt;
&lt;li&gt;Node.js发展非常快&lt;/li&gt;
&lt;li&gt;更容易成为全栈工程师 (前端、后台、客户端[React&amp;nbsp;Native])&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;nvm&lt;/h2&gt;
&lt;p&gt;nvm (Node Version Manager)类似Python中的&lt;code&gt;virtualenv&lt;/code&gt;，是管理Node.js版本的工具，&amp;nbsp;方便在主机上安装多个Node.js版本，安装方法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl https://raw.githubusercontent.com/creationix/nvm/v0.23.2/install.sh &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;常用命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nvm --version  &lt;span class="c1"&gt;# 查看nvm版本&lt;/span&gt;
$ nvm -h  &lt;span class="c1"&gt;# 查看nvm帮助文档&lt;/span&gt;
$ nvm current  &lt;span class="c1"&gt;# 查看当前使用的node.js版本&lt;/span&gt;
$ nvm install stable
$ nvm install &amp;lt;version&amp;gt;  &lt;span class="c1"&gt;# 安装指定版本的node.js&lt;/span&gt;
$ nvm uninstall &amp;lt;version&amp;gt;  &lt;span class="c1"&gt;# 卸载指定版本的node.js&lt;/span&gt;
$ nvm use &amp;lt;version&amp;gt;  &lt;span class="c1"&gt;# 将默认node.js版本切换到指定版本&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;npm&lt;/h2&gt;
&lt;p&gt;npm (Node Package Manager)是Node.js默认的模块管理器，用来安装管理Node.js模块。&amp;nbsp;npm已经集成到Node.js中了，所以装完Node.js就不再需要单独安装npm。&lt;/p&gt;
&lt;p&gt;常用命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ npm &lt;span class="nb"&gt;help&lt;/span&gt;  &lt;span class="c1"&gt;# 查看帮助&lt;/span&gt;
$ npm -l  &lt;span class="c1"&gt;# npm命令列表&lt;/span&gt;
$ npm install npm@latest -g  &lt;span class="c1"&gt;# 将npm更新到最新版本&lt;/span&gt;
$ npm -v  &lt;span class="c1"&gt;# 查看npm版本&lt;/span&gt;
$ npm config list -l &lt;span class="c1"&gt;# 查看npm配置&lt;/span&gt;
$ npm info
$ npm search
$ npm list
$ npm install
$ npm update
$ npm uninstall
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多信息请参考阮一峰的&lt;a href="http://javascript.ruanyifeng.com/nodejs/npm.html"&gt;npm模块管理器&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Node.js学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nodebeginner.org/index-zh-cn.html"&gt;Node.js入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.fens.me/series-nodejs/"&gt;从零开始Node.js系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alsotang/node-lessons"&gt;Node.js包教不包会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://javascript.ruanyifeng.com/#nodejs"&gt;JavaScript标准参考教程&lt;/a&gt;有些章节专门介绍Node.js。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还在看上面文章学习的阶段&amp;nbsp;:D&lt;/p&gt;</summary><category term="node.js"></category></entry><entry><title>Gitlab安装</title><link href="http://blog.wiseturtles.com/posts/gitlab-setup-on-centos6.html" rel="alternate"></link><published>2015-09-18T13:13:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-18:posts/gitlab-setup-on-centos6.html</id><summary type="html">&lt;p&gt;公司没有统一的代码管理平台，虽然曾经用过stash、jira、confluence，但调研后还是觉得用gitlab。&amp;nbsp;下面介绍下gitlab安装、配置。&lt;/p&gt;
&lt;h2&gt;系统环境&lt;/h2&gt;
&lt;p&gt;查看系统版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/issue
CentOS release 6.6 &lt;span class="o"&gt;(&lt;/span&gt;Final&lt;span class="o"&gt;)&lt;/span&gt;
Kernel &lt;span class="se"&gt;\r&lt;/span&gt; on an &lt;span class="se"&gt;\m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装gitlab&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://about.gitlab.com/downloads/#centos6"&gt;官方安装文档&lt;/a&gt;介绍的比较详细，&amp;nbsp;我用公司邮箱发送邮件，所以，没有安装postfix。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install curl openssh-server cronie
$ sudo lokkit -s http -s ssh
$ curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh &lt;span class="p"&gt;|&lt;/span&gt; sudo bash
$ sudo yum install gitlab-ce
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置gitlab&lt;/h2&gt;
&lt;p&gt;数据库使用的是PostgreSQL，使用公司邮件服务器。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;--- /etc/gitlab/gitlab.rb.back  2015-09-07 16:31:05.247042700 +0800
+++ /etc/gitlab/gitlab.rb   2015-09-09 14:47:33.710061343 +0800
@@ -3,7 +3,7 @@
&lt;span class="c1"&gt;## Url on which GitLab will be reachable.&lt;/span&gt;
&lt;span class="c1"&gt;## For more details on configuring external_url see:&lt;/span&gt;
&lt;span class="c1"&gt;## https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#configuring-the-external-url-for-gitlab&lt;/span&gt;
-external_url &lt;span class="s1"&gt;&amp;#39;http://iZ23rkm97f5Z&amp;#39;&lt;/span&gt;
+external_url &lt;span class="s1"&gt;&amp;#39;http://your-git-domain&amp;#39;&lt;/span&gt;


&lt;span class="c1"&gt;## Note: configuration settings below are optional.&lt;/span&gt;
@@ -14,23 +14,23 @@

&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;gitlab_ssh_host&amp;#39;] = &amp;#39;ssh.host_example.com&amp;#39;&lt;/span&gt;
gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time_zone&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UTC&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_enabled&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_from&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;example@example.com&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_display_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Example&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_reply_to&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;noreply@example.com&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_can_create_group&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_username_changing_enabled&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_theme&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_restricted_visibility_levels&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil &lt;span class="c1"&gt;# to restrict public and internal: [&amp;#39;public&amp;#39;, &amp;#39;internal&amp;#39;]&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_issues&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_merge_requests&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_wiki&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_snippets&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_visibility_level&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_repository_downloads_path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmp/repositories&amp;#39;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_enabled&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_from&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;noreply@yourdomain&amp;#39;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_display_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Gitlab&amp;#39;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_email_reply_to&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;noreply@yourdomain&amp;#39;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_can_create_group&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_username_changing_enabled&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_theme&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_restricted_visibility_levels&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;public&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;internal&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# to restrict public and internal: [&amp;#39;public&amp;#39;, &amp;#39;internal&amp;#39;]&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_issues&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_merge_requests&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_wiki&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_snippets&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_default_projects_features_visibility_level&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_repository_downloads_path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmp/repositories&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;gravatar_plain_url&amp;#39;] = &amp;#39;http://www.gravatar.com/avatar/%{hash}?s=%{size}&amp;amp;d=identicon&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;gravatar_ssl_url&amp;#39;] = &amp;#39;https://secure.gravatar.com/avatar/%{hash}?s=%{size}&amp;amp;d=identicon&amp;#39;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webhook_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webhook_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10

&lt;span class="c1"&gt;## For setting up LDAP&lt;/span&gt;
&lt;span class="c1"&gt;## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#setting-up-ldap-sign-in&lt;/span&gt;
@@ -107,9 +107,9 @@
&lt;span class="c1"&gt;## For setting up backups&lt;/span&gt;
&lt;span class="c1"&gt;## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#backups&lt;/span&gt;

-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/backups&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_archive_permissions&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0644&lt;/span&gt; &lt;span class="c1"&gt;# See: http://doc.gitlab.com/ce/raketasks/backup_restore.html#backup-archive-permissions&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_keep_time&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 604800
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/backups&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_archive_permissions&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0644&lt;/span&gt; &lt;span class="c1"&gt;# See: http://doc.gitlab.com/ce/raketasks/backup_restore.html#backup-archive-permissions&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_keep_time&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 604800
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;backup_upload_connection&amp;#39;] = {&lt;/span&gt;
&lt;span class="c1"&gt;#   &amp;#39;provider&amp;#39; =&amp;gt; &amp;#39;AWS&amp;#39;,&lt;/span&gt;
&lt;span class="c1"&gt;#   &amp;#39;region&amp;#39; =&amp;gt; &amp;#39;eu-west-1&amp;#39;,&lt;/span&gt;
@@ -128,9 +128,9 @@
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;satellites_timeout&amp;#39;] = 30&lt;/span&gt;

&lt;span class="c1"&gt;## GitLab Shell settings for GitLab&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_shell_ssh_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 22
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git_max_size&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 20971520
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitlab_shell_ssh_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 22
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git_max_size&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 20971520
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;git_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10

&lt;span class="c1"&gt;## Extra customization&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;extra_google_analytics_id&amp;#39;] = &amp;#39;_your_tracking_id&amp;#39;&lt;/span&gt;
@@ -161,9 +161,9 @@
&lt;span class="c1"&gt;# GitLab application settings #&lt;/span&gt;
&lt;span class="c1"&gt;###############################&lt;/span&gt;

-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uploads_directory&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/gitlab-rails/uploads&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rate_limit_requests_per_period&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rate_limit_period&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uploads_directory&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/gitlab-rails/uploads&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rate_limit_requests_per_period&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rate_limit_period&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60

&lt;span class="c1"&gt;# Change the initial default admin password.&lt;/span&gt;
&lt;span class="c1"&gt;# Only applicable on inital setup, changing this setting after database is created and seeded&lt;/span&gt;
@@ -176,13 +176,13 @@
&lt;span class="c1"&gt;## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/database.md#database-settings&lt;/span&gt;
&lt;span class="c1"&gt;## Only needed if you use an external database.&lt;/span&gt;

-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_adapter&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;postgresql&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_encoding&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unicode&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_database&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlabhq_production&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_pool&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_username&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_host&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_adapter&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;postgresql&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_encoding&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unicode&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_database&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_pool&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 10
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_username&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_host&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;db_port&amp;#39;] = 5432&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;db_socket&amp;#39;] = nil&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;db_sslmode&amp;#39;] = nil&lt;/span&gt;
@@ -206,15 +206,15 @@
&lt;span class="c1"&gt;# see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/smtp.md#smtp-settings&lt;/span&gt;
&lt;span class="c1"&gt;# Use smtp instead of sendmail/postfix.&lt;/span&gt;

-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_address&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp.server&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 456
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_user_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp user&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp password&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_domain&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_authentication&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable_starttls_auto&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_tls&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_address&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp.xxx.com&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 25
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_user_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;noreply@yourdomain&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourpassword&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_domain&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourdomain&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_authentication&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable_starttls_auto&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
+gitlab_rails&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_tls&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;smtp_openssl_verify_mode&amp;#39;] = &amp;#39;none&amp;#39; # Can be: &amp;#39;none&amp;#39;, &amp;#39;peer&amp;#39;, &amp;#39;client_once&amp;#39;, &amp;#39;fail_if_no_peer_cert&amp;#39;, see http://api.rubyonrails.org/classes/ActionMailer/Base.html&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;smtp_ca_path&amp;#39;] = &amp;quot;/etc/ssl/certs&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_rails[&amp;#39;smtp_ca_file&amp;#39;] = &amp;quot;/etc/ssl/certs/ca-certificates.crt&amp;quot;&lt;/span&gt;
@@ -242,18 +242,18 @@
&lt;span class="c1"&gt;##################&lt;/span&gt;
&lt;span class="c1"&gt;## Tweak unicorn settings.&lt;/span&gt;

-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;worker_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;worker_processes&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;worker_timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;worker_processes&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2

&lt;span class="c1"&gt;## Advanced settings&lt;/span&gt;
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listen&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 8080
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket&amp;#39;&lt;/span&gt;
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pidfile&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/opt/gitlab/var/unicorn/unicorn.pid&amp;#39;&lt;/span&gt;
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listen&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 8088
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket&amp;#39;&lt;/span&gt;
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pidfile&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/opt/gitlab/var/unicorn/unicorn.pid&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# unicorn[&amp;#39;tcp_nopush&amp;#39;] = true&lt;/span&gt;
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backlog_socket&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1024
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backlog_socket&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1024
&lt;span class="c1"&gt;# Make sure somaxconn is equal or higher then backlog_socket&lt;/span&gt;
-# unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;somaxconn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1024
+unicorn&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;somaxconn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1024
&lt;span class="c1"&gt;# We do not recommend changing this setting&lt;/span&gt;
&lt;span class="c1"&gt;# unicorn[&amp;#39;log_directory&amp;#39;] = &amp;quot;/var/log/gitlab/unicorn&amp;quot;&lt;/span&gt;

@@ -290,11 +290,11 @@
&lt;span class="c1"&gt;# GitLab PostgreSQL #&lt;/span&gt;
&lt;span class="c1"&gt;#####################&lt;/span&gt;

-# postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
-# postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listen_address&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
-# postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 5432
-# postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data_dir&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/postgresql/data&amp;quot;&lt;/span&gt;
-# postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shared_buffers&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;256MB&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# recommend value is 1/4 of total RAM, up to 14GB.&lt;/span&gt;
+postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listen_address&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
+postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 5432
+postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data_dir&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/opt/gitlab/postgresql/data&amp;quot;&lt;/span&gt;
+postgresql&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shared_buffers&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;256MB&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# recommend value is 1/4 of total RAM, up to 14GB.&lt;/span&gt;

&lt;span class="c1"&gt;## Advanced settings&lt;/span&gt;
&lt;span class="c1"&gt;# postgresql[&amp;#39;ha&amp;#39;] = false&lt;/span&gt;
@@ -326,7 +326,7 @@
&lt;span class="c1"&gt;################&lt;/span&gt;
&lt;span class="c1"&gt;## Can be disabled if you are using your own redis instance.&lt;/span&gt;

-# redis&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+redis&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="c1"&gt;# redis[&amp;#39;username&amp;#39;] = &amp;quot;gitlab-redis&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# redis[&amp;#39;uid&amp;#39;] = nil&lt;/span&gt;
&lt;span class="c1"&gt;# redis[&amp;#39;gid&amp;#39;] = nil&lt;/span&gt;
@@ -470,14 +470,14 @@
&lt;span class="c1"&gt;## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/database.md#database-settings&lt;/span&gt;
&lt;span class="c1"&gt;## Only needed if you use an external database.&lt;/span&gt;

-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_adapter&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;postgresql&amp;quot;&lt;/span&gt;
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_encoding&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unicode&amp;quot;&lt;/span&gt;
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_database&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab_ci_production&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_adapter&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;postgresql&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_encoding&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unicode&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_database&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab_ci_production&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;db_pool&amp;#39;] = 10&lt;/span&gt;
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_username&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab_ci&amp;quot;&lt;/span&gt;
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_host&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
-# gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 5432
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_username&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gitlab_ci&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_host&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 5432
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;db_socket&amp;#39;] = nil&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;db_sslmode&amp;#39;] = nil&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;db_sslrootcert&amp;#39;] = nil&lt;/span&gt;
@@ -497,6 +497,15 @@
&lt;span class="c1"&gt;###################################&lt;/span&gt;
&lt;span class="c1"&gt;## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/smtp.md#smtp-settings&lt;/span&gt;

+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_address&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp.xxx.com&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 25
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_user_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;noreply@yourdomain&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_password&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourpassword&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_domain&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourdomain&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_authentication&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_enable_starttls_auto&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
+gitlab_ci&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smtp_tls&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;smtp_enable&amp;#39;] = true&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;smtp_address&amp;#39;] = &amp;quot;smtp.server&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# gitlab_ci[&amp;#39;smtp_port&amp;#39;] = 456&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据/etc/gitlab/gitlab.rb重新配置gitlab。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo gitlab-ctl reconfigure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用默认用户名:&lt;code&gt;root&lt;/code&gt; 密码:&lt;code&gt;5iveL!fe&lt;/code&gt;登陆，登陆后修改默认密码。&lt;/p&gt;
&lt;h2&gt;备份&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo crontab -l
&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create
&lt;/pre&gt;&lt;/div&gt;</summary><category term="gitlab"></category></entry><entry><title>Golang评价</title><link href="http://blog.wiseturtles.com/posts/golang-chaos.html" rel="alternate"></link><published>2015-09-15T13:47:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-09-15:posts/golang-chaos.html</id><summary type="html">&lt;h3&gt;djvu9&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作为一具码了差不多20年C++的C++11爱好者，我觉得对于大部分后端半栈码农，golang才是未来的方向。C++缺乏可用的标准库，Java的问题是&lt;span class="caps"&gt;JVM&lt;/span&gt;，python/php没有static&amp;nbsp;typing，这些问题看来都没什么解决希望。golang的toolchain，runtime和标准库，目前来看是配合的最好的没有之一。语言本身其实不太重要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;golang的最大特点就是方便，比如goroutine不用创建线程，chan通信不用消息队列，自带网络、压缩、加密、协议、编解码、图像、文本处理的库，全部用go实现所以交叉编译很简单，还有parser/serializer的支持，静态编译部署简单不担心运行库的版本问题。所以即使没有模版，代码累赘且丑也能接受了。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有人问&lt;span class="caps"&gt;JVM&lt;/span&gt;有什么问题。软件的基本原理就是&amp;#8221;We can solve any problem by introducing an extra level of indirection&amp;#8221;。但是抽象就会带来新的问题：维护成本，跟外界的交互限制，信息的缺失等，所以要调gc，jni会影响优化，debug起来麻烦。&lt;span class="caps"&gt;JVM&lt;/span&gt;当年要解决的问题现在都不存在了所以它自己就成问题了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;操作系统和体系结构的多样性减少，编译器基础设施的改进，以及开放源代码的发展。基本上现在换个平台重新编译下代码就好了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;yinwang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.yinwang.org/blog-cn/2014/04/18/golang/"&gt;对 Go&amp;nbsp;语言的综合评价&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="go"></category></entry><entry><title>Elastichsearch反向代理设置</title><link href="http://blog.wiseturtles.com/posts/elasticsearch-reverse-proxy.html" rel="alternate"></link><published>2015-08-12T17:29:00+08:00</published><author><name>craygit</name></author><id>tag:blog.wiseturtles.com,2015-08-12:posts/elasticsearch-reverse-proxy.html</id><summary type="html">&lt;p&gt;内网的&lt;span class="caps"&gt;ES&lt;/span&gt;集群，平时操作都是通过命令行，有点不方便，而且安装的site插件也没法使用&amp;nbsp;，比较蛋疼，所以配置nginx作为elasticsearch的反向代理，并且添加认证信息.&lt;/p&gt;
&lt;p&gt;如果是直接用域名的根节点作为反向代理的话，比较简单，直接配置一下就可以，但是问
题是根节点被暂用，需要设置一个前缀来来访问,&amp;nbsp;就稍微麻烦一点.&lt;/p&gt;
&lt;p&gt;nginx配置如下:&lt;/p&gt;
&lt;pre&gt;
    location ~ ^/es/ {
            rewrite ^/es/(.*)$ /$1 break;
            include proxy_params;
            proxy_pass http://es_node_ip:9200;
            proxy_redirect http://$host/ http://$host/es/;
            auth_basic "please login";
            auth_basic_user_file /data/passwd/es.htpasswd;
    }
&lt;/pre&gt;

&lt;p&gt;几点需要注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;include proxy_params;&lt;/code&gt; proxy_params为一些反向代理设置参数，没有的话可以去掉&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxy_pass http://es_node_ip:9200;&lt;/code&gt; 需要替换es_node_ip 为&lt;span class="caps"&gt;ES&lt;/span&gt;集群的&lt;span class="caps"&gt;IP&lt;/span&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auth_basic_user_file /data/passwd/es.htpasswd&lt;/code&gt;中&lt;code&gt;/data/passwd/es.htpasswd&lt;/code&gt;为认证文件，可以用apache工具或一些&lt;a href="http://tool.oschina.net/htpasswd"&gt;在线工具&lt;/a&gt;生成&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;假设域名为www.example.com,&amp;nbsp;那么就可以直接访问&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.example.com/es/"&gt;http://www.example.com/es/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.example.com/es/_plugin/head/"&gt;http://www.example.com/es/_plugin/head/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置好之后，用起来爽多了。&lt;/p&gt;</summary><category term="elasticsearch"></category><category term="reverse"></category><category term="proxy"></category></entry><entry><title>Elastichsearch数据备份，恢复，及迁移</title><link href="http://blog.wiseturtles.com/posts/elasticsearch-snapshot-restore.html" rel="alternate"></link><published>2015-08-12T14:13:00+08:00</published><author><name>craygit</name></author><id>tag:blog.wiseturtles.com,2015-08-12:posts/elasticsearch-snapshot-restore.html</id><summary type="html">&lt;h3&gt;参考资料:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/backing-up-your-cluster.html"&gt;https://www.elastic.co/guide/en/elasticsearch/guide/current/backing-up-your-cluster.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_restoring_from_a_snapshot.html"&gt;https://www.elastic.co/guide/en/elasticsearch/guide/current/_restoring_from_a_snapshot.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/blog/introducing-snapshot-restore"&gt;https://www.elastic.co/blog/introducing-snapshot-restore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/27903929/elasticsearch-snapshot-across-cluster"&gt;http://stackoverflow.com/questions/27903929/elasticsearch-snapshot-across-cluster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近工作需要，要将一个索引的数据迁移到新的另一个集群，查阅了一些资料过后，便开始操作。由于数据量大，整个过程也花费了不少时间，遇到一些坑，特此整理一下整个过程。&lt;/p&gt;
&lt;h3&gt;迁移注意事项&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;保证&lt;span class="caps"&gt;ES&lt;/span&gt;集群不再接受新的数据(如果是备份的话，这一点可以不考虑，但是做数据迁移的话，建议这样做）.&lt;/li&gt;
&lt;li&gt;不建议直接在生产环境做这些操作，最好是先在本地搭建一个和生产环境一样的集群环境，创建一些测试数据，把整个过程先跑一遍，然后再到生产环境操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文假设&lt;span class="caps"&gt;ES&lt;/span&gt;集群有3个节点，&lt;span class="caps"&gt;IP&lt;/span&gt;分别是: 192.168.0.1, 193.168.0.2,&amp;nbsp;192.168.0.3&lt;/p&gt;
&lt;h3&gt;注册快照仓库&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;ES&lt;/span&gt;是通过快照的方式来实现数据备份，并且是以增量的方式，所以一般第一次做的话会花费较长的时间。为了做快照，那么就需要注册一个快照仓库，告诉&lt;span class="caps"&gt;ES&lt;/span&gt;我们的快照应该如何保存以及将快照保存到哪里.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;ES&lt;/span&gt;的快照仓库支持如下几种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享的文件系统，如&lt;span class="caps"&gt;NAS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Amazon&amp;nbsp;S3&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;HDFS&lt;/span&gt; (Hadoop Distributed File&amp;nbsp;System)&lt;/li&gt;
&lt;li&gt;Azure&amp;nbsp;Cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常选择注册第一种形式。&lt;/p&gt;
&lt;p&gt;任意选择一个节点，执行如下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPUT  http://192.168.0.1:9200/_snapshot/my_backup -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;type&amp;quot;: &amp;quot;fs&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;settings&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;location&amp;quot;: &amp;quot;/data/backups/elasticsearch&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就注册了一个名为&lt;code&gt;my_backup&lt;/code&gt;的仓库，这里的&lt;code&gt;location&lt;/code&gt;需要注意，最好是设置一个每个节点都能访问并且有写权限的共享目录，如smb目录等(如果整个集群就一个节点那么设置为本地目录也无所谓)。
我自己在做的时候由于设置了本地目录&lt;code&gt;/data/backups/elasticsearch&lt;/code&gt;, 最后做出来发现快照被分别保存在集群每个节点的&lt;code&gt;/data/backups/elasticsearch&lt;/code&gt;目录下，并且一个节点保存了一些信息。最后做数据迁移的时候，不得不从每个节点将快照文件拷贝出来，然后合并到一起。&lt;/p&gt;
&lt;p&gt;除了&lt;code&gt;location&lt;/code&gt;外，还有一些其他选项可以设置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compress&amp;nbsp;是否压缩&lt;/li&gt;
&lt;li&gt;max_snapshot_bytes_per_sec&amp;nbsp;制作快照的速度，默认20mb/s&lt;/li&gt;
&lt;li&gt;max_restore_bytes_per_sec&amp;nbsp;快照恢复的速度，默认20mb/s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新仓库设置如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST http://192.168.0.1:9200/_snapshot/my_backup/
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;fs&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;/data/backups/elasticsearch&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;max_snapshot_bytes_per_sec&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;50mb&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;max_restore_bytes_per_sec&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;50mb&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;compress&amp;quot;&lt;/span&gt; : &lt;span class="nb"&gt;true&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里需要注意一点是，注册仓库用的是&lt;code&gt;PUT&lt;/code&gt;, 而更新仓库设置用的是&lt;code&gt;POST&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;检查注册的仓库信息&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XGET http://192.168.0.1:9200/_snapshot/my_backup
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;开始备份&lt;/h3&gt;
&lt;p&gt;指定快照名称为&lt;code&gt;snapshot_20150812&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPUT  http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行上面的上面的命令会马上返回，并在后台执行备份操作, 如果想等到备份完成，可以加上参数&lt;code&gt;wait_for_completion=true&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPUT  http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812?wait_for_completion&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认是备份所有的索引indices,&amp;nbsp;如果要指定index,可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPUT http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;index_1,index_2&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个备份过程需要的时间视数据量而定.&lt;/p&gt;
&lt;h3&gt;查看备份状态&lt;/h3&gt;
&lt;p&gt;整个备份过程中，可以通过如下命令查看备份进度&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XGET http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812/_status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;主要由如下几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;INITIALIZING&lt;/span&gt;&amp;nbsp;集群状态检查，检查当前集群是否可以做快照，通常这个过程会非常快&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;STARTED&lt;/span&gt;&amp;nbsp;正在转移数据到仓库&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;FINALIZING&lt;/span&gt;&amp;nbsp;数据转移完成，正在转移元信息&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DONE&lt;/span&gt;　完成&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;FAILED&lt;/span&gt;&amp;nbsp;备份失败&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;取消备份&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XDELETE http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;恢复备份&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812/_restore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同备份一样，也可以设置wait_for_completion=true等待恢复结果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812/_restore?wait_for_completion&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认情况下，是恢复所有的索引，我们也可以设置一些参数来指定恢复的索引，以及重命令恢复的索引，这样可以避免覆盖原有的数据.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST http://192.168.0.1:9200/_snapshot/my_backup/snapshot_20150812/_restore
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;index_1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;rename_pattern&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;index_(.+)&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;rename_replacement&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;restored_index_&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;上面的indices,&amp;nbsp;表示只恢复索引&amp;#8217;index_1&amp;#8217;&lt;/li&gt;
&lt;li&gt;rename_pattern:&amp;nbsp;表示重命名索引以&amp;#8217;index_&amp;#8217;开头的索引.&lt;/li&gt;
&lt;li&gt;rename_replacement:&amp;nbsp;表示将所有的索引重命名为&amp;#8217;restored_index_xxx&amp;#8217;.如index_1会被重命名为restored_index_1.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;查看恢复进度&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 查看所有索引的恢复进度&lt;/span&gt;
curl -XGET http://192.168.0.1:9200/_recovery/

&lt;span class="c1"&gt;# 查看索引restored_index_1的恢复进度&lt;/span&gt;
curl -XGET http://192.168.0.1:9200/_recovery/restored_index_1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;取消恢复&lt;/h3&gt;
&lt;p&gt;只需要删除索引，即可取消恢复&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XDELETE http://192.168.0.1:9200/restored_index_1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;备份快照迁移&lt;/h3&gt;
&lt;p&gt;如果需要将快照迁移到另一个集群.只需要将备份文件全部拷贝到要迁移的机器上, 然后再在新的集群上注册一个快照仓库,设置&lt;code&gt;location&lt;/code&gt;的位置为备份文件所在的地方，然后执行恢复备份的命令即可。&lt;/p&gt;</summary><category term="elasticsearch"></category><category term="snapshot"></category><category term="restore"></category><category term="transfer"></category></entry><entry><title>Java Spring 学习索引</title><link href="http://blog.wiseturtles.com/posts/get-started-with-java-spring.html" rel="alternate"></link><published>2015-08-06T00:20:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-08-06:posts/get-started-with-java-spring.html</id><summary type="html">&lt;p&gt;近期由于工作需要，需要学习Java Web开发，虽然以前也接触过Java, 不过也就仅限于写个&amp;#8221;Hello World&amp;#8221;. 为了尽快掌握Java Web开发，面对网上琳琅满目的学习资料，&amp;nbsp;必须梳理一条清晰的学习路线，不然就会陷入无尽的文档流中了。结合本人的学习情况，整理出如下学习过程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Java基础语法&lt;/p&gt;
&lt;p&gt;千里之行，始于足下，如果连Java语法都搞不清楚，后面的也就无从谈起了，这个过程主要是了解Java的基本语法，和一些常用的&lt;span class="caps"&gt;API&lt;/span&gt;(由于时间关系，常用&lt;span class="caps"&gt;API&lt;/span&gt;我是选择跳过了，一般要用到了，再临时查询,&amp;nbsp;不过也要大概了解一下，至少做到查询的时候知道要查什么),学习资料我选择的是林信良写的&amp;lt;&amp;lt;Java学习笔记&amp;gt;&amp;gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java&amp;nbsp;Web基础&lt;/p&gt;
&lt;p&gt;主要了解一些Web开发的基本概念，好歹知道什么是Servlet吧，这个阶段我选择看的是林信良写的&amp;lt;&amp;lt;&lt;span class="caps"&gt;JSP&lt;/span&gt;&amp;amp;Servlet学习笔记&amp;gt;&amp;gt;。(不过由于实际关系，也是匆匆瞄了几章，后面有时间再慢慢回来看，
毕竟无论什么Web开发框架，都是建立在这些基础上搭建起来的, 以后要研究框架深入一点,&amp;nbsp;都是无法摆脱这些基础的)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring框架学习&lt;/p&gt;
&lt;p&gt;首先不得不吐槽一下, Spring真的太庞大了，打开官网，看到一大堆的文档，不知如何下手啊,&amp;nbsp;经过一番摸索，好在找到了一些思路.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://spring.io/guides/gs/maven/"&gt;使用Maven创建Java项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spring.io/guides/gs/gradle/"&gt;使用Gradle创建Java项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.spring.io/spring-framework/"&gt;Spring&amp;nbsp;Framework入门&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先，上面的Maven和Gradle是Java的依赖管理工具，先暂时简单了解一下就行，暂时不做深入研究，要明确我们的目录是学习Web开发，而不是学习工具的使用，这些知识&amp;nbsp;后面慢慢补上.(多说一句，貌似Gradle已经慢慢要取代Maven). &lt;/p&gt;
&lt;p&gt;Spring 看样子是分了很多项目的，Web开发主要要用到Framework,&amp;nbsp;所以就先学习Framework.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;暂时就整理这么多吧，后面学习了之后再继续整理。&lt;/p&gt;
&lt;p&gt;未完，待续&amp;#8230;&amp;#8230;&lt;/p&gt;</summary><category term="java"></category><category term="spring"></category></entry><entry><title>Go学习笔记5之Beego框架</title><link href="http://blog.wiseturtles.com/posts/go-hello-beego.html" rel="alternate"></link><published>2015-07-22T16:33:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-07-22:posts/go-hello-beego.html</id><summary type="html">&lt;h3&gt;Beego框架准备&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go get github.com/astaxie/beego
$ go get github.com/beego/bee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建程序&lt;code&gt;hello-beego.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;github.com/astaxie/beego&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;MainController&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;beego&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;this&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;MainController&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;beego&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;MainController&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="nx"&gt;beego&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行&lt;code&gt;go run hello-beego.go&lt;/code&gt;, 访问&lt;a href="http://127.0.0.1:8080"&gt;http://127.0.0.1:8080&lt;/a&gt;检查，　如果输出&amp;#8221;hello world&amp;#8221;&amp;nbsp;表示本地beego环境已经搭建成功&lt;/p&gt;</summary><category term="go"></category><category term="beego"></category></entry><entry><title>Go学习笔记4之知识点记录</title><link href="http://blog.wiseturtles.com/posts/go-notes.html" rel="alternate"></link><published>2015-07-22T14:09:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-07-22:posts/go-notes.html</id><summary type="html">&lt;h3&gt;Go环境配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你想在同一个系统中安装多个版本的Go，你可以参考第三方工具&lt;a href="https://github.com/moovweb/gvm"&gt;&lt;span class="caps"&gt;GVM&lt;/span&gt;&lt;/a&gt;，这是目前在这&amp;nbsp;方面做得最好的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="caps"&gt;GOPATH&lt;/span&gt;允许多个目录, 当&lt;span class="caps"&gt;GOPATH&lt;/span&gt;有多个目录时，为了让每个目录下的bin目录都加入环境变量
可以设置&lt;code&gt;${GOPATH//://bin:}/bin&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/go&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/golang:&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/github/golang&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$GOROOT&lt;/span&gt;/bin:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="p"&gt;//://bin:&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Go&amp;nbsp;命令&lt;/h3&gt;
&lt;p&gt;详细使用可以参考
&lt;a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/01.3.md"&gt;https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/01.3.md&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go&amp;nbsp;build&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;clean&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;fmt&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;install&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;test&lt;/li&gt;
&lt;li&gt;go tool&amp;nbsp;fix&lt;/li&gt;
&lt;li&gt;go tool vet&amp;nbsp;directory|files&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;generate&lt;/li&gt;
&lt;li&gt;godoc&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;version&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;env&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;list&lt;/li&gt;
&lt;li&gt;go&amp;nbsp;run&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Go字符串&lt;/h3&gt;
&lt;p&gt;字符串是用一对双引号（&amp;#8221;&amp;#8220;）或反引号（&amp;#8220;）括起来定义，它的类型是string&amp;nbsp;如果要声明一个多行的字符串怎么办？可以通过`来声明&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;`hello&lt;/span&gt;
&lt;span class="s"&gt;        world`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;iota枚举&lt;/h3&gt;
&lt;p&gt;Go里面有一个关键字iota，这个关键字用来声明enum的时候采用，它默认开始值是0，每调用一次加1：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt;  &lt;span class="c1"&gt;// x == 0&lt;/span&gt;
    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt;  &lt;span class="c1"&gt;// y == 1&lt;/span&gt;
    &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt;  &lt;span class="c1"&gt;// z == 2&lt;/span&gt;
    &lt;span class="nx"&gt;w&lt;/span&gt;  &lt;span class="c1"&gt;// 常量声明省略值时，默认和之前一个值的字面相同。这里隐式地说w = iota，因此w == 3。其实上面y和z可同样不用&amp;quot;= iota&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt; &lt;span class="c1"&gt;// 每遇到一个const关键字，iota就会重置，此时v == 0&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;iota&lt;/span&gt; &lt;span class="c1"&gt;//e=0,f=0,g=0 iota在同一行值相同&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;除非被显式设置为其它值或iota，每个const分组的第一个常量被默认设置为它的0值，第二及后续的常量被默认设置为它前面那个常量的值，如果前面那个常量的值是iota，则它也被设置为iota。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;默认变量及函数名规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大写字母开头的变量是可导出的，也就是其它包可以读取的，是公用变量；小写字母开头的就是不可导出的，是私有变量。&lt;/li&gt;
&lt;li&gt;大写字母开头的函数也是一样，相当于class中的带public关键词的公有函数；小写字母开头的就是有private关键词的私有函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;数组&lt;/h3&gt;
&lt;p&gt;声明&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// 声明了一个长度为3的int数组&lt;/span&gt;
&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// 声明了一个长度为10的int数组，其中前三个元素初始化为1、2、3，其它默认为0&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// 可以省略长度而采用`...`的方式，Go会自动根据元素个数来计算长度&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;二维数组&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 声明了一个二维数组，该数组以两个数组作为元素，其中每个数组中又有4个int类型的元素&lt;/span&gt;
&lt;span class="nx"&gt;doubleArray&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="c1"&gt;// 上面的声明可以简化，直接忽略内部的类型&lt;/span&gt;
&lt;span class="nx"&gt;easyArray&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注意&lt;/em&gt;:&amp;nbsp;数组之间的赋值是值的赋值，即当把一个数组作为参数传入函数的时候，传入的其实是该数组的副本，而不是它的指针。如果要使用指针，那么就需要用到后面介绍的slice类型了。&lt;/p&gt;
&lt;h3&gt;Slice&lt;/h3&gt;
&lt;p&gt;注意slice和数组在声明时的区别：声明数组时，方括号内写明了数组的长度或使用&amp;#8230;自动计算长度，而声明slice时，方括号内没有任何字符。&lt;/p&gt;</summary><category term="go"></category><category term="ide"></category><category term="note"></category></entry><entry><title>Mac Pro初体验</title><link href="http://blog.wiseturtles.com/posts/mac-pro-get-started.html" rel="alternate"></link><published>2015-07-18T14:56:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-07-18:posts/mac-pro-get-started.html</id><summary type="html">&lt;p&gt;貌似如今不玩下Mac总觉得逼格不够，最近08年买的Thinkpad R60也坏掉了，就入手一台Mac Pro。&amp;nbsp;下面记录下环境配置和最近使用感受。&lt;/p&gt;
&lt;h2&gt;Xcode&lt;/h2&gt;
&lt;h3&gt;安装Xcode命令行工具:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ xcode-select --install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Xcode包管理工具&lt;a href="http://alcatraz.io/"&gt;Alcatraz&lt;/a&gt;安装:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/deploy/Scripts/install.sh &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Xcode安装Solarized-Dark-for-Xcode主题:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;打开Xcode，Window -&amp;gt; Package Manager，选择Color&amp;nbsp;Themes，搜索solar，安装ArtSabintsev/Solarized-Dark-for-Xcode&lt;/li&gt;
&lt;li&gt;重启Xcode，Xcode -&amp;gt; Preference -&amp;gt; Fonts &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;Colors，选择刚才安装的Solarized-Dark-for-Xcode&lt;/li&gt;
&lt;li&gt;再重启Xcode生效&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注：如果想修改字体及字体大小，请手动修改&lt;code&gt;~/Library/Developer/Xcode/UserData/FontAndColorThemes/Solarized\ Dark\ for\ Xcode.dvtcolortheme&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://brew.sh"&gt;Homebrew&lt;/a&gt;是Mac中非常受欢迎的包管理工具，熟悉Linux的朋友一定知道rpm/yum,&amp;nbsp;dpkg/apt等。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
$ brew doctor
$ man brew                     &lt;span class="c1"&gt;# manpage for brew&lt;/span&gt;
$ brew install &amp;lt;package-name&amp;gt;  &lt;span class="c1"&gt;# install package&lt;/span&gt;
$ brew update
$ brew outdated
$ brew upgrade &amp;lt;package-name&amp;gt;
$ brew cleanup
$ brew list --versions
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Homebrew&amp;nbsp;Cask&lt;/h2&gt;
&lt;p&gt;通过Homebrew可以方便的管理命令行程序，Homebrew&amp;nbsp;Cask可以管理图形界面程序。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew tap caskroom/cask
$ brew install brew-cask
$ brew cask install google-chrome
$ brew update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; brew upgrade brew-cask &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; brew cleanup
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;iTerm2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从&lt;a href="https://www.iterm2.com/"&gt;官网&lt;/a&gt;下载、安装iTerm2。&lt;/li&gt;
&lt;li&gt;关闭烦人的bell: &lt;code&gt;iTerm 2: Preferences -&amp;gt; Profiles -&amp;gt; Tab: Terminal -&amp;gt; Notifications -&amp;gt; Silence Bell&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Zsh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install zsh zsh-completions
$ sh -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
$ chsh -s /bin/zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Zsh还配置了powerline，开始Zsh、vim都使用powerline，后来vim使用vim-airline。&amp;nbsp;powerline要显示一些Unicode字符，需要安装打过patch的powerline字体。&lt;/p&gt;
&lt;p&gt;安装powerline: https://powerline.readthedocs.org/en/latest/installation/linux.html
powerline font:&amp;nbsp;https://github.com/powerline/fonts&lt;/p&gt;
&lt;p&gt;字体安装后需要在iTerm2中选用刚安装的打过powerline&amp;nbsp;patch的字体。&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; command line&amp;nbsp;tools&lt;/h2&gt;
&lt;p&gt;Mac默认的命令行工具太蛋疼了，至少对我这样非常熟悉Linux的人来说是这样的。下面介绍下如何安装&lt;span class="caps"&gt;GNU&lt;/span&gt;命令行工具:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install coreutils
brew tap homebrew/dupes
brew install binutils
brew install diffutils
brew install ed --default-names
brew install findutils --with-default-names
brew install gawk
brew install gnu-indent --with-default-names
brew install gnu-sed --with-default-names
brew install gnu-tar --with-default-names
brew install gnu-which --with-default-names
brew install grep --with-default-names
brew install gzip
brew install watch
brew install wdiff --with-gettext
brew install wget
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;CocoaPods&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/"&gt;CocoaPods&lt;/a&gt;是Xcode项目的依赖库管理工具。&lt;/p&gt;
&lt;p&gt;我将它安装到自己的$&lt;span class="caps"&gt;HOME&lt;/span&gt;目录下，也可以直接安装到系统目录。&lt;/p&gt;
&lt;p&gt;将下面内容添加到 $&lt;span class="caps"&gt;HOME&lt;/span&gt;/.zshrc中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;export GEM_HOME=$&lt;span class="caps"&gt;HOME&lt;/span&gt;/.gem
export &lt;span class="caps"&gt;PATH&lt;/span&gt;=$GEM_HOME/ruby/2.0.0/bin:$&lt;span class="caps"&gt;PATH&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过下面命令安装CocoaPods:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.zshrc  &lt;span class="c1"&gt;# 获取GEM_HOME, PATH配置&lt;/span&gt;
$ gem sources -l  &lt;span class="c1"&gt;# 列出当前ruby gem源地址&lt;/span&gt;
$ gem sources --remove https://rubygems.org/  &lt;span class="c1"&gt;# 删除官方源&lt;/span&gt;
$ gem sources -a https://ruby.taobao.org/  &lt;span class="c1"&gt;# 使用淘宝ruby gem镜像&lt;/span&gt;
$ gem install cocoapods --user-install  &lt;span class="c1"&gt;# 安装CocoaPods&lt;/span&gt;
$ pod install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用CocoaPods国内镜像索引:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pod repo  &lt;span class="c1"&gt;# 查看repo信息，下面修改repo master git URL&lt;/span&gt;
$ pod repo remove master
$ pod repo add master https://gitcafe.com/akuandev/Specs.git
$ pod repo update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;CocoaPods的更多介绍请阅读&lt;a href="http://blog.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/"&gt;用CocoaPods做iOS程序的依赖管理&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;vim&lt;/h2&gt;
&lt;p&gt;常用vim，在mac上配置下，曾经自己的vim配置有点乱了，发现［k-vim](https://github.com/wklken/k-vim)不错，就使用它了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install macvim  &lt;span class="c1"&gt;# 只使用了macvim，没有用原生vim&lt;/span&gt;
$ ln -s /usr/local/bin/mvim /usr/local/bin/vim  &lt;span class="c1"&gt;# 否则YouCompleteMe等plugin会报无法安装需要 vim 7.4 之类的&lt;/span&gt;
$ git clone https://github.com/wklken/k-vim.git ~/k-vim
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/k-vim &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash -x install.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：
1. k-vim没有适配最新版的vbundle，导致运行安装程序报错，基本就是Bundle修改为Plugin。。。
2.&amp;nbsp;YouCompleteMe安装总失败，后来手动下载安装&lt;/p&gt;
&lt;h2&gt;Intellij &lt;span class="caps"&gt;IDEA&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;IDEA&lt;/span&gt;运行需要&lt;span class="caps"&gt;JDK&lt;/span&gt;，从oracle官网下载、安装Java 1.8 &lt;span class="caps"&gt;JDK&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;从&lt;span class="caps"&gt;IDEA&lt;/span&gt; -&amp;gt; Project Default -&amp;gt; Project Structure -&amp;gt; &lt;span class="caps"&gt;SDKS&lt;/span&gt;中添加&lt;span class="caps"&gt;JDK&lt;/span&gt;和Intellij Platform Plugin &lt;span class="caps"&gt;SDK&lt;/span&gt;。（需要选择&lt;span class="caps"&gt;JDK&lt;/span&gt;、Intellij的目录）&lt;/p&gt;
&lt;p&gt;安装go-lang-idea-plugin插件，可以从&lt;a href="https://plugins.jetbrains.com/plugin/5047"&gt;官网&lt;/a&gt;下载安装；也可以通过下面方式编译安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;IDEA&lt;/span&gt;中打开该plugin代码，配置&lt;span class="caps"&gt;IDEA&lt;/span&gt; Platform &lt;span class="caps"&gt;SDK&lt;/span&gt;版本，Build出jar包。然后，选择jar包安装。&lt;/p&gt;
&lt;p&gt;配置&lt;span class="caps"&gt;IDEA&lt;/span&gt;的golang开发环境浪费了很多时间，尝试了不同版本的&lt;a href="https://github.com/go-lang-plugin-org/go-lang-idea-plugin"&gt;go-lang-idea-plugin&lt;/a&gt;，总是报错“The selected directory is not a valid home for Go &lt;span class="caps"&gt;SDK&lt;/span&gt;”。
最后运行下面命令再选择&lt;span class="caps"&gt;GO&lt;/span&gt; &lt;span class="caps"&gt;SDK&lt;/span&gt;目录终于可以了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$GOROOT&lt;/span&gt;
/Users/&amp;lt;my-home&amp;gt;/Projects/golang/sdk
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
/Users/&amp;lt;my-home&amp;gt;/Projects/golang/mygo
$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOROOT&lt;/span&gt;
$ git checkout -b go1.4.2 go1.4.2
$ &lt;span class="nb"&gt;cd&lt;/span&gt; src &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./all.bash
$ cp &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin/go &lt;span class="nv"&gt;$GOROOT&lt;/span&gt;/bin/
$ cp &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin/gofmt &lt;span class="nv"&gt;$GOROOT&lt;/span&gt;/bin/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：
1. &lt;span class="caps"&gt;GOROOT&lt;/span&gt;是go的源代码，下载地址：https://github.com/golang/go
2. &lt;span class="caps"&gt;GOPATH&lt;/span&gt;是go workspace，自己的代码都$&lt;span class="caps"&gt;GOPATH&lt;/span&gt;/src下&lt;/p&gt;
&lt;h2&gt;最后&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;mac的屏的确要比我之前用过的笔记本好很多&lt;/li&gt;
&lt;li&gt;严重怀疑网上那些把mac捧得太高的人只用过Windows，根本没用过Ubuntu之类的桌面Linux&amp;nbsp;(至少目前自己还没体会到mac比Linux高效在哪里)&lt;/li&gt;
&lt;li&gt;刚开始使用难免出错，也许上面的都是错的。。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Mac"></category></entry><entry><title>Go学习笔记3之打造Sublime Text 3作为Go的集成开发环境</title><link href="http://blog.wiseturtles.com/posts/go-ide.html" rel="alternate"></link><published>2015-07-13T16:45:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-07-13:posts/go-ide.html</id><summary type="html">&lt;h3&gt;可用于&lt;span class="caps"&gt;GO&lt;/span&gt;开发的工具&lt;/h3&gt;
&lt;p&gt;可以用于&lt;span class="caps"&gt;GO&lt;/span&gt;开发的工具和插件目前已经非常多了,如&lt;span class="caps"&gt;VIM&lt;/span&gt;, Emacs, atom等，这里&lt;a href="https://github.com/golang/go/wiki/IDEsAndTextEditorPlugins"&gt;IDEs and Plugins for
Go&lt;/a&gt;罗列了许多可以作为&lt;span class="caps"&gt;GO&lt;/span&gt;开发
的&lt;span class="caps"&gt;IDE&lt;/span&gt;和插件，我们可以根据自己的使用习惯自行选择。本文主要阐述如何利用Sublime
Text 3 作为&lt;span class="caps"&gt;GO&lt;/span&gt;的开发环境.&lt;/p&gt;
&lt;h3&gt;安装Sublime text&amp;nbsp;3及插件&lt;/h3&gt;
&lt;p&gt;到Sublime 官网选择适合自己系统的版本&lt;a href="http://www.sublimetext.com/3"&gt;http://www.sublimetext.com/3&lt;/a&gt;, 我选择的是
Ubuntu&amp;nbsp;64位的tarball包，解压出来可以直接用了。&lt;/p&gt;
&lt;p&gt;依次安装插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Package&amp;nbsp;Control&lt;/li&gt;
&lt;li&gt;GoSublime&lt;/li&gt;
&lt;li&gt;GoDef&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我只列出了Go开发必须的插件, 其他的一些插件可以根据自身需要选择安装或者从
&lt;a href="http://blog.wiseturtles.com/posts/go-introduce.html"&gt;http://blog.wiseturtles.com/posts/go-introduce.html&lt;/a&gt;选择热门插件&lt;/p&gt;
&lt;h3&gt;安装插件依赖的Go&amp;nbsp;Package&lt;/h3&gt;
&lt;p&gt;上面的插件需要用到一些go cmd tools, 但是这些工具因为墙的问题，没法直接下载，好
在Github上面由这些工具的镜像，因此我们可以曲线救国，从镜像下载。在下载之前，首先，还是要先设置&lt;code&gt;GOPATH&lt;/code&gt;变
量, 怎么设置可以参考本系列文章第二篇&lt;a href="http://blog.wiseturtles.com/posts/go-introduce.html"&gt;http://blog.wiseturtles.com/posts/go-introduce.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装必备的cmd&amp;nbsp;tools&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#　创建目录&lt;/span&gt;
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your_go_path&amp;#39;&lt;/span&gt;
$ mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/golang.org/x

&lt;span class="c1"&gt;# 根据实际需要下载对应分支的tools&lt;/span&gt;
$ git clone -b release-branch.go1.4 git@github.com:golang/tools.git &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/golang.org/x/tools
$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
&lt;span class="c1"&gt;# 安装工具&lt;/span&gt;
$ go install golang.org/x/tools/cmd/goimports
$ go install golang.org/x/tools/cmd/vet
$ go install golang.org/x/tools/cmd/oracle
$ go install golang.org/x/tools/cmd/godoc

&lt;span class="c1"&gt;# 安装不需要翻墙的工具&lt;/span&gt;
$ go get github.com/rogpeppe/godef

&lt;span class="c1"&gt;# 最后两个是我做web开发需要安装的包，没有需要的话可以不下载&lt;/span&gt;
$ go get github.com/astaxie/beego
$ go get github.com/beego/bee
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置插件:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GoSublime 配置, Preferences -&amp;gt; Package Settings -&amp;gt; GoSublime -&amp;gt;　Settings -&amp;nbsp;User&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    // &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;specific&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
    // &lt;span class="nb"&gt;e&lt;/span&gt;.&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: { &lt;span class="s"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$HOME/go/bin:$PATH&amp;quot;&lt;/span&gt; }
    // &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;values&lt;/span&gt;, &lt;span class="nv"&gt;$PATH&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; ${&lt;span class="n"&gt;PATH&lt;/span&gt;} &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;replaced&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt;
    // &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;corresponding&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;(&lt;span class="n"&gt;PATH&lt;/span&gt;) &lt;span class="n"&gt;variable&lt;/span&gt;, &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="nb"&gt;exists&lt;/span&gt;.
    //&lt;span class="n"&gt;根据实际情况设置如下变量&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: {&lt;span class="s"&gt;&amp;quot;GOROOT&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;/usr/local/go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$HOME/golang&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$GOPATH/bin:$GOROOT/bin:$PATH&amp;quot;&lt;/span&gt; },

    &lt;span class="s"&gt;&amp;quot;fmt_cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;goimports&amp;quot;&lt;/span&gt;],&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;comp-lint&lt;/span&gt;, &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;will&lt;/span&gt; &lt;span class="n"&gt;effectively&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;live&lt;/span&gt; &lt;span class="n"&gt;linter&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;comp_lint_enabled&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;comp_lint_commands&amp;quot;&lt;/span&gt;: [
        // &lt;span class="nb"&gt;run&lt;/span&gt; `&lt;span class="n"&gt;golint&lt;/span&gt;` &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;
        // &lt;span class="s"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;:&lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;required&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;through&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; (&lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt; `*.&lt;span class="n"&gt;go&lt;/span&gt;`)
        // &lt;span class="o"&gt;also&lt;/span&gt; &lt;span class="n"&gt;see:&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;documentation&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; `&lt;span class="n"&gt;shell&lt;/span&gt;` &lt;span class="n"&gt;setting&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;,&lt;span class="n"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;golint *.go&amp;quot;&lt;/span&gt;], &lt;span class="s"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;},&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;vet&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;vet&amp;quot;&lt;/span&gt;]},&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; `&lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;` &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;. &lt;span class="n"&gt;GOBIN&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;
&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="o"&gt;so&lt;/span&gt; `&lt;span class="n"&gt;main&lt;/span&gt;` &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="n"&gt;shouldn&amp;#39;t&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;installation&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;binary&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;install&amp;quot;&lt;/span&gt;]}
    ],

    &lt;span class="s"&gt;&amp;quot;on_save&amp;quot;&lt;/span&gt;: [
        // &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;comp-lint&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;
&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="n"&gt;naturally&lt;/span&gt;, &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="nb"&gt;can&lt;/span&gt; &lt;span class="o"&gt;also&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; `&lt;span class="n"&gt;gs_comp_lint&lt;/span&gt;`
        // &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;key&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="nb"&gt;want&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;gs_comp_lint&amp;quot;&lt;/span&gt;}
    ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GoDef 配置, Preferences -&amp;gt; Package Settings -&amp;gt; GoDef -&amp;gt;　Settings -&amp;nbsp;User&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    //根据实际情况设置如下变量
    &amp;quot;gopath&amp;quot;: &amp;quot;/home/linliang/golang&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用&lt;/h3&gt;
&lt;p&gt;创建一个Go文件，默认情况下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连续两次输入&lt;code&gt;Ctrl + dot(.)&lt;/code&gt;,&amp;nbsp;可以查看GoSublime的功能和快捷键&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;gd&lt;/code&gt;可以使用GoDef插件的跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多使用可以参考两个插件的帮助文档&lt;/p&gt;</summary><category term="go"></category><category term="ide"></category><category term="sublime"></category></entry><entry><title>sSMTP发送邮件</title><link href="http://blog.wiseturtles.com/posts/install-sSMTP.html" rel="alternate"></link><published>2015-07-06T15:00:00+08:00</published><author><name>ox0spy</name></author><id>tag:blog.wiseturtles.com,2015-07-06:posts/install-sSMTP.html</id><summary type="html">&lt;p&gt;工作中很多场景需要发送邮件，如：报警邮件、日报等。本文介绍如何安装、配置sSMTP做邮件发送。&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install ssmtp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;/etc/ssmtp/revaliases&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/ssmtp/revaliases
&lt;span class="c1"&gt;# sSMTP aliases&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Format:   local_account:outgoing_address:mailhub&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Example: root:your_login@your.domain:mailhub.your.domain[:port]&lt;/span&gt;
&lt;span class="c1"&gt;# where [:port] is an optional port number that defaults to 25.&lt;/span&gt;
nagios:no-reply@example.com:mail.example.com:587
root:no-reply@example.com:mail.example.com:587
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/ssmtp/ssmtp.conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Config file for sSMTP sendmail&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# The person who gets all mail for userids &amp;lt; 1000&lt;/span&gt;
&lt;span class="c1"&gt;# Make this empty to disable rewriting.&lt;/span&gt;
&lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your-email@example.com&amp;gt;
&lt;span class="c1"&gt;# The place where the mail goes. The actual machine name is required no&lt;/span&gt;
&lt;span class="c1"&gt;# MX records are consulted. Commonly mailhosts are named mail.domain.com&lt;/span&gt;
&lt;span class="nv"&gt;mailhub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;mail.example.com&amp;gt;
&lt;span class="c1"&gt;# Where will the mail seem to come from?&lt;/span&gt;
&lt;span class="c1"&gt;#rewriteDomain=&lt;/span&gt;
&lt;span class="c1"&gt;# The full hostname&lt;/span&gt;
&lt;span class="nv"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;mail.example.com&amp;gt;
&lt;span class="c1"&gt;# Are users allowed to set their own From: address?&lt;/span&gt;
&lt;span class="c1"&gt;# YES - Allow the user to specify their own From: address&lt;/span&gt;
&lt;span class="c1"&gt;# NO - Use the system generated From: address&lt;/span&gt;
&lt;span class="nv"&gt;FromLineOverride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;YES
&lt;span class="nv"&gt;UseSTARTTLS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;span class="nv"&gt;UseTLS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;span class="nv"&gt;AuthUser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your-domain/username&amp;gt;
&lt;span class="nv"&gt;AuthPass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your-passwd&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /usr/sbin/sendmail -t -F your-domain-name &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;SUBJECT: $YOUR-SUBJECT&lt;/span&gt;
&lt;span class="s"&gt;TO: A@example.com,B@example.com&lt;/span&gt;
&lt;span class="s"&gt;MIME-VERSION: 1.0&lt;/span&gt;
&lt;span class="s"&gt;Content-type: text/plain&lt;/span&gt;
&lt;span class="s"&gt;$YOUR-MAIL-BODY&lt;/span&gt;

&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Debian"></category><category term="sSMTP"></category></entry><entry><title>Go学习笔记2之初识Go</title><link href="http://blog.wiseturtles.com/posts/go-introduce.html" rel="alternate"></link><published>2015-06-30T23:37:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-30:posts/go-introduce.html</id><summary type="html">&lt;p&gt;本文参考于:
&lt;a href="https://golang.org/doc/code.html"&gt;How to Write Go&amp;nbsp;Code&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;代码组织&lt;/h2&gt;
&lt;h3&gt;工作空间&lt;/h3&gt;
&lt;p&gt;Go&amp;nbsp;tool先天就是设计来与开源仓库协作的，不管你愿不愿意发布你的代码，构建开发环境的方式是一样的。&lt;/p&gt;
&lt;p&gt;Go代码必须保存在一个工作空间里，　一个工作空间要有三个根目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;src&amp;nbsp;Go源代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pkg&amp;nbsp;Go库文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bin&amp;nbsp;包含可执行命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个工作空间的示例:
&lt;pre&gt;
bin/
    hello                          # command executable
    outyet                         # command executable
pkg/
    linux_amd64/
        github.com/golang/example/
            stringutil.a           # package object
src/
    github.com/golang/example/
        .git/                      # Git repository metadata
    hello/
        hello.go               # command source
    outyet/
        main.go                # command source
        main_test.go           # test source
    stringutil/
        reverse.go             # package source
        reverse_test.go        # test source
    github.com/golang/project1/
        ......
    github.com/golang/project2/
        ......
&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;设置&lt;span class="caps"&gt;GOPATH&lt;/span&gt;环境变量&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;GOPATH&lt;/span&gt;是Go中唯一必须需要设置的环境变量, &lt;span class="caps"&gt;GOPATH&lt;/span&gt;就是工作空间的路径, 并且&lt;span class="caps"&gt;GOPATH&lt;/span&gt;可
以设置多个值，区别是使用&lt;code&gt;go get&lt;/code&gt;命令的时候默认将下载的包安装在&lt;span class="caps"&gt;GOPATH&lt;/span&gt;第一个路径
下面，我自己一般设置两个路径作为&lt;span class="caps"&gt;GOPATH&lt;/span&gt;的值，一个用于专门下载第三方包，一个作为
自己的工作环境,　这有的好处是可以在代码版本控制时,&amp;nbsp;不受第三方库的影响&lt;/p&gt;
&lt;p&gt;如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# &lt;span class="nv"&gt;$HOME&lt;/span&gt;/golang作为第三方包的下载目录
# &lt;span class="nv"&gt;$HOME&lt;/span&gt;/github/golang作为自己的开发目录
$ export GOPATH=&amp;quot;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/golang:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/github/golang&amp;quot;

# 将每个GOPATH下面的bin目录添加到PATH变量
$ export PATH=&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$GOROOT&lt;/span&gt;/bin:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;包路径&lt;/h3&gt;
&lt;p&gt;无论你是否要发布你的程序, 你都应该以要发布的方式来构建你的程序,最好的包名是&amp;nbsp;github.com/user&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/user
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第一个Go程序&lt;/h3&gt;
&lt;p&gt;下面，我将介绍如何将从头构建一个简单的go程序.
首先, 我们以&lt;code&gt;/data/github/golang&lt;/code&gt;为工作空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p /data/github/golang
$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/github/golang
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为了创建一个简单的程序. 首先要选择包路径, 如&lt;code&gt;github.com/crazygit/hello&lt;/code&gt;,&amp;nbsp;并创建对于的目录结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在目录&lt;code&gt;$GOPATH/src/github.com/crazygit/hello&lt;/code&gt;里创建&lt;code&gt;hello.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用go工具编译并安装程序&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
$ go install github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/github.com/crazygit/hello
$ go install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行了之后，可以看到&lt;code&gt;$GOPATH&lt;/code&gt;中多了一个&lt;code&gt;bin&lt;/code&gt;目录，里面有一个名为&lt;code&gt;hello&lt;/code&gt;的可执行文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin/hello
Hello, world.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第一个Go库&lt;/h3&gt;
&lt;p&gt;让我们再创建一个库，同样，先创建包路径&lt;code&gt;github.com/crazygit/stringutil&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/crazygit/stringutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在里面再创建一个名为&lt;code&gt;reverse.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;stringutil&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
$ go build github.com/crazygit/stringutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译过程不会有什么文件产生, 可以使用&lt;code&gt;go install&lt;/code&gt;, 它会创建pkg目录
并生成&lt;code&gt;pkg/linux_amd64/github.com/crazygit/stringutil.a&lt;/code&gt;文件.&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;hello.go&lt;/code&gt;,让它使用我们刚刚创建的库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;github.com/crazygit/stringutil&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stringutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;!oG ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装，当安装的的时候，它会自动根据安装依赖,所以安装&lt;code&gt;hello&lt;/code&gt;时, 它会自动安装&lt;code&gt;stringutil&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go install github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin/hello
Hello, Go!
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;包名&lt;/h3&gt;
&lt;p&gt;Go代码文件的第一句话必须是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;name就是要引起的包名，所有在同一个包下的包名也一样&lt;/p&gt;
&lt;p&gt;go里面为了方便，会使用引入包路径的最后一段作为包名，如 &lt;code&gt;crazygit/rot14&lt;/code&gt;的包名就是&lt;code&gt;rot14&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可执行的命令必须引入包&lt;code&gt;package main&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;Go自带了一个使用&lt;code&gt;go test&lt;/code&gt;的测试框架，为了写一个测试文件。&lt;/p&gt;
&lt;p&gt;应该创建一个文件名&lt;code&gt;_test.go&lt;/code&gt;结尾的文件，函数名为如&lt;code&gt;TestXXX&lt;/code&gt;的, 并且有参数&lt;code&gt;t *testing.T&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;让我们为stringutil包创建测试&lt;code&gt;$GOPATH/src/github.com/crazygit/stringutil/reverse_test.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;stringutil&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;testing&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestReverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cases&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;}{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dlrow ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, 世界&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;界世 ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;cases&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Reverse(%q) == %q, want %q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;want&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行测试&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go &lt;span class="nb"&gt;test&lt;/span&gt; github.com/crazygit/stringutil
ok      github.com/crazygit/stringutil  0.002s
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;第三方包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go get github.com/golang/example/hello
$ &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin/hello
Hello, Go examples!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果当前包已经存在，&lt;code&gt;go get&lt;/code&gt;会跳过下载&lt;/p&gt;
&lt;p&gt;到此，我们对go有了个大致的印象，虽然有些地方看不懂，不过没有关系，我们后面会继续学习。&lt;/p&gt;</summary><category term="go"></category><category term="入门"></category></entry><entry><title>Go学习笔记1之安装Go</title><link href="http://blog.wiseturtles.com/posts/go-install.html" rel="alternate"></link><published>2015-06-30T23:11:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-30:posts/go-install.html</id><summary type="html">&lt;p&gt;本文参考于:
&lt;a href="https://golang.org/doc/install"&gt;Installing Go - Getting&amp;nbsp;Started&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;必备技能之翻墙&lt;/h3&gt;
&lt;p&gt;这个是必须的技能，不然go的官网都没法访问,&amp;nbsp;后面也不用看了。&lt;/p&gt;
&lt;h3&gt;开发环境搭建&lt;/h3&gt;
&lt;p&gt;整个安装过程比较简单，下载安装包，配置环境变量即可。&lt;/p&gt;
&lt;p&gt;以Linux为例.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz
$ tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加环境变量:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;export GOROOT=/usr/local/go&lt;/span&gt;
&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="x"&gt;/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;GOROOT&lt;/code&gt;是告诉系统Go安装在哪里，
&lt;code&gt;PATH&lt;/code&gt;是指定Go相关命令的调用路径.&lt;/p&gt;
&lt;p&gt;环境检查，按照国际惯例，当然是先来&amp;#8221;Hello World&amp;#8221;. 创建&lt;code&gt;hello.go&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello, world\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ go run hello.go
hello, world
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果输出&amp;#8221;hello,world&amp;#8221;，&amp;nbsp;则表示环境没有什么问题.&lt;/p&gt;</summary><category term="go"></category><category term="入门"></category></entry><entry><title>高并发下连接redis导致redis连接失败</title><link href="http://blog.wiseturtles.com/posts/flask-redis-gevent.html" rel="alternate"></link><published>2015-06-26T12:59:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-26:posts/flask-redis-gevent.html</id><summary type="html">&lt;h3&gt;现象&lt;/h3&gt;
&lt;p&gt;最近线上的redis服务器会莫名出现无法突然之间无法连接的情况，需要重启一下redis服务器才能正常工作，感觉很诡异.&amp;nbsp;查看redis日志，发现报如下错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error allocating resoures for the&amp;nbsp;client&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网上搜索之后，找到&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.sina.com.cn/s/blog_6262a50e0101cjyf.html"&gt;http://blog.sina.com.cn/s/blog_6262a50e0101cjyf.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据描述,&amp;nbsp;怀疑可能是redis连接数太多导致,于是查看&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -a password info &lt;span class="p"&gt;|&lt;/span&gt; grep connected_clients
connected_clients:6997
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这还是我刚刚才重新启动了redis&amp;nbsp;server不久看到的数据。&lt;/p&gt;
&lt;p&gt;为什么会用这么高连接数?上面的文章中介绍的是由于代码引起不停地创建redis Connection&amp;nbsp;pool导致。仔细检查了自己的代码之后，发现不会有这种情况，但为什么还是会有这么高的连接?&lt;/p&gt;
&lt;h3&gt;验证&lt;/h3&gt;
&lt;p&gt;经过调试发现。虽然使用py-redis连接redis, 它使用到了连接池，但是，连接池默认是没有设置连接数的上限(可以通过相关参数设置)，当高并发时，它会不断的创建连接，并且这些连接用完之后也不会自动释放。
由于我们的服务运行采用的gevent方式。 因此, 更容易引起这个问题。为了验证自己的
猜测, 写了个简单的计数程序&lt;code&gt;app.py&lt;/code&gt;测试一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FlaskRedis&lt;/span&gt;

&lt;span class="n"&gt;REDIS_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;redis://:password@localhost:6379/0&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FlaskRedis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;采用gevent方式,&amp;nbsp;单worker启动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gunicorn -w &lt;span class="m"&gt;1&lt;/span&gt; app:app --worker-class gevent --error-logfile -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用ab模拟500个用户发送50000次请求的高并发&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ab  -c &lt;span class="m"&gt;500&lt;/span&gt;  -t &lt;span class="m"&gt;30&lt;/span&gt; -r  &lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:8000/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看连接数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -a password info &lt;span class="p"&gt;|&lt;/span&gt;grep connected_clients
connected_clients:232
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到, 在高并发, 单worker的条件下，&amp;nbsp;一个连接池的连接数会就有两百多。然后测试开启４个worker的话，能达到一千二百多。&lt;/p&gt;
&lt;p&gt;这些连接在连接池里使用之后，基本上都长期处于idle状态，白白浪费资源.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -a password client list
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:45327 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;170&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;34&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43684 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;44&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43704 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43705 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;46&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43729 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;47&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43730 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43731 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;49&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-1 &lt;span class="nv"&gt;qbuf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; qbuf-free&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;obl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;oll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;omem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;events&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get
&lt;span class="nv"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:43732 &lt;span class="nv"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N &lt;span class="nv"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;psub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
.....
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;解决方式:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从目前的情况来看，是由于连接池维持了太多的连接导致.　因此不用的连接池应该及&amp;nbsp;时被释放掉。通过设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ reidis-cli -a password CONFIG SET timeout 30
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;让redis自动释放掉idle时间超过30秒的连接,　设置之后，服务器上redis连接数一&amp;nbsp;下子降下来了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;让redis连接也异步&lt;/p&gt;
&lt;p&gt;根据另一篇文章介绍使用redis异步, 自己测试之后发现没有什么效果，也不知道哪
里没有做对,&amp;nbsp;有机会再研究。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gehrcke.de/2013/01/highly-concurrent-connections-to-redis-with-gevent-and-redis-py/"&gt;https://gehrcke.de/2013/01/highly-concurrent-connections-to-redis-with-gevent-and-redis-py/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="flask"></category><category term="redis"></category><category term="gevent"></category></entry><entry><title>Gunicorn 几种 Worker class 性能测试比较</title><link href="http://blog.wiseturtles.com/posts/gunicorn-worker-class-compare.html" rel="alternate"></link><published>2015-06-26T09:30:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-26:posts/gunicorn-worker-class-compare.html</id><summary type="html">&lt;h2&gt;简介&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gunicorn, 一个支持&lt;span class="caps"&gt;WSGI&lt;/span&gt;协议的web服务器&lt;/li&gt;
&lt;li&gt;Flask, 一个轻量级的python&amp;nbsp;web框架&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gunicorn目前自带支持几种工作方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sync&amp;nbsp;(默认值)&lt;/li&gt;
&lt;li&gt;eventlet&lt;/li&gt;
&lt;li&gt;gevent&lt;/li&gt;
&lt;li&gt;tornado&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;测试环境准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;python&amp;nbsp;2.7+&lt;/li&gt;
&lt;li&gt;redis-server&amp;nbsp;2.8.4&lt;/li&gt;
&lt;li&gt;压力测试工具ab&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码及相关python包准备&amp;nbsp;创建虚一个新的虚拟环境并安装需要的包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv &lt;span class="nb"&gt;test&lt;/span&gt;
$ workon &lt;span class="nb"&gt;test&lt;/span&gt;

$ cat requirements.txt
&lt;span class="nv"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;19.3.0
&lt;span class="nv"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;0.10.1
flask-redis&lt;span class="o"&gt;==&lt;/span&gt;0.1.0
&lt;span class="nv"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1.0.2
&lt;span class="nv"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;4.2
&lt;span class="nv"&gt;eventlet&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;0.17.4

$ pip install -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试程序&lt;code&gt;app.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FlaskRedis&lt;/span&gt;

&lt;span class="n"&gt;REDIS_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;redis://:password-string@localhost:6379/0&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FlaskRedis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;开始测试&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用ab工具,并行500个客户端,&amp;nbsp;发送50000次请求&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ab -c &lt;span class="m"&gt;500&lt;/span&gt; -t &lt;span class="m"&gt;30&lt;/span&gt; -r &lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:8000/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分别使用四种方式启动使用服务，&amp;nbsp;并开启４个worker&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gunicorn -w &lt;span class="m"&gt;4&lt;/span&gt; app:app --error-logfile - --worker-class sync
$ gunicorn -w &lt;span class="m"&gt;4&lt;/span&gt; app:app --error-logfile - --worker-class gevent
$ gunicorn -w &lt;span class="m"&gt;4&lt;/span&gt; app:app --error-logfile - --worker-class tornado
$ gunicorn -w &lt;span class="m"&gt;4&lt;/span&gt; app:app --error-logfile - --worker-class eventlet
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果比较&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table class="table table-striped table-bordered table-hover table-condensed"&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;
                Worker class
            &lt;/td&gt;
            &lt;td&gt;
                Time taken for tests
            &lt;/td&gt;
            &lt;td&gt;
                Complete requests
            &lt;/td&gt;
            &lt;td&gt;
                Failed requests
            &lt;/td&gt;
            &lt;td&gt;
                Requests per second
            &lt;/td&gt;
            &lt;td&gt;
                用户平均请求等待时间
            &lt;/td&gt;
            &lt;td&gt;
                服务器平均处理时间
            &lt;/td&gt;
            &lt;td&gt;
                最小连接时间
            &lt;/td&gt;
            &lt;td&gt;
                平均连接时间
            &lt;/td&gt;
            &lt;td&gt;
                50%的连接时间
            &lt;/td&gt;
            &lt;td&gt;
                最大连接时间
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
                sync
            &lt;/td&gt;
            &lt;td&gt;
                37.363 s
            &lt;/td&gt;
            &lt;td&gt;
                49928
            &lt;/td&gt;
            &lt;td&gt;
                793
            &lt;/td&gt;
            &lt;td&gt;
                1336.29
            &lt;/td&gt;
            &lt;td&gt;
                374.169 ms
            &lt;/td&gt;
            &lt;td&gt;
                0.748 ms
            &lt;/td&gt;
            &lt;td&gt;
                5 ms
            &lt;/td&gt;
            &lt;td&gt;
                75 ms
            &lt;/td&gt;
            &lt;td&gt;
                17 ms
            &lt;/td&gt;
            &lt;td&gt;
                31746 ms
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
               tornado
            &lt;/td&gt;
            &lt;td&gt;
               13.995
            &lt;/td&gt;
            &lt;td&gt;
                50000
            &lt;/td&gt;
            &lt;td&gt;
                543
            &lt;/td&gt;
            &lt;td&gt;
               3572.64
            &lt;/td&gt;
            &lt;td&gt;
                139.953 ms
            &lt;/td&gt;
            &lt;td&gt;
                0.280 ms
            &lt;/td&gt;
            &lt;td&gt;
                6 ms
            &lt;/td&gt;
            &lt;td&gt;
                110 ms
            &lt;/td&gt;
            &lt;td&gt;
                24 ms
            &lt;/td&gt;
            &lt;td&gt;
                13837 ms
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
              eventlet
            &lt;/td&gt;
            &lt;td&gt;
              8.156
            &lt;/td&gt;
            &lt;td&gt;
                50000
            &lt;/td&gt;
            &lt;td&gt;
                0
            &lt;/td&gt;
            &lt;td&gt;
               6130.74
            &lt;/td&gt;
            &lt;td&gt;
               81.556
            &lt;/td&gt;
            &lt;td&gt;
                0.163 ms
            &lt;/td&gt;
            &lt;td&gt;
                2 ms
            &lt;/td&gt;
            &lt;td&gt;
                80 ms
            &lt;/td&gt;
            &lt;td&gt;
               62 ms
            &lt;/td&gt;
            &lt;td&gt;
               3153 ms
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
                gevent
            &lt;/td&gt;
            &lt;td&gt;
                7.647 s
            &lt;/td&gt;
            &lt;td&gt;
                50000
            &lt;/td&gt;
            &lt;td&gt;
                0
            &lt;/td&gt;
            &lt;td&gt;
               6538.23
            &lt;/td&gt;
            &lt;td&gt;
                76.473 ms
            &lt;/td&gt;
            &lt;td&gt;
                0.153 ms
            &lt;/td&gt;
            &lt;td&gt;
                1 ms
            &lt;/td&gt;
            &lt;td&gt;
                74 ms
            &lt;/td&gt;
            &lt;td&gt;
                52 ms
            &lt;/td&gt;
            &lt;td&gt;
                1122 ms
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;从测试结果来看，默认自带sync效率很低，并且在测试时发现，采用sync方式在高并发时
会出现woker重启的情况,&amp;nbsp;如下:&lt;/p&gt;
&lt;pre&gt;
[2015-06-25 11:31:06 +0000] [27040] [CRITICAL] WORKER TIMEOUT (pid:27064)
[2015-06-25 11:31:06 +0000] [27040] [CRITICAL] WORKER TIMEOUT (pid:27051)
[2015-06-25 11:31:06 +0000] [27040] [CRITICAL] WORKER TIMEOUT (pid:27045)
[2015-06-25 11:31:06 +0000] [27040] [CRITICAL] WORKER TIMEOUT (pid:27046)
[2015-06-25 11:31:06 +0000] [27064] [INFO] Worker exiting (pid: 27064)
[2015-06-25 11:31:06 +0000] [27051] [INFO] Worker exiting (pid: 27051)
[2015-06-25 11:31:06 +0000] [27045] [INFO] Worker exiting (pid: 27045)
[2015-06-25 11:31:06 +0000] [27046] [INFO] Worker exiting (pid: 27046)
[2015-06-25 11:31:06 +0000] [27263] [INFO] Booting worker with pid: 27263
[2015-06-25 11:31:06 +0000] [27264] [INFO] Booting worker with pid: 27264
[2015-06-25 11:31:06 +0000] [27277] [INFO] Booting worker with pid: 27277
[2015-06-25 11:31:06 +0000] [27280] [INFO] Booting worker with pid: 27280
&lt;/pre&gt;

&lt;p&gt;eventlet&amp;nbsp;和gevent两种方式效果最好，数据基本差不多.&lt;/p&gt;</summary><category term="gunicorn"></category><category term="flask"></category><category term="gevent"></category><category term="eventlet"></category><category term="tornado"></category></entry><entry><title>压力测试工具ab webbench</title><link href="http://blog.wiseturtles.com/posts/server-benchmarkingt-tool-ab-and-webbench.html" rel="alternate"></link><published>2015-06-26T07:29:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-26:posts/server-benchmarkingt-tool-ab-and-webbench.html</id><summary type="html">&lt;h2&gt;ab&lt;/h2&gt;
&lt;p&gt;ab是apache自带的压力测试工具。使用简单，便于一些简单的压力测试.&lt;/p&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install apache2-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使用帮助&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ab -h
Usage: ab &lt;span class="o"&gt;[&lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;http&lt;span class="o"&gt;[&lt;/span&gt;s&lt;span class="o"&gt;]&lt;/span&gt;://&lt;span class="o"&gt;]&lt;/span&gt;hostname&lt;span class="o"&gt;[&lt;/span&gt;:port&lt;span class="o"&gt;]&lt;/span&gt;/path
Options are:
    -n requests     Number of requests to perform &lt;span class="c1"&gt;# 请求次数&lt;/span&gt;
    -c concurrency  Number of multiple requests to make at a &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="c1"&gt;# 并发数&lt;/span&gt;
    -t timelimit    Seconds to max. to spend on benchmarking &lt;span class="c1"&gt;# 压力测试的最大时间&lt;/span&gt;
                    This implies -n 50000
    -s timeout      Seconds to max. &lt;span class="nb"&gt;wait&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; each response
                    Default is &lt;span class="m"&gt;30&lt;/span&gt; seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to &lt;span class="nb"&gt;bind&lt;/span&gt; to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to &lt;span class="nb"&gt;set&lt;/span&gt; -T  &lt;span class="c1"&gt;# POST方式，同时必须使用-T指定“Content-Type”&lt;/span&gt;
    -u putfile      File containing data to PUT. Remember also to &lt;span class="nb"&gt;set&lt;/span&gt; -T   &lt;span class="c1"&gt;# PUT方式&lt;/span&gt;
    -T content-type Content-type header to use &lt;span class="k"&gt;for&lt;/span&gt; POST/PUT data, eg.
                    &lt;span class="s1"&gt;&amp;#39;application/x-www-form-urlencoded&amp;#39;&lt;/span&gt;
                    Default is &lt;span class="s1"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables &lt;span class="c1"&gt;# 以html表格形式输出结果&lt;/span&gt;
    -i              Use HEAD instead of GET &lt;span class="c1"&gt;# 使用Head请求&lt;/span&gt;
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. &lt;span class="s1"&gt;&amp;#39;Apache=1234&amp;#39;&lt;/span&gt;. &lt;span class="o"&gt;(&lt;/span&gt;repeatable&lt;span class="o"&gt;)&lt;/span&gt;
    -H attribute    Add Arbitrary header line, eg. &lt;span class="s1"&gt;&amp;#39;Accept-Encoding: gzip&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# 添加HTTP头信息&lt;/span&gt;
                    Inserted after all normal header lines. &lt;span class="o"&gt;(&lt;/span&gt;repeatable&lt;span class="o"&gt;)&lt;/span&gt;
    -A attribute    Add Basic WWW Authentication, the attributes   &lt;span class="c1"&gt;# 添加认证信息&lt;/span&gt;
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and &lt;span class="nb"&gt;exit&lt;/span&gt;
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than &lt;span class="m"&gt;150&lt;/span&gt; requests
    -l              Accept variable document length &lt;span class="o"&gt;(&lt;/span&gt;use this &lt;span class="k"&gt;for&lt;/span&gt; dynamic pages&lt;span class="o"&gt;)&lt;/span&gt;
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t &lt;span class="nb"&gt;exit&lt;/span&gt; on socket receive errors.   &lt;span class="c1"&gt;# 在接收到socket错误时不退出&lt;/span&gt;
    -h              Display usage information &lt;span class="o"&gt;(&lt;/span&gt;this message&lt;span class="o"&gt;)&lt;/span&gt;
    -Z ciphersuite  Specify SSL/TLS cipher suite &lt;span class="o"&gt;(&lt;/span&gt;See openssl ciphers&lt;span class="o"&gt;)&lt;/span&gt;
    -f protocol     Specify SSL/TLS protocol
                    &lt;span class="o"&gt;(&lt;/span&gt;SSL3, TLS1, TLS1.1, TLS1.2 or ALL&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使用示例&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# GET&lt;/span&gt;

&lt;span class="c1"&gt;# 30秒内并行1000个客户端，请求默认的50000次请求&lt;/span&gt;
$ ab -c &lt;span class="m"&gt;1000&lt;/span&gt; -t  &lt;span class="m"&gt;30&lt;/span&gt; http://www.baidu.com/
&lt;span class="c1"&gt;# 并发100个客户端，请求10000次&lt;/span&gt;
$ ab -c &lt;span class="m"&gt;100&lt;/span&gt; -n &lt;span class="m"&gt;10000&lt;/span&gt; http://www.baidu.com/

&lt;span class="c1"&gt;# POST&lt;/span&gt;

$ cat data.json
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;package_name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;com.baidu.browser.apps&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;app_name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;百度浏览器&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;version_code&amp;quot;&lt;/span&gt;: 1, &lt;span class="s2"&gt;&amp;quot;version_name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;5.3.4.1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;pm_name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;TCL M2M&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# post json 数据&lt;/span&gt;
$ ab -c &lt;span class="m"&gt;1000&lt;/span&gt; -t &lt;span class="m"&gt;30&lt;/span&gt; -p data.json -T &lt;span class="s2"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt; -r &lt;span class="s2"&gt;&amp;quot;127.0.0.1:8888/m3/apps/update&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;更多&lt;/h3&gt;
&lt;p&gt;关于其他的命令选项及命令的结果输出介绍，可以参看：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://httpd.apache.org/docs/2.2/programs/ab.html"&gt;http://httpd.apache.org/docs/2.2/programs/ab.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;webbench&lt;/h2&gt;
&lt;p&gt;另一个轻量级的压力测试工具，据说比ab好用，但是好像不支持模拟&lt;span class="caps"&gt;POST&lt;/span&gt;请求&lt;/p&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;p&gt;可以到&lt;a href="http://home.tiscali.cz/~cz210552/webbench.html"&gt;http://home.tiscali.cz/~cz210552/webbench.html&lt;/a&gt;获取最新版本的下载地址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget http://home.tiscali.cz/~cz210552/distfiles/webbench-1.5.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解压之后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使用帮助&lt;/h3&gt;
&lt;p&gt;使用上和ab差不多，具体参数可以参考下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ webbench
webbench &lt;span class="o"&gt;[&lt;/span&gt;option&lt;span class="o"&gt;]&lt;/span&gt;... URL
-f&lt;span class="p"&gt;|&lt;/span&gt;--force               Don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t &lt;span class="nb"&gt;wait&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; reply from server.
-r&lt;span class="p"&gt;|&lt;/span&gt;--reload              Send reload request - Pragma: no-cache.
-t&lt;span class="p"&gt;|&lt;/span&gt;--time &amp;lt;sec&amp;gt;          Run benchmark &lt;span class="k"&gt;for&lt;/span&gt; &amp;lt;sec&amp;gt; seconds. Default 30.
-p&lt;span class="p"&gt;|&lt;/span&gt;--proxy &amp;lt;server:port&amp;gt; Use proxy server &lt;span class="k"&gt;for&lt;/span&gt; request.
-c&lt;span class="p"&gt;|&lt;/span&gt;--clients &amp;lt;n&amp;gt;         Run &amp;lt;n&amp;gt; HTTP clients at once. Default one.
-9&lt;span class="p"&gt;|&lt;/span&gt;--http09              Use HTTP/0.9 style requests.
-1&lt;span class="p"&gt;|&lt;/span&gt;--http10              Use HTTP/1.0 protocol.
-2&lt;span class="p"&gt;|&lt;/span&gt;--http11              Use HTTP/1.1 protocol.
--get                    Use GET request method.
--head                   Use HEAD request method.
--options                Use OPTIONS request method.
--trace                  Use TRACE request method.
-?&lt;span class="p"&gt;|&lt;/span&gt;-h&lt;span class="p"&gt;|&lt;/span&gt;--help             This information.
-V&lt;span class="p"&gt;|&lt;/span&gt;--version             Display program version.
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ab"></category><category term="workbench"></category></entry><entry><title>Upgrade Elasticsearch 1.2.1 to 1.4.5</title><link href="http://blog.wiseturtles.com/posts/Upgrade-Elasticsearch-1.2.1-to-1.4.5.html" rel="alternate"></link><published>2015-06-19T00:00:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2015-06-19:posts/Upgrade-Elasticsearch-1.2.1-to-1.4.5.html</id><summary type="html">&lt;p&gt;一年前刚开始做应用市场数据统计，团队选用了&lt;span class="caps"&gt;ELK&lt;/span&gt;中的&lt;span class="caps"&gt;EL&lt;/span&gt; (Elasticsearch, Logstash)，没有用Kibana；而且根据产品、运营需求调用&lt;span class="caps"&gt;ES&lt;/span&gt; Restful &lt;span class="caps"&gt;API&lt;/span&gt;，自己做Web展示。
用了以下插件:analysis-icu, analysis-ik, analysis-mmseg, analysis-pinyin
当时&lt;span class="caps"&gt;ES&lt;/span&gt;版本为1.2.1，一直没有升级，最近升级到1.4.5。&lt;/p&gt;
&lt;p&gt;我们之前服务器是Debian 7，现在服务器是CentOS 6.5；服务器版本和&lt;span class="caps"&gt;ES&lt;/span&gt;没有关系，至少我没碰到任何系统问题。&lt;/p&gt;
&lt;p&gt;目前有两台&lt;span class="caps"&gt;ES&lt;/span&gt; 1.2.1，准备用三台&lt;span class="caps"&gt;ES&lt;/span&gt;&amp;nbsp;1.4.5替换。刚开始没有root权限，只好下载压缩包安装。&lt;/p&gt;
&lt;p&gt;注: Elasticsearch和Logstash都需要安装&lt;span class="caps"&gt;JDK&lt;/span&gt;, 我们用的&lt;span class="caps"&gt;JDK&lt;/span&gt;&amp;nbsp;1.7&lt;/p&gt;
&lt;h1&gt;安装Logstash&amp;nbsp;1.4.3&lt;/h1&gt;
&lt;h2&gt;安装需要的软件包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software
$ wget https://download.elastic.co/logstash/logstash/logstash-1.4.3.tar.gz
$ tar zxf logstash-1.4.3.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改配置文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /data/softwares/logstash-1.4.3/logstash.conf &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;^#|^$&amp;#39;&lt;/span&gt;
input &lt;span class="o"&gt;{&lt;/span&gt;
  redis &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;codec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;appstore:logstash&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;appstore_logs&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 0
  &lt;span class="o"&gt;}&lt;/span&gt;
  redis &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;codec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;appstore:overview_reports&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;overview_reports&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 0
  &lt;span class="o"&gt;}&lt;/span&gt;
  redis &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;codec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;appstore:imei_reports&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;imei_reports&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 1
  &lt;span class="o"&gt;}&lt;/span&gt;
  redis &lt;span class="o"&gt;{&lt;/span&gt; 
     &lt;span class="nv"&gt;codec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;tclonline&amp;quot;&lt;/span&gt;
     &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;appstore:overview_date_reports&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;overview_date_reports&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; 
     &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 3
   &lt;span class="o"&gt;}&lt;/span&gt; 
   redis &lt;span class="o"&gt;{&lt;/span&gt; 
     &lt;span class="nv"&gt;codec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;
     &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;appstore:overview_model_reports&amp;quot;&lt;/span&gt; 
     &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;overview_model_reports&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; 
     &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 3

   &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
filter &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;appstore_logs&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    date &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt; , &lt;span class="s2"&gt;&amp;quot;UNIX&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;imei_reports&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    date &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt; , &lt;span class="s2"&gt;&amp;quot;UNIX&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
output &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;appstore_logs&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    elasticsearch &lt;span class="o"&gt;{&lt;/span&gt; 
      &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; logstash
      &lt;span class="nv"&gt;index_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;appstore_stats&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;elasticsearch_dashboard&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;node_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash_appstore_logs&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    redis&lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 3
      &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;x.x.x.x&amp;quot;&lt;/span&gt; 
      &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash:appstore_logs&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;overview_reports&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    elasticsearch &lt;span class="o"&gt;{&lt;/span&gt; 
      &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; dashboard
      &lt;span class="nv"&gt;index_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;overview_records&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;elasticsearch_dashboard&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;node_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash_overview_reports&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;imei_reports&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    elasticsearch &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; imei
      &lt;span class="nv"&gt;index_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;imei_records&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;elasticsearch_dashboard&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;node_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash_imei_reports&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;overview_date_reports&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
     elasticsearch &lt;span class="o"&gt;{&lt;/span&gt; 
       &lt;span class="nv"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;elasticsearch_dashboard&amp;quot;&lt;/span&gt; 
       &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; dashboard 
       &lt;span class="nv"&gt;index_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;overview_date_records&amp;quot;&lt;/span&gt; 
       &lt;span class="nv"&gt;node_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash_overview_date_reports&amp;quot;&lt;/span&gt;
     &lt;span class="o"&gt;}&lt;/span&gt; 
   &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;overview_model_reports&amp;quot;&lt;/span&gt; in &lt;span class="o"&gt;[&lt;/span&gt;tags&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
     elasticsearch &lt;span class="o"&gt;{&lt;/span&gt; 
       &lt;span class="nv"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;elasticsearch_dashboard&amp;quot;&lt;/span&gt; 
       &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; dashboard 
       &lt;span class="nv"&gt;index_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;overview_model_records&amp;quot;&lt;/span&gt; 
       &lt;span class="nv"&gt;node_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;logstash_overview_model_reports&amp;quot;&lt;/span&gt;
     &lt;span class="o"&gt;}&lt;/span&gt; 
   &lt;span class="o"&gt;}&lt;/span&gt;   
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;启动测试&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/softwares/logstash-1.4.3
$ bin/logstash -f logstash.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装Elasticsearch&amp;nbsp;1.4.5&lt;/h1&gt;
&lt;h2&gt;安装需要的软件包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software
$ wget https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.4.5.tar.gz
$ tar zxf elasticsearch-1.4.5.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装插件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software &lt;span class="c1"&gt;# 安装分词插件&lt;/span&gt;
$ git clone -b 1.4.0 https://github.com/medcl/elasticsearch-rtf.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; elasticsearch-rtf
$ cp -vrf plugins/analysis-ik /data/softwares/elasticsearch-1.4.5/plugins/
$ cp -vrf config/ik config/mmseg /data/softwares/elasticsearch-1.4.5/config/


:::bash

$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software &lt;span class="c1"&gt;# 监控插件&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; elasticsearch-1.4.5
$ bin/plugin -install mobz/elasticsearch-head &lt;span class="c1"&gt;# head插件&lt;/span&gt;
$ bin/plugin -install lukas-vlcek/bigdesk     &lt;span class="c1"&gt;# bigdesk插件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改配置文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /data/softwares/elasticsearch-1.4.5/config/elasticsearch.yml &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;^#|^$&amp;#39;&lt;/span&gt;
cluster.name: elasticsearch_dashboard
node.name: &lt;span class="s2"&gt;&amp;quot;es1&amp;quot;&lt;/span&gt;
node.master: &lt;span class="nb"&gt;true&lt;/span&gt;
node.data: &lt;span class="nb"&gt;true&lt;/span&gt;
index.number_of_shards: 5
index.number_of_replicas: 2
path.data: /data/softwares/elasticsearch-1.4.5/data
path.work: /data/softwares/elasticsearch-1.4.5/work
path.logs: /data/log/elasticsearch
path.plugins: /data/softwares/elasticsearch-1.4.5/plugins
network.bind_host: 192.168.1.2
network.publish_host: 192.168.1.2
network.host: 192.168.1.2
transport.tcp.port: 9300
http.port: 9200
indices.recovery.max_bytes_per_sec: 200mb
indices.recovery.concurrent_streams: 8
discovery.zen.minimum_master_nodes: 2
discovery.zen.ping.timeout: 10s
discovery.zen.ping.multicast.enabled: &lt;span class="nb"&gt;true&lt;/span&gt;
discovery.zen.ping.unicast.hosts: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;192.168.1.2&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;192.168.1.6&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;192.168.1.7&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
index:
  analysis:
    analyzer:
      standardPlusWordDelimiter:
        type: custom
        tokenizer: standard
        filter: &lt;span class="o"&gt;[&lt;/span&gt;standard, wordDelim, lowercase, stop, dict&lt;span class="o"&gt;]&lt;/span&gt;
      ik:
        alias: &lt;span class="o"&gt;[&lt;/span&gt;ik_analyzer&lt;span class="o"&gt;]&lt;/span&gt;
        type: ik
      ik_max_word:
        type: ik
        use_smart: &lt;span class="nb"&gt;false&lt;/span&gt;
      ik_smart:
        type: ik
        use_smart: &lt;span class="nb"&gt;true&lt;/span&gt;
      pinyin_ngram_analyzer:
        type: custom
        tokenizer: my_pinyin
        filter: &lt;span class="o"&gt;[&lt;/span&gt;standard,lowercase,nGram,trim,unique&lt;span class="o"&gt;]&lt;/span&gt;     
    tokenizer:
      my_pinyin:
        type: pinyin
        first_letter: prefix
        padding_char : &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    filter:
      wordDelim:
        type: word_delimiter
        preserve_original: &lt;span class="nb"&gt;true&lt;/span&gt;
      dict:
        type: dictionary_decompounder
        word_list: &lt;span class="o"&gt;[&lt;/span&gt;cool, iris, fire, bug, flag, fox, grease, monkey, flash, block, forecast, screen, grab, cookie, auto, fill, text, all, so, think, mega, upload, download, video, map, spring, fix, input, clip, fly, lang, up, down, persona, css, html, all, http, ball, firefox, bookmark, chat, zilla, edit, menu, menus, status, bar, with, easy, sync, search, google, time, window, js, super, scroll, title, close, undo, user, inspect, inspector, browser, context, dictionary, mail, button, url, password, secure, image, new, tab, delete, click, name, smart, down, manager, open, query, net, link, blog, this, color, &lt;span class="k"&gt;select&lt;/span&gt;, key, keys, foxy, translate, word&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：
1. 删除了注释
2. 其它机器配置文件类似，只需要修改和&lt;span class="caps"&gt;IP&lt;/span&gt;相关的字段值&lt;/p&gt;
&lt;h2&gt;启动Elasticsearch&lt;/h2&gt;
&lt;p&gt;测试能否正常启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software/elasticsearch-1.4.5
$ bin/elasticsearch  &lt;span class="c1"&gt;# 启动ES，测试是否可以正常启动&lt;/span&gt;
$ tail -f /data/log/elasticsearch/elasticsearch_dashboard.log &lt;span class="c1"&gt;# 查看日志&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;监控插件使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;head:&amp;nbsp;http://&amp;lt;your-es-ip&amp;gt;:9200/_plugin/head/&lt;/li&gt;
&lt;li&gt;bigdesk:&amp;nbsp;http://&amp;lt;your-es-ip&amp;gt;:9200/_plugin/bigdesk/&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;配置supervisor&lt;/h1&gt;
&lt;p&gt;如果可以正常启动，我们通过supervisor管理Elasticsearch和Logstash。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install supervisor &lt;span class="c1"&gt;# 后来拿到root权限，否则还要先弄Python virtual env&lt;/span&gt;
$ 修改/etc/init.d/supervisor 以及 chkconfig 添加系统启动就不说了


:::bash

$ cat /etc/supervisor/supervisord.conf &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;^;|^$&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;unix_http_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisor.sock    &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;the path to the socket file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;chmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;                       &lt;span class="p"&gt;;&lt;/span&gt; sockef file mode &lt;span class="o"&gt;(&lt;/span&gt;default 0700&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;rpcinterface:supervisor&lt;span class="o"&gt;]&lt;/span&gt;
supervisor.rpcinterface_factory &lt;span class="o"&gt;=&lt;/span&gt; supervisor.rpcinterface:make_main_rpcinterface
&lt;span class="o"&gt;[&lt;/span&gt;supervisord&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisor.sock &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default is to run a UNIX domain socket server&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/supervisord.log &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;main log file&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nv"&gt;$CWD&lt;/span&gt;/supervisord.log&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50MB       &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;max main logfile bytes b4 rotation&lt;span class="p"&gt;;&lt;/span&gt;default 50MB&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;num of main logfile rotation backups&lt;span class="p"&gt;;&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;loglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;logging level&lt;span class="p"&gt;;&lt;/span&gt;default info&lt;span class="p"&gt;;&lt;/span&gt; others: debug,warn&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisord.pid &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisord pidfile&lt;span class="p"&gt;;&lt;/span&gt;default supervisord.pid&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;nodaemon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;start in foreground &lt;span class="k"&gt;if&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minfds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;                 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail startup file descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 1024&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minprocs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;                &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail process descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 200&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;childlogdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt; child log dir, default &lt;span class="nv"&gt;$TEMP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;supervisorctl&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;serverurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;unix:////var/run/supervisor.sock &lt;span class="p"&gt;;&lt;/span&gt; use a unix:// URL  &lt;span class="k"&gt;for&lt;/span&gt; a unix socket
&lt;span class="o"&gt;[&lt;/span&gt;include&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/supervisor/conf.d/*.conf


:::bash

$ cat /etc/supervisor/conf.d/elasticsearch.conf 
&lt;span class="o"&gt;[&lt;/span&gt;program:elasticsearch&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/softwares/elasticsearch-1.4.5/bin/elasticsearch -Xmx6g -Xms6g -XX:PermSize&lt;span class="o"&gt;=&lt;/span&gt;512m -Des.max-open-files&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/softwares/elasticsearch-1.4.5
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;work
&lt;span class="nv"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/elasticsearch.stdout
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/elasticsearch.stderr


:::bash

$ cat /etc/supervisor/conf.d/logstash.conf 
&lt;span class="o"&gt;[&lt;/span&gt;program:logstash&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/softwares/logstash-1.4.3/bin/logstash -f logstash.conf
&lt;span class="nv"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/softwares/logstash-1.4.3
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;work
&lt;span class="nv"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/logstash.stdout
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/logstash.stderr
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;常用的&lt;span class="caps"&gt;ES&lt;/span&gt;命令别名&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tail -n3 ~/.bashrc 
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;esh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip -4 -o addr show dev eth0 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{split($4,a,&amp;quot;/&amp;quot;);print a[1]}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:9200/_cluster/health?pretty&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;esi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip -4 -o addr show dev eth0 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{split($4,a,&amp;quot;/&amp;quot;);print a[1]}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:9200/_cat/indices?pretty&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;ess&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip -4 -o addr show dev eth0 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{split($4,a,&amp;quot;/&amp;quot;);print a[1]}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:9200/_cat/shards&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;esdownlocal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip -4 -o addr show dev eth0 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{split($4,a,&amp;quot;/&amp;quot;);print a[1]}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:9200/_cluster/nodes/_local/_shutdown&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;esdownall&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip -4 -o addr show dev eth0 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{split($4,a,&amp;quot;/&amp;quot;);print a[1]}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:9200/_shutdown&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;升级&lt;/h1&gt;
&lt;p&gt;通过上面步骤，配置好3台Elasticsearch 1.4.5，然后，将这三台&lt;span class="caps"&gt;ES&lt;/span&gt;机器加入以前的Elasticsearch 1.2.1的集群。
数据逐步同步到&lt;span class="caps"&gt;ES&lt;/span&gt; 1.4.5后，逐步将&lt;span class="caps"&gt;ES&lt;/span&gt;&amp;nbsp;1.2.1的机器停掉。&lt;/p&gt;
&lt;h1&gt;碰到的问题&lt;/h1&gt;
&lt;h2&gt;没有将shard同步到新加入的&lt;span class="caps"&gt;ES&lt;/span&gt;&amp;nbsp;1.4.5机器上&lt;/h2&gt;
&lt;p&gt;修改number_of_replicas，根据机器个数修改。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPUT &lt;span class="s1"&gt;&amp;#39;&amp;lt;your-ip&amp;gt;:9200/&amp;lt;your-index&amp;gt;/_settings&amp;#39;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;     &amp;quot;index&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;         &amp;quot;number_of_replicas&amp;quot; : 2&lt;/span&gt;
&lt;span class="s1"&gt;      }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;明确让某个index的某个shard分配到指定机器上。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPOST &lt;span class="s1"&gt;&amp;#39;&amp;lt;your-es-ip&amp;gt;:9200/_cluster/reroute&amp;#39;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;commands&amp;quot; : [ {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;move&amp;quot; :&lt;/span&gt;
&lt;span class="s1"&gt;            {&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;index&amp;quot; : &amp;quot;your-index&amp;quot;, &amp;quot;shard&amp;quot; : shard-no,&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;from_node&amp;quot; : &amp;quot;es-node-name&amp;quot;, &amp;quot;to_node&amp;quot; : &amp;quot;es-node-name&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        },&lt;/span&gt;
&lt;span class="s1"&gt;        {&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;quot;allocate&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;index&amp;quot; : &amp;quot;your-index&amp;quot;, &amp;quot;shard&amp;quot; : shard-no, &amp;quot;node&amp;quot; : &amp;quot;es-node-name&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;          }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    ]&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -XPOST &lt;span class="s1"&gt;&amp;#39;localhost:9200/_cluster/reroute&amp;#39;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;commands&amp;quot; : [ {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;move&amp;quot; :&lt;/span&gt;
&lt;span class="s1"&gt;            {&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;index&amp;quot; : &amp;quot;logstash_v1_new&amp;quot;, &amp;quot;shard&amp;quot; : 4,&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;from_node&amp;quot; : &amp;quot;Yojimbo&amp;quot;, &amp;quot;to_node&amp;quot; : &amp;quot;es3&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        },&lt;/span&gt;
&lt;span class="s1"&gt;        {&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;quot;allocate&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;index&amp;quot; : &amp;quot;logstash_v1_new&amp;quot;, &amp;quot;shard&amp;quot; : 4, &amp;quot;node&amp;quot; : &amp;quot;es2&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;          }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    ]&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/23656458/elasticsearch-what-to-do-with-unassigned-shards/"&gt;http://stackoverflow.com/questions/23656458/elasticsearch-what-to-do-with-unassigned-shards/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/25135869/how-to-rebalance-shard-elasticsearch"&gt;http://stackoverflow.com/questions/25135869/how-to-rebalance-shard-elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://t37.net/how-to-fix-your-elasticsearch-cluster-stuck-in-initializing-shards-mode.html"&gt;https://t37.net/how-to-fix-your-elasticsearch-cluster-stuck-in-initializing-shards-mode.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/19967472/elasticsearch-unassigned-shards-how-to-fix"&gt;http://stackoverflow.com/questions/19967472/elasticsearch-unassigned-shards-how-to-fix&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Dashboard"></category><category term="Elasticsearch"></category><category term="Logstash"></category><category term="ELK"></category></entry><entry><title>Install Nagios 4 on Ubuntu/Debian</title><link href="http://blog.wiseturtles.com/posts/install-nagios4-on-ubuntu-or-debian.html" rel="alternate"></link><published>2015-05-23T00:00:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2015-05-23:posts/install-nagios4-on-ubuntu-or-debian.html</id><summary type="html">&lt;p&gt;Ucloud后台监控系统功能很简单，最近发现之前设置过的监控项也无法正常显示，更不能编辑了。&amp;nbsp;虽然，马上就要将系统迁移到公司自己大家的云平台，但，最近Ucloud服务器压力很大，周末抽空先将Nagios搭建起来，让自己能及时收到报警。&lt;/p&gt;
&lt;p&gt;我们Ucloud服务器都用的Debian 7 (wheezy)，源里只有nagios3，所以，自己编译、安装Nagios&amp;nbsp;4。&lt;/p&gt;
&lt;h1&gt;监控主机安装Nagios&lt;/h1&gt;
&lt;h2&gt;安装需要的软件包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install build-essential libgd2-xpm-dev openssl libssl-dev apache2 php5 libapache2-mod-php5 apache2-utils postfix
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;创建用户、组&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo useradd nagios
$ sudo groupadd nagcmd
$ sudo usermod -a -G nagcmd nagios
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装nagios&amp;nbsp;4&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software
$ wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-4.0.8.tar.gz
$ tar zxf nagios-4.0.8.tar.gz
$ &lt;span class="nb"&gt;cd&lt;/span&gt; nagios-4.0.8
$ ./configure --with-nagios-group&lt;span class="o"&gt;=&lt;/span&gt;nagios --with-command-group&lt;span class="o"&gt;=&lt;/span&gt;nagcmd --with-mail&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which sendmail&lt;span class="k"&gt;)&lt;/span&gt;
$ sudo make all
$ sudo make install &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install-commandmode &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install-init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install-config
$ sudo ln -s /etc/init.d/nagios /etc/rcS.d/S99nagios &lt;span class="c1"&gt;# 开机自启动&lt;/span&gt;
$ sudo service nagios restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置apache2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /usr/bin/install -c -m &lt;span class="m"&gt;644&lt;/span&gt; sample-config/httpd.conf /etc/apache2/sites-available/nagios.conf
$ sudo ln -s /etc/apache2/sites-available/nagios.conf /etc/apache2/sites-enabled/
$ sudo a2enmod rewrite
$ sudo a2enmod cgi
$ sudo htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin
$ sudo service apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;浏览器访问 http://监控主机&lt;span class="caps"&gt;IP&lt;/span&gt;/nagios 查看监控情况, 登录用户名、密码就是 htpasswd 设置的。
nagios 4将被安装到 /usr/local/nagios 目录，该目录下的 etc&amp;nbsp;是配置文件夹。&lt;/p&gt;
&lt;h2&gt;安装nagios-plugins-2.0.3&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software
$ wget https://nagios-plugins.org/download/nagios-plugins-2.0.3.tar.gz
$ tar zxf nagios-plugins-2.0.3.tar.gz
$ &lt;span class="nb"&gt;cd&lt;/span&gt; nagios-plugins-2.0.3
$ ./configure --with-nagios-user&lt;span class="o"&gt;=&lt;/span&gt;nagios --with-nagios-group&lt;span class="o"&gt;=&lt;/span&gt;nagios --with-openssl
$ make all &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;nagios-plugins 命令安装在 /usr/local/nagios/libexec&amp;nbsp;目录。&lt;/p&gt;
&lt;h2&gt;安装nagios-nrpe-2.15&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/software
$ wget -O nrpe-2.15.tar.gz &lt;span class="s2"&gt;&amp;quot;http://downloads.sourceforge.net/project/nagios/nrpe-2.x/nrpe-2.15/nrpe-2.15.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fnagios%2Ffiles%2Fnrpe-2.x%2Fnrpe-2.15%2F&amp;amp;ts=1432369927&amp;amp;use_mirror=liquidtelecom&amp;quot;&lt;/span&gt;
$ tar zxf nrpe-2.15.tar.gz
$ &lt;span class="nb"&gt;cd&lt;/span&gt; nrpe-2.15
$ ./configure --with-nagios-user&lt;span class="o"&gt;=&lt;/span&gt;nagios --with-nagios-group&lt;span class="o"&gt;=&lt;/span&gt;nagios --with-ssl&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/openssl --with-ssl-lib&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/x86_64-linux-gnu 
$ make all
$ find -iname &lt;span class="s1"&gt;&amp;#39;check_nrpe&amp;#39;&lt;/span&gt;
$ sudo /usr/bin/install -c -m &lt;span class="m"&gt;755&lt;/span&gt; ./src/check_nrpe /usr/local/nagios/libexec/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试是否可以工作:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /usr/local/nagios/libexec/check_nrpe -H 10.4.2.2 &lt;span class="c1"&gt;# 该IP是被监控主机的IP&lt;/span&gt;
NRPE v2.13
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;被监控主机安装Nagios &lt;span class="caps"&gt;NRPE&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;安装nagios-plugins,&amp;nbsp;nagios-nrpe-server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install nagios-plugins nagios-nrpe-server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置nagios-nrpe-server，允许监控主机连接该被监控主机。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/nagios/nrpe.cfg
$ 将 监控主机IP 填入 allowed_hosts 字段，如: &lt;span class="nv"&gt;allowed_hosts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1,10.4.22.22
$ sudo service nagios-nrpe-server restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;配置&lt;/h1&gt;
&lt;h2&gt;配置监控主机&lt;/h2&gt;
&lt;p&gt;/usr/local/nagios/etc/nagios.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ diff -u nagios.cfg.back nagios.cfg
--- nagios.cfg.back2015-05-23 11:07:51.436491931 +0800
+++ nagios.cfg2015-05-23 22:08:09.872618927 +0800
@@ -30,6 +30,9 @@
&lt;span class="nv"&gt;cfg_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/contacts.cfg
&lt;span class="nv"&gt;cfg_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/timeperiods.cfg
&lt;span class="nv"&gt;cfg_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/templates.cfg
+cfg_file&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/hosts.cfg
+cfg_file&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/groups.cfg
+cfg_file&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/services.cfg

&lt;span class="c1"&gt;# Definitions for monitoring the local (Linux) host&lt;/span&gt;
&lt;span class="nv"&gt;cfg_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nagios/etc/objects/localhost.cfg
@@ -1174,7 +1177,7 @@
&lt;span class="c1"&gt;# using the $ADMINEMAIL$ and $ADMINPAGER$ macros in your notification&lt;/span&gt;
&lt;span class="c1"&gt;# commands.&lt;/span&gt;

-admin_email&lt;span class="o"&gt;=&lt;/span&gt;nagios@localhost
+admin_email&lt;span class="o"&gt;=&lt;/span&gt;your-emai-address
&lt;span class="nv"&gt;admin_pager&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pagenagios@localhost
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/usr/local/nagios/etc/objects/hosts.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="c1"&gt;# Define a host for the local machine&lt;/span&gt;
&lt;span class="c1"&gt;##############&lt;/span&gt;
&lt;span class="c1"&gt;# appstore01 #&lt;/span&gt;
&lt;span class="c1"&gt;##############&lt;/span&gt;
define host&lt;span class="o"&gt;{&lt;/span&gt;
    use                             linux-server  &lt;span class="p"&gt;;&lt;/span&gt; Name of host template to use
                                    &lt;span class="p"&gt;;&lt;/span&gt; This host definition will inherit all variables that are defined
                                    &lt;span class="p"&gt;;&lt;/span&gt; in &lt;span class="o"&gt;(&lt;/span&gt;or inherited by&lt;span class="o"&gt;)&lt;/span&gt; the linux-server host template definition.
    host_name                       appstore01
    &lt;span class="nb"&gt;alias&lt;/span&gt;                           appstore01 on ucloud
    address                         10.4.2.2
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;##############&lt;/span&gt;
&lt;span class="c1"&gt;# appstore02 #&lt;/span&gt;
&lt;span class="c1"&gt;##############&lt;/span&gt;
define host&lt;span class="o"&gt;{&lt;/span&gt;
    use                             linux-server  &lt;span class="p"&gt;;&lt;/span&gt; Name of host template to use
                                    &lt;span class="p"&gt;;&lt;/span&gt; This host definition will inherit all variables that are defined
                                    &lt;span class="p"&gt;;&lt;/span&gt; in &lt;span class="o"&gt;(&lt;/span&gt;or inherited by&lt;span class="o"&gt;)&lt;/span&gt; the linux-server host template definition.
    host_name                       appstore02
    &lt;span class="nb"&gt;alias&lt;/span&gt;                           appstore02 on ucloud
    address                         10.4.2.22
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/usr/local/nagios/etc/objects/groups.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Define an optional hostgroup for Linux machines&lt;/span&gt;
define hostgroup&lt;span class="o"&gt;{&lt;/span&gt;
    hostgroup_name  appstore-group &lt;span class="p"&gt;;&lt;/span&gt; The name of the hostgroup
    &lt;span class="nb"&gt;alias&lt;/span&gt;           appstore server group &lt;span class="p"&gt;;&lt;/span&gt; Long name of the group
    members         appstore01,appstore02     &lt;span class="p"&gt;;&lt;/span&gt; Comma separated list of hosts that belong to this group
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/local/nagios/etc/objects/commands.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ diff -u objects/commands.cfg.back objects/commands.cfg
+########################
+# add by zhang wanming &lt;span class="c1"&gt;#&lt;/span&gt;
+########################
+# &lt;span class="s1"&gt;&amp;#39;check_mysql&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt; definition
+define command&lt;span class="o"&gt;{&lt;/span&gt;
+   command_name    check_mysql
+   command_line    &lt;span class="nv"&gt;$USER1&lt;/span&gt;$/check_mysql -H &lt;span class="nv"&gt;$HOSTADDRESS&lt;/span&gt;$ -u &lt;span class="nv"&gt;$ARG1&lt;/span&gt;$ -p &lt;span class="nv"&gt;$ARG2&lt;/span&gt;$ -d &lt;span class="nv"&gt;$ARG3&lt;/span&gt;$ -P 3306
+   &lt;span class="o"&gt;}&lt;/span&gt;

+# &lt;span class="s1"&gt;&amp;#39;check_http_with_url_port&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt; definition
+define command&lt;span class="o"&gt;{&lt;/span&gt;
+        command_name    check_http_with_url_port
+        command_line    &lt;span class="nv"&gt;$USER1&lt;/span&gt;$/check_http -I &lt;span class="nv"&gt;$HOSTADDRESS&lt;/span&gt;$ -u &lt;span class="nv"&gt;$ARG1&lt;/span&gt;$ -p &lt;span class="nv"&gt;$ARG2&lt;/span&gt;$
+        &lt;span class="o"&gt;}&lt;/span&gt;
+
+# &lt;span class="s1"&gt;&amp;#39;check_nrpe&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt; definition
+define command&lt;span class="o"&gt;{&lt;/span&gt;
+        command_name check_nrpe
+        command_line &lt;span class="nv"&gt;$USER1&lt;/span&gt;$/check_nrpe -H &lt;span class="nv"&gt;$HOSTADDRESS&lt;/span&gt;$ -c &lt;span class="nv"&gt;$ARG1&lt;/span&gt;$
+        &lt;span class="o"&gt;}&lt;/span&gt;
+
+# &lt;span class="s1"&gt;&amp;#39;check_memcached&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt; definition
+define command&lt;span class="o"&gt;{&lt;/span&gt;
+        command_name check_memcached
+        command_line &lt;span class="nv"&gt;$USER1&lt;/span&gt;$/check_tcp -H &lt;span class="nv"&gt;$HOSTADDRESS&lt;/span&gt;$ -p &lt;span class="m"&gt;11211&lt;/span&gt; -t &lt;span class="m"&gt;5&lt;/span&gt; -E -s &lt;span class="s1"&gt;&amp;#39;stats\r\nquit\r\n&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt; -M crit
+        &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/local/nagios/etc/objects/services.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat objects/services.cfg 
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             PING
        check_command                   check_ping!100.0,20%!500.0,60%
&lt;span class="o"&gt;}&lt;/span&gt;

define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             SSH
        check_command                   check_ssh!-p 1122
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#################&lt;/span&gt;
&lt;span class="c1"&gt;# HTTP services #&lt;/span&gt;
&lt;span class="c1"&gt;#################&lt;/span&gt;
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             Nginx
        check_command                   check_http
&lt;span class="o"&gt;}&lt;/span&gt;

define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             check http tdnaceweb
        check_command                   check_nrpe!check_http_tdanceweb
&lt;span class="o"&gt;}&lt;/span&gt;

define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             check http appstore
        check_command                   check_nrpe!check_http_appstore
&lt;span class="o"&gt;}&lt;/span&gt;

define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             check http launcher
        check_command                   check_nrpe!check_http_launcher
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#########&lt;/span&gt;
&lt;span class="c1"&gt;# Redis #&lt;/span&gt;
&lt;span class="c1"&gt;#########&lt;/span&gt;
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             Redis
        check_command                   check_nrpe!check_redis
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#############&lt;/span&gt;
&lt;span class="c1"&gt;# Memcached #&lt;/span&gt;
&lt;span class="c1"&gt;#############&lt;/span&gt;
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             Memcached
        check_command                   check_nrpe!check_memcached
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#########&lt;/span&gt;
&lt;span class="c1"&gt;# MySQL #&lt;/span&gt;
&lt;span class="c1"&gt;#########&lt;/span&gt;
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        host_name                       appstore01
        service_description             MySQL
        check_command                   check_nrpe!check_mysql
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;################&lt;/span&gt;
&lt;span class="c1"&gt;# disk/partion #&lt;/span&gt;
&lt;span class="c1"&gt;################&lt;/span&gt;
define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             check root disk
        check_command                   check_nrpe!check_disk_root
&lt;span class="o"&gt;}&lt;/span&gt;

define service &lt;span class="o"&gt;{&lt;/span&gt;
        use                             generic-service
        hostgroup_name                  appstore-group
        service_description             check root data
        check_command                   check_nrpe!check_disk_data
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置被监控主机&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/nagios/nrpe_local.cfg 
&lt;span class="c1"&gt;######################################&lt;/span&gt;
&lt;span class="c1"&gt;# Do any local nrpe configuration here&lt;/span&gt;
&lt;span class="c1"&gt;######################################&lt;/span&gt;
command&lt;span class="o"&gt;[&lt;/span&gt;check_disk_root&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_disk -w 25% -c 10% -p /
command&lt;span class="o"&gt;[&lt;/span&gt;check_disk_data&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_disk -w 25% -c 10% -p /data
command&lt;span class="o"&gt;[&lt;/span&gt;check_redis&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_tcp -H localhost -p &lt;span class="m"&gt;6379&lt;/span&gt; -t &lt;span class="m"&gt;5&lt;/span&gt; -E -s &lt;span class="s1"&gt;&amp;#39;info\r\n&amp;#39;&lt;/span&gt; -q &lt;span class="s1"&gt;&amp;#39;quit\r\n&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;uptime_in_days&amp;#39;&lt;/span&gt; -M crit
command&lt;span class="o"&gt;[&lt;/span&gt;check_memcached&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_tcp -H localhost -p &lt;span class="m"&gt;11211&lt;/span&gt; -t &lt;span class="m"&gt;5&lt;/span&gt; -E -s &lt;span class="s1"&gt;&amp;#39;stats\r\nquit\r\n&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt; -M crit
command&lt;span class="o"&gt;[&lt;/span&gt;check_mysql&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_mysql -H localhost -u user -p passwd -d your-database
command&lt;span class="o"&gt;[&lt;/span&gt;check_http_tdanceweb&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_http -H localhost -p &lt;span class="m"&gt;6688&lt;/span&gt; -t 3
command&lt;span class="o"&gt;[&lt;/span&gt;check_http_appstore&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_http -H localhost -p &lt;span class="m"&gt;8888&lt;/span&gt; -t &lt;span class="m"&gt;3&lt;/span&gt; -u /m3/subjects
command&lt;span class="o"&gt;[&lt;/span&gt;check_http_launcher&lt;span class="o"&gt;]=&lt;/span&gt;/usr/lib/nagios/plugins/check_http -H localhost -p &lt;span class="m"&gt;9999&lt;/span&gt; -t 3
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;配置过程中碰到的问题&lt;/h1&gt;
&lt;h2&gt;监控服务器上没有check_nrpe命令&lt;/h2&gt;
&lt;p&gt;如果没有安装nrpe，请下载、编译、安装，请参考&amp;nbsp;安装nagios-nrpe-2.15&lt;/p&gt;
&lt;h2&gt;CHECK_NRPE: Error - Could not complete &lt;span class="caps"&gt;SSL&lt;/span&gt;&amp;nbsp;handshake.&lt;/h2&gt;
&lt;p&gt;编辑/etc/nagios/nrpe.cfg, 确定 allowed_hosts 中加入监控主机&lt;span class="caps"&gt;IP&lt;/span&gt;，多个&lt;span class="caps"&gt;IP&lt;/span&gt;以 &amp;#8220;,&amp;#8221; 分隔。
如:&amp;nbsp;allowed_hosts=127.0.0.1,10.4.13.14&lt;/p&gt;
&lt;p&gt;然后，重新加载 nagios-nrpe-server&amp;nbsp;配置文件，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ service nagios-nrpe-server reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下次再学习并补充联系人及报警相关设置。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-nagios-4-and-monitor-your-servers-on-ubuntu-14-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-nagios-4-and-monitor-your-servers-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://netkiller.github.io/monitoring/nagios/"&gt;http://netkiller.github.io/monitoring/nagios/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Ubuntu"></category><category term="Debian"></category><category term="Monitor"></category><category term="Management"></category></entry><entry><title>Python下载大文件</title><link href="http://blog.wiseturtles.com/posts/python-download-large-file-without-out-of-memory.html" rel="alternate"></link><published>2015-05-22T00:00:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2015-05-22:posts/python-download-large-file-without-out-of-memory.html</id><summary type="html">&lt;h2&gt;requests&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;local_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# NOTE the stream=True parameter&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# filter out keep-alive new chunks&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;local_filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;urllib2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;filename&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt; 
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;详见:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;http://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py&lt;/li&gt;
&lt;li&gt;http://stackoverflow.com/questions/27053028/how-to-download-large-file-without-memoryerror-in-python&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Python"></category><category term="OOM"></category></entry><entry><title>从源码编译安装vim 7.4</title><link href="http://blog.wiseturtles.com/posts/build-vim-7.4.html" rel="alternate"></link><published>2015-03-07T00:15:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2015-03-07:posts/build-vim-7.4.html</id><summary type="html">&lt;h3&gt;准备编译环境&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ sudo apt-get build-dep vim
    $ sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \
            libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \
            libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \
            ruby-dev mercurial
    $ sudo apt-get install checkinstall
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;删除系统vim包&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ sudo apt-get purge vim-tiny vim-common vim-runtime vim
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;下载编译&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ hg clone https://code.google.com/p/vim/
    $ cd vim
    $ ./configure --with-features=huge \
      --enable-multibyte \
      --enable-perlinterp=dynamic \
      --enable-pythoninterp=dynamic \
      --enable-rubyinterp=dynamic \
      --enable-luainterp --with-lua-prefix=/usr \
      --with-python-config-dir=/usr/lib/python2.7/config \
      --enable-gui=auto \
      --enable-gtk2-check \
      --enable-gnome-check \
      --enable-cscope \
      --with-x \
      --prefix=/usr
    $ make VIMRUNTIMEDIR=/usr/share/vim/vim74
    $ sudo checkinstall
    $ vim --version
    $ sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1
    $ sudo update-alternatives --set editor /usr/bin/vim
    $ sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1
    $ sudo update-alternatives --set vi /usr/bin/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;坑&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Ubuntu系统包中的vim太老了&lt;/li&gt;
&lt;li&gt;浪费生命的寡妇王&lt;/li&gt;
&lt;li&gt;./configure &amp;#8212;with-luajit&amp;nbsp;总失败，最后直接去掉&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;收获&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;checkinstall&amp;nbsp;是个好东西&lt;/li&gt;
&lt;/ol&gt;</summary><category term="vim"></category><category term="ubuntu"></category></entry><entry><title>Flask中通过fileConfig配置多个logger</title><link href="http://blog.wiseturtles.com/posts/flask-logging.html" rel="alternate"></link><published>2015-02-11T00:05:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-11:posts/flask-logging.html</id><summary type="html">&lt;h2&gt;Flask中如何通过配置文件配置logger&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建&lt;code&gt;app.py&lt;/code&gt;文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging.config&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;configure_logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;log.conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# 获取当前所有的logger&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loggerDict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;logger start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;app_factory&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;configure_logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建&lt;code&gt;run.py&lt;/code&gt;文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app_factory&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app_factory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建logger的配置文件&lt;code&gt;log.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat log.conf
&lt;span class="c1"&gt;# https://docs.python.org/2/library/logging.config.html#logging-config-fileformat&lt;/span&gt;

&lt;span class="c1"&gt;# configure loggers&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;loggers&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root, other_logger

&lt;span class="o"&gt;[&lt;/span&gt;logger_root&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;DEBUG
&lt;span class="nv"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root_handler
&lt;span class="nv"&gt;qualname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root

&lt;span class="o"&gt;[&lt;/span&gt;logger_other_logger&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;DEBUG
&lt;span class="nv"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root_handler
&lt;span class="nv"&gt;qualname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root.other_logger

&lt;span class="c1"&gt;# configure handlers&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;handlers&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root_handler

&lt;span class="o"&gt;[&lt;/span&gt;handler_root_handler&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;FileHandler
&lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;INFO
&lt;span class="nv"&gt;formatter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root_formatter
&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;app.log&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# configure formatters&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;formatters&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root_formatter

&lt;span class="o"&gt;[&lt;/span&gt;formatter_root_formatter&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;%&lt;span class="o"&gt;(&lt;/span&gt;asctime&lt;span class="o"&gt;)&lt;/span&gt;s %&lt;span class="o"&gt;(&lt;/span&gt;levelname&lt;span class="o"&gt;)&lt;/span&gt;s %&lt;span class="o"&gt;(&lt;/span&gt;message&lt;span class="o"&gt;)&lt;/span&gt;s
&lt;span class="nv"&gt;datefmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;logging.Formatter
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行&lt;code&gt;run.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python run.py 
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;root.other_logger&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;root.other_logger&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看出当前已经配置了两个logger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flask中的默认logger名&lt;/p&gt;
&lt;p&gt;Flask默认以import_name作为logger的默认名&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app = Flask(&amp;#39;root&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本例就是以root作为logger名字，并配置了新的logger:&amp;nbsp;root.other_logger,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用建议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为Flask配置多个模块时，建议通过设置&amp;#8217;qualname&amp;#8217;为&amp;#8217;import_name.sub_name&amp;#8217;做为新的logger名,&lt;/li&gt;
&lt;li&gt;level设置时, logger的level等级应该小于handler的level等级，最终是以handler的设置为准，&amp;nbsp;反之，则起作用的是logger的level&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="flask"></category><category term="logging"></category></entry><entry><title>CentOS上安装Supervisor</title><link href="http://blog.wiseturtles.com/posts/centos-supervisor.html" rel="alternate"></link><published>2015-02-09T23:49:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-09:posts/centos-supervisor.html</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;部署项目从Ubuntu转战到CentOS,&amp;nbsp;使用yum命令安装supervisor后，发现无法正常使用，因此只有使用pip安装.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install supervisor
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置supervisor&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;添加配置文件&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir /etc/supervisor
$ sudo mkdir /etc/supervisor/conf.d
&lt;span class="c1"&gt;# 添加如下配置文件&lt;/span&gt;
$ cat /etc/supervisor/supervisord.conf
&lt;span class="o"&gt;[&lt;/span&gt;unix_http_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/tmp/supervisor.sock    &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;the path to the socket file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;chmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;                       &lt;span class="p"&gt;;&lt;/span&gt; sockef file mode &lt;span class="o"&gt;(&lt;/span&gt;default 0700&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; the below section must remain in the config file &lt;span class="k"&gt;for&lt;/span&gt; RPC
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisorctl/web interface&lt;span class="o"&gt;)&lt;/span&gt; to work, additional interfaces may be
&lt;span class="p"&gt;;&lt;/span&gt; added by defining them in separate rpcinterface: sections
&lt;span class="o"&gt;[&lt;/span&gt;rpcinterface:supervisor&lt;span class="o"&gt;]&lt;/span&gt;
supervisor.rpcinterface_factory &lt;span class="o"&gt;=&lt;/span&gt; supervisor.rpcinterface:make_main_rpcinterface

&lt;span class="o"&gt;[&lt;/span&gt;supervisord&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisor.sock &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default is to run a UNIX domain socket server&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:9001  &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;alternately, ip_address:port specifies AF_INET&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socketmode &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignore, default 0700&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nobody.nogroup     &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socket uid.gid owner &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignores&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;umask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;022&lt;/span&gt;                   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;process file creation umask&lt;span class="p"&gt;;&lt;/span&gt;default 022&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/supervisord.log &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;main log file&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nv"&gt;$CWD&lt;/span&gt;/supervisord.log&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50MB       &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;max main logfile bytes b4 rotation&lt;span class="p"&gt;;&lt;/span&gt;default 50MB&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;num of main logfile rotation backups&lt;span class="p"&gt;;&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;loglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;logging level&lt;span class="p"&gt;;&lt;/span&gt;default info&lt;span class="p"&gt;;&lt;/span&gt; others: debug,warn&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisord.pid &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisord pidfile&lt;span class="p"&gt;;&lt;/span&gt;default supervisord.pid&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;nodaemon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;start in foreground &lt;span class="k"&gt;if&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minfds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;                 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail startup file descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 1024&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minprocs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;                &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail process descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 200&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;childlogdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt; child log dir, default &lt;span class="nv"&gt;$TEMP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;nocleanup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;don&lt;span class="s1"&gt;&amp;#39;t clean up tempfiles at start;default false)&lt;/span&gt;
&lt;span class="s1"&gt;;http_username=user          ; (default is no username (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;http_password=123           ; (default is no password (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;user=chrism                 ; (default is current user, required if root)&lt;/span&gt;
&lt;span class="s1"&gt;;directory=/tmp              ; (default is not to cd during start)&lt;/span&gt;
&lt;span class="s1"&gt;;environment=KEY=value       ; (key value pairs to add to environment)&lt;/span&gt;

&lt;span class="s1"&gt;[supervisorctl]&lt;/span&gt;
&lt;span class="s1"&gt;serverurl=unix:///var/tmp/supervisor.sock ; use a unix:// URL  for a unix socket&lt;/span&gt;
&lt;span class="s1"&gt;;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket&lt;/span&gt;
&lt;span class="s1"&gt;;username=chris              ; should be same as http_username if set&lt;/span&gt;
&lt;span class="s1"&gt;;password=123                ; should be same as http_password if set&lt;/span&gt;
&lt;span class="s1"&gt;;prompt=mysupervisor         ; cmd line prompt (default &amp;quot;supervisor&amp;quot;)&lt;/span&gt;

&lt;span class="s1"&gt;; The below sample program section shows all possible program subsection values,&lt;/span&gt;
&lt;span class="s1"&gt;; create one or more &amp;#39;&lt;/span&gt;real&lt;span class="s1"&gt;&amp;#39; program: sections to be able to control them under&lt;/span&gt;
&lt;span class="s1"&gt;; supervisor.&lt;/span&gt;

&lt;span class="s1"&gt;;[program:theprogramname]&lt;/span&gt;
&lt;span class="s1"&gt;;command=/bin/cat            ; the program (relative uses PATH, can take args)&lt;/span&gt;
&lt;span class="s1"&gt;;priority=999                ; the relative start priority (default 999)&lt;/span&gt;
&lt;span class="s1"&gt;;autostart=true              ; start at supervisord start (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;autorestart=true            ; retstart at unexpected quit (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;startsecs=10                ; number of secs prog must stay running (def. 10)&lt;/span&gt;
&lt;span class="s1"&gt;;startretries=3              ; max # of serial start failures (default 3)&lt;/span&gt;
&lt;span class="s1"&gt;;exitcodes=0,2               ; &amp;#39;&lt;/span&gt;expected&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; codes &lt;span class="k"&gt;for&lt;/span&gt; process &lt;span class="o"&gt;(&lt;/span&gt;default 0,2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopsignal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;QUIT             &lt;span class="p"&gt;;&lt;/span&gt; signal used to &lt;span class="nb"&gt;kill&lt;/span&gt; process &lt;span class="o"&gt;(&lt;/span&gt;default TERM&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopwaitsecs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; max num secs to &lt;span class="nb"&gt;wait&lt;/span&gt; before SIGKILL &lt;span class="o"&gt;(&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;chrism                 &lt;span class="p"&gt;;&lt;/span&gt; setuid to this UNIX account to run the program
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; true, log program stdout &lt;span class="o"&gt;(&lt;/span&gt;default &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; true, log program stderr &lt;span class="o"&gt;(&lt;/span&gt;def &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/log/cat.log    &lt;span class="p"&gt;;&lt;/span&gt; child log path, use NONE &lt;span class="k"&gt;for&lt;/span&gt; none&lt;span class="p"&gt;;&lt;/span&gt; default AUTO
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1MB        &lt;span class="p"&gt;;&lt;/span&gt; max &lt;span class="c1"&gt;# logfile bytes b4 rotation (default 50MB)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# of logfile backups (default 10)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;include&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/supervisor/conf.d/*.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;项目的配置文件写入&amp;nbsp;/etc/supervisor/conf.d/目录即可&lt;/p&gt;
&lt;h2&gt;添加开机启动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 添加如下配置文件&lt;/span&gt;
$ cat /etc/init.d/supervisord

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# /etc/rc.d/init.d/supervisord&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Supervisor is a client/server system that&lt;/span&gt;
&lt;span class="c1"&gt;# allows its users to monitor and control a&lt;/span&gt;
&lt;span class="c1"&gt;# number of processes on UNIX-like operating&lt;/span&gt;
&lt;span class="c1"&gt;# systems.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# chkconfig: - 64 36&lt;/span&gt;
&lt;span class="c1"&gt;# description: Supervisor Server&lt;/span&gt;
&lt;span class="c1"&gt;# processname: supervisord&lt;/span&gt;

&lt;span class="c1"&gt;# Source init functions&lt;/span&gt;
. /etc/rc.d/init.d/functions

&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;supervisord&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;prog_bin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/bin/supervisord&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/run/&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;.pid&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-c /etc/supervisor/supervisord.conf &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

start&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    daemon &lt;span class="nv"&gt;$prog_bin&lt;/span&gt; &lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt; --pidfile &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; success $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; startup&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; failure $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; startup&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Shutting down &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; killproc &lt;span class="nv"&gt;$prog&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; success $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; shutdown&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in

start&lt;span class="o"&gt;)&lt;/span&gt;
start
&lt;span class="p"&gt;;;&lt;/span&gt;

stop&lt;span class="o"&gt;)&lt;/span&gt;
stop
&lt;span class="p"&gt;;;&lt;/span&gt;

status&lt;span class="o"&gt;)&lt;/span&gt;
    status &lt;span class="nv"&gt;$prog&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

restart&lt;span class="o"&gt;)&lt;/span&gt;
stop
start
&lt;span class="p"&gt;;;&lt;/span&gt;

*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|status}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;设置如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chmod +x /etc/init.d/supervisord
$ sudo chkconfig --add supervisord
$ sudo chkconfig supervisord on
$ sudo service supervisord start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="centos"></category><category term="supervisor"></category></entry><entry><title>OpenResty</title><link href="http://blog.wiseturtles.com/posts/openresty-install.html" rel="alternate"></link><published>2015-02-06T15:45:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-06:posts/openresty-install.html</id><summary type="html">&lt;h2&gt;什么是OpenResty&lt;/h2&gt;
&lt;p&gt;OpenResty（也称为 ngx_openresty）是一个全功能的 Web 应用服务器，它打包了标准
的Nginx 核心，很多的常用的第三方模块，以及它们的大多数依赖项。对于经常需要使用&amp;nbsp;nginx第三方模块的人来说，是一个非常不错的选择.&lt;/p&gt;
&lt;h2&gt;下载及安装&lt;/h2&gt;
&lt;p&gt;关于如何下载及安装OpenResty, &lt;a href="http://openresty.org/cn/"&gt;官网&lt;/a&gt;已经有很详细的介&amp;nbsp;绍，不再赘述。&lt;/p&gt;
&lt;h2&gt;添加开机启动脚本&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建如下文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/init.d/nginx

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# chkconfig: 2345 55 25&lt;/span&gt;
&lt;span class="c1"&gt;# Description: Nginx init.d script, put in /etc/init.d, chmod +x /etc/init.d/nginx&lt;/span&gt;
&lt;span class="c1"&gt;#              For Debian, run: update-rc.d -f nginx defaults&lt;/span&gt;
&lt;span class="c1"&gt;#              For CentOS, run: chkconfig --add nginx&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;# Provides:          nginx&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Stop:     $all&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c1"&gt;# Short-Description: nginx init.d script&lt;/span&gt;
&lt;span class="c1"&gt;# Description:       OpenResty (aka. ngx_openresty) is a full-fledged web application server by bundling the standard Nginx core,&lt;/span&gt;
&lt;span class="c1"&gt;#                    lots of 3rd-party Nginx modules, as well as most of their external dependencies.&lt;/span&gt;
&lt;span class="c1"&gt;### END INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nginx Daemon&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nginx
&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/openresty/nginx
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/sbin/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/conf/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.conf
&lt;span class="nv"&gt;PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/logs/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.pid
&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/init.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -x &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt; has no permission to run. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m Or &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
    sleep 1
    &lt;span class="nb"&gt;exit&lt;/span&gt; 1
&lt;span class="k"&gt;fi&lt;/span&gt;

do_start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; already exists. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; is already running or crashed. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reopening &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reopen -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reopened. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Stopping &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s stop -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; stopped. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reloading &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reload -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reloaded. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_quit&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Quitting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s quit -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; quitted. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_test&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Testing &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -t -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_info&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -V
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
start&lt;span class="o"&gt;)&lt;/span&gt;
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
&lt;span class="p"&gt;;;&lt;/span&gt;
reload&lt;span class="o"&gt;)&lt;/span&gt;
do_reload
&lt;span class="p"&gt;;;&lt;/span&gt;
restart&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
quit&lt;span class="o"&gt;)&lt;/span&gt;
do_quit
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
do_test
&lt;span class="p"&gt;;;&lt;/span&gt;
info&lt;span class="o"&gt;)&lt;/span&gt;
do_info
&lt;span class="p"&gt;;;&lt;/span&gt;
*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$SCRIPT&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|reload|restart|quit|test|info}&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; 2
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给文件设置执行权限&lt;code&gt;chmod +x /etc/init.d/nginx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加到开机启动&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CentOS系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chkconfig --list nginx   &lt;span class="c1"&gt;# 列出系统nginx服务启动情况&lt;/span&gt;
chkconfig --add nginx    &lt;span class="c1"&gt;# 添加nginx服务&lt;/span&gt;
chkconfig --level &lt;span class="m"&gt;35&lt;/span&gt; nginx on &lt;span class="c1"&gt;# 设定nginx在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debian系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo update-rc.d -f nginx remove  &lt;span class="c1"&gt;# 删除nginx服务&lt;/span&gt;
sudo update-rc.d apache2 defaults &lt;span class="c1"&gt;# 添加nginx服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;使用logrotate切割日志&lt;/h2&gt;
&lt;p&gt;创建如下文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/logrotate.d/nginx
/etc/openresty/nginx/logs/*.log &lt;span class="o"&gt;{&lt;/span&gt;
    daily
    missingok
    rotate 52
    dateext
    dateformat  -%Y-%m-%d
    compress
    delaycompress
    notifempty
    create &lt;span class="m"&gt;0640&lt;/span&gt; www-data adm
    sharedscripts
    postrotate
        &lt;span class="o"&gt;[&lt;/span&gt; ! -f /etc/openresty/nginx/logs/nginx.pid &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -USR1 &lt;span class="sb"&gt;`&lt;/span&gt;cat /etc/openresty/nginx/logs/nginx.pid&lt;span class="sb"&gt;`&lt;/span&gt;
    endscript
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/openresty/nginx/logs/*.log&lt;/code&gt; 为OpenResty的log目录&lt;/li&gt;
&lt;li&gt;daily：每天轮询&lt;/li&gt;
&lt;li&gt;missingok:&amp;nbsp;如果日志丢失，不报错继续滚动下一个日志&lt;/li&gt;
&lt;li&gt;rotate&amp;nbsp;52：保留最多52次滚动的日志&lt;/li&gt;
&lt;li&gt;dateext：日期扩展&lt;/li&gt;
&lt;li&gt;dateformat:&amp;nbsp;日期格式&lt;/li&gt;
&lt;li&gt;compress：旧日志默认用gzip压缩&lt;/li&gt;
&lt;li&gt;notifempty:当日志为空时不进行滚动&lt;/li&gt;
&lt;li&gt;create: mode owner group&amp;nbsp;转储文件，使用指定的文件模式创建新的日志文件&lt;/li&gt;
&lt;li&gt;/etc/openresty/nginx/logs/nginx.pid：nginx主进程pid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ logroate -f /etc/logrotate.d/nginx
&lt;/pre&gt;&lt;/div&gt;</summary><category term="nginx"></category><category term="openresty"></category></entry><entry><title>linux 小贴士</title><link href="http://blog.wiseturtles.com/posts/linux-tips.html" rel="alternate"></link><published>2015-01-20T18:16:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-20:posts/linux-tips.html</id><summary type="html">&lt;h2&gt;ssh端口转发&lt;/h2&gt;
&lt;p&gt;由于服务器上一些服务的端口没有对外开发，但是在开发时又想直接使用服务器上的这些服务，该怎么办？&lt;/p&gt;
&lt;p&gt;以我们服务器A(192.167.0.1) 为例, 上面有Elasticsheach数据库为例, 由于Elasticsearch数据库比较&amp;nbsp;大，从服务器上将数据拷贝到本地不太现实，便可以通过ssh端口转发来实现。&lt;/p&gt;
&lt;p&gt;前提:&amp;nbsp;本地服务器可以通过ssh登陆到服务器A(192.167.0.1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -fNL 9200:localhost:9200 192.167.0.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过上面命令可以在本地机器和服务器A的9200端口之间做一个隧道，访问本地的9200端&amp;nbsp;口就跟直接访问服务器A上的9200端口一样。&lt;/p&gt;
&lt;p&gt;为了使用方便，可以为上面的命令设置一个别名,添加到&lt;code&gt;~/.bashrc&lt;/code&gt;中，&amp;nbsp;如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;sshes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ssh -fNL 9200:localhost:9200 192.167.0.1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;那么以后使用&lt;code&gt;sshes&lt;/code&gt;就可以方便的建立一个ssh隧道连接,　同理，此法可用于连接服务器上的mysql及其它服务.&lt;/p&gt;
&lt;p&gt;另外一个常用的是通过ssh翻墙的命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -qTfnN -D &lt;span class="m"&gt;7070&lt;/span&gt; 192.167.0.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;前提是172.167.0.2是一台可以直接翻墙的机器(如国外的云主机),执行上面的命令后便可以通过本地的7070端口翻墙.&lt;/p&gt;
&lt;p&gt;更多关于ssh转发的可以查看下面的文章:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://codelife.me/blog/2012/12/09/three-types-of-ssh-turneling/"&gt;三种不同类型的ssh隧道&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ssh登陆配置&lt;/h2&gt;
&lt;p&gt;登陆到远程服务器时,当服务器上的用户名和本地的用户名不一致且端口也不是默认端口时.
以服务器A(192.168.0.1), 用户名为root, 端口为4455。我们每次登陆到远程主机或拷贝
文件时,&amp;nbsp;都需要带上用户名和端口信息。如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ssh登陆&lt;/span&gt;
$ ssh -p &lt;span class="m"&gt;4455&lt;/span&gt; root@192.168.0.1
&lt;span class="c1"&gt;# scp拷贝&lt;/span&gt;
$ scp -P &lt;span class="m"&gt;4455&lt;/span&gt; root@192.168.0.1:/tmp/a a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样比较繁琐。稍微配置一下便可以化繁为简&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.ssh/config
Host 192.168.0.1
    User root
    Port 4455
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样以后每次访问该服务器都不需要带上用户及端口信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ssh登陆&lt;/span&gt;
$ ssh 192.168.0.1
&lt;span class="c1"&gt;# scp拷贝&lt;/span&gt;
$ scp -P 192.168.0.1:/tmp/a a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当本机需要通过不同的key登陆到不同的服务器时，我们都是通过&lt;code&gt;-i&lt;/code&gt;来临时指定key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 使用a.key登陆192.168.0.1&lt;/span&gt;
$ ssh -i ~/.ssh/a.key 192.168.0.1
&lt;span class="c1"&gt;# 使用b.key登陆192.168.0.2&lt;/span&gt;
$ ssh -i ~/.ssh/b.key 192.168.0.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;稍微配置一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.ssh/config
Host 192.168.0.1
    User root
    Port 4455
    IdentityFile ~/.ssh/a.key

Host 192.168.0.2
    User root
    Port 4455
    IdentityFile ~/.ssh/b.key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置之后每次登陆不同的服务器也不需要通过&lt;code&gt;-i&lt;/code&gt;参数指定key了。&lt;/p&gt;
&lt;h2&gt;~/.bashrc配置&lt;/h2&gt;
&lt;p&gt;下面介绍的都是可以添加到&lt;code&gt;~/.bashrc&lt;/code&gt;中的一些配置.&lt;/p&gt;
&lt;h3&gt;让man&amp;nbsp;page不再单调&lt;/h3&gt;
&lt;p&gt;平时使用man page的时候，都是黑白的文字。看起来很是不方便，稍微配置一下，可以让
你的man&amp;nbsp;page充满颜色。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# color man pages&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;31m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_md&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;31m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_me&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_se&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_so&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;44;33m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_ue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LESS_TERMCAP_us&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;32m&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;source ~/.bashrc&lt;/code&gt;后，man一个命令可以看到效果&lt;/p&gt;
&lt;h3&gt;终端操作使用vim模式&lt;/h3&gt;
&lt;p&gt;从&lt;code&gt;@WanMing&lt;/code&gt;处习得的技能，vim控必备&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -o vi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果如何，谁用谁知道&lt;/p&gt;
&lt;h3&gt;python自动激活项目的虚拟环境&lt;/h3&gt;
&lt;p&gt;重写&lt;code&gt;cd&lt;/code&gt;命令，使它在进入到python项目时，自动激活与项目名一样的虚拟环境&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; workon_cwd &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# Check that this is a Git repo&lt;/span&gt;
    &lt;span class="nv"&gt;GIT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;git rev-parse --git-dir 2&amp;gt; /dev/null&lt;span class="sb"&gt;`&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="c1"&gt;# Find the repo root and check for virtualenv name override&lt;/span&gt;
        &lt;span class="nv"&gt;GIT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="se"&gt;\c&lt;/span&gt;d &lt;span class="nv"&gt;$GIT_DIR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="nv"&gt;PROJECT_ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$GIT_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="nv"&gt;ENV_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;basename &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PROJECT_ROOT&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PROJECT_ROOT&lt;/span&gt;&lt;span class="s2"&gt;/.venv&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nv"&gt;ENV_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PROJECT_ROOT&lt;/span&gt;&lt;span class="s2"&gt;/.venv&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="c1"&gt;# Activate the environment only if it is not already active&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIRTUAL_ENV&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$WORKON_HOME&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$ENV_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$WORKON_HOME&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$ENV_NAME&lt;/span&gt;&lt;span class="s2"&gt;/bin/activate&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
                workon &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CD_VIRTUAL_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$CD_VIRTUAL_ENV&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="c1"&gt;# We&amp;#39;ve just left the repo, deactivate the environment&lt;/span&gt;
        &lt;span class="c1"&gt;# Note: this only happens if the virtualenv was activated automatically&lt;/span&gt;
        deactivate &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;unset&lt;/span&gt; CD_VIRTUAL_ENV
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# New cd function that does the virtualenv magic&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; venv_cd &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; workon_cwd
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;cd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;venv_cd&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# init for create new terminal tab&lt;/span&gt;
workon_cwd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;个性化终端提示符&lt;/h3&gt;
&lt;p&gt;通过设置&lt;span class="caps"&gt;PS1&lt;/span&gt;变量, 可以个性化终端提示符,&amp;nbsp;展示更多有用信息.&lt;/p&gt;
&lt;p&gt;如我的终端设置, 里面包含了项目的分支，当前&lt;span class="caps"&gt;HEAD&lt;/span&gt;值，及git库的状态信息&lt;/p&gt;
&lt;p&gt;&lt;img alt="PS1 screenshot" src="http://pic.yupoo.com/crazygit_v/En4dALxz/medium.jpg" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TITLEBAR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SAVE_CURSOR&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;MOVE_CURSOR_RIGHTMOST&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;MOVE_CURSOR_5_LEFT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESTORE_CURSOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENV&lt;/span&gt;&lt;span class="p"&gt;:+(&lt;/span&gt;&lt;span class="nv"&gt;$VIRTUALENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;D_USER_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\u &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;D_INTERMEDIATE_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;at &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;D_MACHINE_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\h &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;D_INTERMEDIATE_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;in &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;D_DIR_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\w &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;D_INTERMEDIATE_COLOR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;demula_vcprompt&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;\&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;is_vim_shell&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如下是一个在线生成&lt;span class="caps"&gt;PS1&lt;/span&gt;变量的网站，可以根据自己的需求定制&lt;span class="caps"&gt;PS1&lt;/span&gt;变量:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bashrcgenerator.com/"&gt;http://bashrcgenerator.com/&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category><category term="tips"></category></entry><entry><title>Gerrit搭建指南</title><link href="http://blog.wiseturtles.com/posts/gerrit.html" rel="alternate"></link><published>2015-01-15T17:09:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-15:posts/gerrit.html</id><summary type="html">&lt;h2&gt;什么是Gerrit&lt;/h2&gt;
&lt;p&gt;Gerrit，一种免费、开放源代码的代码审查软件，使用网页界面。利用网页浏览器，同一个团队的软件程序员，可以相互审阅彼此修改后的程序代码，决定是否能够提交，退回或者继续修改。它使用Git作为底层版本控制系统。&lt;/p&gt;
&lt;p&gt;本文以Ubuntu&amp;nbsp;12.04，Gerrit2.9.4(目前最新的版本)为例介绍整个搭建过程&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;环境要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;JDK&lt;/span&gt;&amp;nbsp;1.7+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;前期准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;span class="caps"&gt;JDK1&lt;/span&gt;.7&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt-get update
$ sudo apt-get install oracle-java7-installer
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install git
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Nginx服务器, 用于作为Gerrit网站的反向代理以及&lt;span class="caps"&gt;HTTP&lt;/span&gt;认证&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;数据库设置&lt;/h2&gt;
&lt;p&gt;Gerrit的使用必须依赖于数据库，目前支持的数据库有H2(Gerrit内置的), PostgreSQL, MySQL,&amp;nbsp;Oracle.&lt;/p&gt;
&lt;p&gt;本文以MySQL为例，介绍数据库的设置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 安装数据库&lt;/span&gt;
$ sudo apt-get install mysql-server

&lt;span class="c1"&gt;# 创建数据库reviewdb和用户gerrit2为后面做准备&lt;/span&gt;
&lt;span class="c1"&gt;# 数据库名和用户名可以根据实际的使用情况自己选择&lt;/span&gt;
mysql&amp;gt; CREATE USER &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; CREATE DATABASE reviewdb&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; GRANT ALL ON reviewdb.* TO &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; FLUSH PRIVILEGES&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;初始化Gerrit站点&lt;/h2&gt;
&lt;p&gt;由于Gerrit创建中需要保存自己的&lt;span class="caps"&gt;SSH&lt;/span&gt; Keys,&amp;nbsp;配置文件，代码库等信息，因此强烈建议单独创建一个用户来创建Gerrit站点。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 在系统上添加用户gerrit2&lt;/span&gt;
$ sudo adduser gerrit2
&lt;span class="c1"&gt;# 切换到当前用户&lt;/span&gt;
$ sudo su gerrit2
&lt;span class="c1"&gt;# 下载gerrit安装包&lt;/span&gt;
$ wget http://gerrit-releases.storage.googleapis.com/gerrit-2.9.4.war
&lt;span class="c1"&gt;# -d 指定站点的根目录, 本例以gerrit2 HOME目录下的gerrit为例&lt;/span&gt;
$ java -jar gerrit-2.9.4.war init -d gerrit

*** Gerrit Code Review 2.9.4
***

Create &lt;span class="s1"&gt;&amp;#39;/home/gerrit2/gerrit&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?

*** Git Repositories
***
&lt;span class="c1"&gt;# 项目代码目录设置&lt;/span&gt;
Location of Git repositories   &lt;span class="o"&gt;[&lt;/span&gt;git&lt;span class="o"&gt;]&lt;/span&gt;:

*** SQL Database
***

Database server &lt;span class="nb"&gt;type&lt;/span&gt;           &lt;span class="o"&gt;[&lt;/span&gt;h2&lt;span class="o"&gt;]&lt;/span&gt;: mysql

Gerrit Code Review is not shipped with MySQL Connector/J 5.1.21
**  This library is required &lt;span class="k"&gt;for&lt;/span&gt; your configuration. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://repo2.maven.org/maven2/mysql/mysql-connector-java/5.1.21/mysql-connector-java-5.1.21.jar ... OK
Checksum mysql-connector-java-5.1.21.jar OK
Server hostname                &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:           &lt;span class="c1"&gt;# 此处填写刚刚创建数据库时设置的信息&lt;/span&gt;
Server port                    &lt;span class="o"&gt;[(&lt;/span&gt;mysql default&lt;span class="o"&gt;)]&lt;/span&gt;:
Database name                  &lt;span class="o"&gt;[&lt;/span&gt;reviewdb&lt;span class="o"&gt;]&lt;/span&gt;:
Database username              &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
gerrit2&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password             :
            confirm password :

*** Index
***

Type                           &lt;span class="o"&gt;[&lt;/span&gt;LUCENE/?&lt;span class="o"&gt;]&lt;/span&gt;:

*** User Authentication
***

&lt;span class="c1"&gt;# 认证方式设置, 根据实际情况自行选择，不清楚有哪些方式可以输入&amp;quot;?&amp;quot;查看&lt;/span&gt;
Authentication method          &lt;span class="o"&gt;[&lt;/span&gt;OPENID/?&lt;span class="o"&gt;]&lt;/span&gt;: http
Get username from custom HTTP header &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
SSO &lt;span class="nb"&gt;logout&lt;/span&gt; URL                 :

*** Review Labels
***

Install Verified label         &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

*** Email Delivery
***

&lt;span class="c1"&gt;# 邮件服务器设置, 根据实际情况自行选择&lt;/span&gt;
SMTP server hostname           &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP server port               &lt;span class="o"&gt;[(&lt;/span&gt;default&lt;span class="o"&gt;)]&lt;/span&gt;:
SMTP encryption                &lt;span class="o"&gt;[&lt;/span&gt;NONE/?&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP username                  :

*** Container Process
***

Run as                         &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
Java runtime                   &lt;span class="o"&gt;[&lt;/span&gt;/usr/lib/jvm/java-7-oracle/jre&lt;span class="o"&gt;]&lt;/span&gt;:
Copy gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Copying gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war

*** SSH Daemon
***

Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;29418&lt;span class="o"&gt;]&lt;/span&gt;:

Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v149
If available, Gerrit can take advantage of features
in the library, but will also &lt;span class="k"&gt;function&lt;/span&gt; without it.
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcpkix-jdk15on-149.jar ... OK
Checksum bcpkix-jdk15on-149.jar OK

Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v149
** This library is required by Bouncy Castle Crypto SSL v149. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcprov-jdk15on-149.jar ... OK
Checksum bcprov-jdk15on-149.jar OK
Generating SSH host key ... rsa... dsa... &lt;span class="k"&gt;done&lt;/span&gt;

*** HTTP Daemon
***

&lt;span class="c1"&gt;# 启用反向代理&lt;/span&gt;
Behind reverse proxy           &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;? y
Proxy uses SSL &lt;span class="o"&gt;(&lt;/span&gt;https://&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Subdirectory on proxy server   &lt;span class="o"&gt;[&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;8081&lt;span class="o"&gt;]&lt;/span&gt;:     &lt;span class="c1"&gt;# 设置gerrit网站监听端口&lt;/span&gt;
Canonical URL                  &lt;span class="o"&gt;[&lt;/span&gt;http://localhost/&lt;span class="o"&gt;]&lt;/span&gt;:

*** Plugins
***

Install plugin commit-message-length-validator version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin download-commands version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin replication version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin reviewnotes version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin singleusergroup version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

Initialized /home/gerrit2/gerrit
Executing /home/gerrit2/gerrit/bin/gerrit.sh start
Starting Gerrit Code Review: OK
Waiting &lt;span class="k"&gt;for&lt;/span&gt; server on localhost:80 ... OK
Opening http://localhost/#/admin/projects/ ...No protocol specified
No protocol specified
OK
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置nginx反向代理&lt;/h2&gt;
&lt;p&gt;在nginx配置中间中配置如下:&lt;/p&gt;
&lt;pre&gt;
      location / {
            proxy_pass        http://localhost:8081;
            proxy_set_header  X-Forwarded-For $remote_addr;
            proxy_set_header  Host $host;
            auth_basic "Restricted";  # 配置访问限制和密码文件
            auth_basic_user_file  /home/gerrit2/gerrit/etc/auth_passwd;

    }
&lt;/pre&gt;

&lt;p&gt;创建用户密码文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 创建用户名和密码都是admin的文件&lt;/span&gt;
$ htpasswd -b -c /home/gerrit2/gerrit/etc/auth_passwd admin admin
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;访问&lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;输入用户名和密码即可登陆到Gerrit&lt;/p&gt;
&lt;h2&gt;Gerrit目录结构&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tree -L &lt;span class="m"&gt;1&lt;/span&gt; gerrit
gerrit
├── bin
├── cache
├── data
├── etc  &lt;span class="c1"&gt;# 配置信息, 创建站点时的配置信息都保存在这里，可以按照需要修改&lt;/span&gt;
├── git
├── index
├── lib
├── logs
├── plugins
├── static
└── tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gerrit/bin/gerrit.sh start  &lt;span class="c1"&gt;# 启动gerrit服务&lt;/span&gt;
$ gerrit/bin/gerrit.sh stop   &lt;span class="c1"&gt;# 关闭gerrit服务&lt;/span&gt;
$ gerrit/bin/gerrit.sh restart &lt;span class="c1"&gt;# 重启gerrit服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;更多信息&lt;/h2&gt;
&lt;p&gt;关于gerrit主题设置，使用方法等更多信息，官方文档上已有详细描述,&amp;nbsp;请参考:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;更新&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;最近因工作需要，又重新搭建了一次gerrit, 遇到一些坑, 记录一下&lt;/em&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果用MySQL作为数据库，Gerrit数据库的引擎应该是Innodb.&lt;/li&gt;
&lt;li&gt;配置邮件时，一直认证失败，除了在&lt;code&gt;etc/gerrt.conf&lt;/code&gt;文件里指定&lt;code&gt;sendmail.smtpUser&lt;/code&gt;, 还需要指定&lt;code&gt;sendmail.from&lt;/code&gt;为发送邮件的用户信息, 格式为&lt;code&gt;username &amp;lt;youmail@mail.com&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;认证可以使用github oauth认证&lt;a href="https://github.com/davido/gerrit-oauth-provider"&gt;gerrit-oauth-provider&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="git"></category><category term="gerrit"></category></entry><entry><title>netstat</title><link href="http://blog.wiseturtles.com/posts/linux-netstat.html" rel="alternate"></link><published>2015-01-14T10:35:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-14:posts/linux-netstat.html</id><summary type="html">&lt;p&gt;本文参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html"&gt;http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.binarytides.com/linux-netstat-command-examples/"&gt;http://www.binarytides.com/linux-netstat-command-examples/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;作用&lt;/h2&gt;
&lt;p&gt;Netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态
(Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等&amp;nbsp;等。&lt;/p&gt;
&lt;h2&gt;输出信息含义&lt;/h2&gt;
&lt;p&gt;执行netstat后，其输出结果为&lt;/p&gt;
&lt;pre&gt;
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address Foreign Address State
tcp 0 2 210.34.6.89:telnet 210.34.6.96:2873 ESTABLISHED
tcp 296 0 210.34.6.89:1165 210.34.6.84:netbios-ssn ESTABLISHED
tcp 0 0 localhost.localdom:9001 localhost.localdom:1162 ESTABLISHED
tcp 0 0 localhost.localdom:1162 localhost.localdom:9001 ESTABLISHED
tcp 0 80 210.34.6.89:1161 210.34.6.10:netbios-ssn CLOSE

Active UNIX domain sockets (w/o servers)
Proto RefCnt Flags Type State I-Node Path
unix 1 [ ] STREAM CONNECTED 16178 @000000dd
unix 1 [ ] STREAM CONNECTED 16176 @000000dc
unix 9 [ ] DGRAM 5292 /dev/log
unix 1 [ ] STREAM CONNECTED 16182 @000000df
&lt;/pre&gt;

&lt;p&gt;从整体上看，netstat的输出结果可以分为两个部分：&lt;/p&gt;
&lt;p&gt;一个是Active Internet connections，称为有源&lt;span class="caps"&gt;TCP&lt;/span&gt;连接，其中&amp;#8221;Recv-Q&amp;#8221;和&amp;#8221;Send-Q&amp;#8221;指%0A的是接收队列和发送队列。这些数字一般都应该是0。如果不是则表示软件包正在队列中堆积。这种情况只能在非常少的情况见到。&lt;/p&gt;
&lt;p&gt;另一个是Active &lt;span class="caps"&gt;UNIX&lt;/span&gt; domain sockets，称为有源Unix域套接口(和网络套接字一样，但是只能用于本机通信，性能可以提高一倍)。&amp;nbsp;Proto显示连接使用的协议,RefCnt表示连接到本套接口上的进程号,Types显示套接口的类型,State显示套接口当前的状态,Path表示连接到套接口的其它进程使用的路径名。&lt;/p&gt;
&lt;h2&gt;常见参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;-a&amp;nbsp;(all)显示所有监听和未监听的连接&lt;/li&gt;
&lt;li&gt;-t&amp;nbsp;(tcp)仅显示tcp相关选项&lt;/li&gt;
&lt;li&gt;-u&amp;nbsp;(udp)仅显示udp相关选项&lt;/li&gt;
&lt;li&gt;-n&amp;nbsp;拒绝显示别名，能显示数字的全部转化成数字。&lt;/li&gt;
&lt;li&gt;-l 仅列出有在 Listen (监听) 的服務状态&amp;nbsp;*&lt;/li&gt;
&lt;li&gt;-p&amp;nbsp;显示建立相关链接的程序名&lt;/li&gt;
&lt;li&gt;-r&amp;nbsp;显示路由信息，路由表&lt;/li&gt;
&lt;li&gt;-e&amp;nbsp;显示扩展信息，例如uid等&lt;/li&gt;
&lt;li&gt;-s&amp;nbsp;按各个协议进行统计&lt;/li&gt;
&lt;li&gt;-c&amp;nbsp;每隔一个固定时间，执行该netstat命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;：&lt;span class="caps"&gt;LISTEN&lt;/span&gt;和&lt;span class="caps"&gt;LISTENING&lt;/span&gt;的状态只有用-a或者-l才能看到&lt;/p&gt;
&lt;h2&gt;实用命令实例&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 列出所有连接（包括监听和未监听的)&lt;/span&gt;
$ netstat -a

&lt;span class="c1"&gt;# 列出所有tcp连接&lt;/span&gt;
$ netstat -at

&lt;span class="c1"&gt;# 列出所有udp连接&lt;/span&gt;
$ netstat -au

&lt;span class="c1"&gt;# 默认情况下，netstat命令会做一个reverse dns lookup去查找连接的ip&lt;/span&gt;
&lt;span class="c1"&gt;# 对应的主机名，这会降低输出速度，如果不需要，可以使用-n&lt;/span&gt;
&lt;span class="c1"&gt;# 在netstat输出中不显示主机，端口和用户名(host, port or user)&lt;/span&gt;
$ netstat -an

&lt;span class="c1"&gt;# 列出所有处于监听状态的&lt;/span&gt;
&lt;span class="c1"&gt;# -l选项不要与-a同时使用，不然也会列出未监听状态的连接&lt;/span&gt;
$ netstat -l

&lt;span class="c1"&gt;# 列出所有监听状态的tcp连击&lt;/span&gt;
$ netstat -lt

&lt;span class="c1"&gt;# 列出所有监听状态的udp连击&lt;/span&gt;
$ netstat -lu

&lt;span class="c1"&gt;# 列出所有的unix连接&lt;/span&gt;
$ netstat -lx

&lt;span class="c1"&gt;# 在netstat输出中显示PID和进程名称(-p),用户名(-e)&lt;/span&gt;
&lt;span class="c1"&gt;# -p使用需要root权限,不然无法获取PID&lt;/span&gt;
$ sudo netstat -ltpe
Proto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode       PID/Program name
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; localhost:5037          *:*                     LISTEN      linliang   &lt;span class="m"&gt;4530492&lt;/span&gt;     11684/adb
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; localhost:63342         *:*                     LISTEN      linliang   &lt;span class="m"&gt;10952269&lt;/span&gt;    6663/java
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; localhost:9200          *:*                     LISTEN      linliang   &lt;span class="m"&gt;10361577&lt;/span&gt;    12461/ssh
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; *:http                  *:*                     LISTEN      root       &lt;span class="m"&gt;12810&lt;/span&gt;       1344/nginx
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; localhost:domain        *:*                     LISTEN      root       &lt;span class="m"&gt;683&lt;/span&gt;         1481/dnsmasq

&lt;span class="c1"&gt;# 上面的命令总如果使用-n,将会显示用户UID，而不是用户名&lt;/span&gt;

&lt;span class="c1"&gt;# 列出所有的网络统计信息&lt;/span&gt;
$ netstat -s
Ip:
&lt;span class="m"&gt;14989101&lt;/span&gt; total packets received
&lt;span class="m"&gt;0&lt;/span&gt; forwarded
&lt;span class="m"&gt;0&lt;/span&gt; incoming packets discarded
&lt;span class="m"&gt;14986294&lt;/span&gt; incoming packets delivered
&lt;span class="m"&gt;11643610&lt;/span&gt; requests sent out
Icmp:
    &lt;span class="m"&gt;6034&lt;/span&gt; ICMP messages received
    &lt;span class="m"&gt;71&lt;/span&gt; input ICMP message failed.
    ICMP input histogram:
        destination unreachable: 5774
        timeout in transit: 106
        &lt;span class="nb"&gt;echo&lt;/span&gt; replies: 154
    &lt;span class="m"&gt;6882&lt;/span&gt; ICMP messages sent
    &lt;span class="m"&gt;0&lt;/span&gt; ICMP messages failed
    ICMP output histogram:
....

&lt;span class="c1"&gt;# 显示TCP或UDP连接的统计信息&lt;/span&gt;
$ netstat -st
$ netstat -su

&lt;span class="c1"&gt;# 显示kernel的路由信息(-r)&lt;/span&gt;
$ netstat -rn
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         172.26.50.1     0.0.0.0         UG        &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt; eth1
169.254.0.0     0.0.0.0         255.255.0.0     U         &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt; eth1
172.26.50.0     0.0.0.0         255.255.255.0   U         &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt; eth1
192.168.56.0    0.0.0.0         255.255.255.0   U         &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt; vboxnet0

&lt;span class="c1"&gt;# 打印网络接口(-i)&lt;/span&gt;
$ netstat -i
Kernel Interface table
Iface   MTU Met   RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
eth1       &lt;span class="m"&gt;1500&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;10650979&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;10656895&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; BMRU
lo        &lt;span class="m"&gt;65536&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;   &lt;span class="m"&gt;5095802&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;       &lt;span class="m"&gt;5095802&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; LRU
vboxnet0   &lt;span class="m"&gt;1500&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;1505&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; BMRU

&lt;span class="c1"&gt;# 上面的输出比较原始，为了获取友好输出，可以加上(-e)&lt;/span&gt;
&lt;span class="c1"&gt;# 达到与ifconfig命令类似的效果&lt;/span&gt;
$ netstat -ie
Kernel Interface table
eth1      Link encap:Ethernet  HWaddr 44:39:c4:8d:d9:64
        inet addr:172.26.50.13  Bcast:172.26.50.255  Mask:255.255.255.0
        inet6 addr: fe80::4639:c4ff:fe8d:d964/64 Scope:Link
        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
        RX packets:10651112 errors:0 dropped:0 overruns:0 frame:0
        TX packets:10656940 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1000
        RX bytes:6607723134 &lt;span class="o"&gt;(&lt;/span&gt;6.6 GB&lt;span class="o"&gt;)&lt;/span&gt;  TX bytes:10396843122 &lt;span class="o"&gt;(&lt;/span&gt;10.3 GB&lt;span class="o"&gt;)&lt;/span&gt;
        Interrupt:20 Memory:f7c00000-f7c20000

lo        Link encap:Local Loopback
        inet addr:127.0.0.1  Mask:255.0.0.0
        inet6 addr: ::1/128 Scope:Host
        UP LOOPBACK RUNNING  MTU:65536  Metric:1
        RX packets:5095811 errors:0 dropped:0 overruns:0 frame:0
        TX packets:5095811 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:0
        RX bytes:2717552755 &lt;span class="o"&gt;(&lt;/span&gt;2.7 GB&lt;span class="o"&gt;)&lt;/span&gt;  TX bytes:2717552755 &lt;span class="o"&gt;(&lt;/span&gt;2.7 GB&lt;span class="o"&gt;)&lt;/span&gt;

vboxnet0  Link encap:Ethernet  HWaddr 0a:00:27:00:00:00
        inet addr:192.168.56.1  Bcast:192.168.56.255  Mask:255.255.255.0
        inet6 addr: fe80::800:27ff:fe00:0/64 Scope:Link
        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
        RX packets:0 errors:0 dropped:0 overruns:0 frame:0
        TX packets:1505 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1000
        RX bytes:0 &lt;span class="o"&gt;(&lt;/span&gt;0.0 B&lt;span class="o"&gt;)&lt;/span&gt;  TX bytes:130893 &lt;span class="o"&gt;(&lt;/span&gt;130.8 KB&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="command"></category><category term="netstat"></category></entry><entry><title>ps</title><link href="http://blog.wiseturtles.com/posts/linux-ps.html" rel="alternate"></link><published>2015-01-13T09:51:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-13:posts/linux-ps.html</id><summary type="html">&lt;p&gt;本文参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.binarytides.com/linux-ps-command/"&gt;10 basic examples of Linux ps&amp;nbsp;command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://man.linuxde.net/ps"&gt;http://man.linuxde.net/ps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;作用&lt;/h2&gt;
&lt;p&gt;ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，可以使用top命令&amp;nbsp;。&lt;/p&gt;
&lt;h2&gt;参数形式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unix风格的参数，前面加单破折线&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;BSD&lt;/span&gt;风格的参数，&amp;nbsp;前面不加破折线&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt;风格的长参数，前面加双破折线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同风格的参数可以混合使用,&amp;nbsp;但是要注意避免冲突。&lt;/p&gt;
&lt;p&gt;如:&lt;/p&gt;
&lt;p&gt;命令&lt;code&gt;ps -aux&lt;/code&gt;和&lt;code&gt;ps aux&lt;/code&gt;是不一样的。&lt;code&gt;ps -aux&lt;/code&gt;是显示所有&amp;#8217;x&amp;#8217;用户的进程, 如果用户&amp;#8217;x&amp;#8217;不存在的话，会给出警告，并当做&lt;code&gt;ps aux&lt;/code&gt;来处理。&lt;/p&gt;
&lt;h2&gt;使用示例&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;显示所有进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps aux
$ ps -ef
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示指定用户的进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -f -u www-data

&lt;span class="c1"&gt;# 多个用户用&amp;#39;,&amp;#39;隔开&lt;/span&gt;
$ ps -f -u www-data,root
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照进程名来指定&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -C nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-C&amp;nbsp;选项必须提供精确的进程名，不提供模糊匹配，一般使用grep来搜索&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -ef &lt;span class="p"&gt;|&lt;/span&gt;grep nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照进程id来查找&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -f -p 3150,7298,6455
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照&lt;span class="caps"&gt;CPU&lt;/span&gt;或内存使用情况排序&lt;/p&gt;
&lt;p&gt;使用&amp;#8212;sort选项可以按照一定的顺序排序，并且可以在指定的排序列前添加&amp;#8217;-&amp;#8216;或&amp;#8217;+&amp;#8217;&amp;nbsp;来指定降序或升序排列&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cpu 使用前５&lt;/span&gt;
$ ps aux --sort&lt;span class="o"&gt;=&lt;/span&gt;-pcpu &lt;span class="p"&gt;|&lt;/span&gt; head -5

&lt;span class="c1"&gt;# 内存 使用前５&lt;/span&gt;
$ ps aux --sort&lt;span class="o"&gt;=&lt;/span&gt;-pmem &lt;span class="p"&gt;|&lt;/span&gt; head -5

&lt;span class="c1"&gt;# 指定多个排序&lt;/span&gt;
$ ps jax --sort&lt;span class="o"&gt;=&lt;/span&gt;uid,-ppid,+pid
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;排序选项参见man page &lt;code&gt;STANDARD FORMAT SPECIFIERS&lt;/code&gt;部分&lt;/p&gt;
&lt;p&gt;部分选项列出如下
&lt;pre&gt;
cmd          simple name of executable
pcpu         cpu utilization
pmem         ratio of the process's resident set size to the
            physical memory on the machine, expressed as a
            percentage
flags        flags as in long format F field
pgrp         process group ID
tpgid        controlling tty process group ID
cutime       cumulative user time
cstime       cumulative system time
utime        user time
min_flt      number of minor page faults
maj_flt      number of major page faults
cmin_flt     cumulative minor page faults
cmaj_flt     cumulative major page faults
session      session ID
pid          process ID
ppid         parent process ID
rss          resident set size
resident     resident pages
size         approximate amount of swap space that would be
            required if the process were to dirty all writable
            pages and then be swapped out. This number is
            very rough!
share        amount of shared pages
tty          the device number of the controlling tty
start_time   time process was started
uid          user ID number
user         user name
vsize        total VM size in kB
priority     kernel scheduling priority
&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照树状结构显示&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;--forest&lt;/code&gt;选项&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -f --forest -C nginx
UID        PID  PPID  C STIME TTY          TIME CMD
root      &lt;span class="m"&gt;1344&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2014&lt;/span&gt; ?        00:00:00 nginx: master process /usr/sbin/nginx
www-data  &lt;span class="m"&gt;1345&lt;/span&gt;  &lt;span class="m"&gt;1344&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2014&lt;/span&gt; ?        00:01:52  &lt;span class="se"&gt;\_&lt;/span&gt; nginx: worker process
www-data  &lt;span class="m"&gt;1346&lt;/span&gt;  &lt;span class="m"&gt;1344&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2014&lt;/span&gt; ?        00:02:05  &lt;span class="se"&gt;\_&lt;/span&gt; nginx: worker process
www-data  &lt;span class="m"&gt;1348&lt;/span&gt;  &lt;span class="m"&gt;1344&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2014&lt;/span&gt; ?        00:02:00  &lt;span class="se"&gt;\_&lt;/span&gt; nginx: worker process
www-data  &lt;span class="m"&gt;1349&lt;/span&gt;  &lt;span class="m"&gt;1344&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2014&lt;/span&gt; ?        00:01:04  &lt;span class="se"&gt;\_&lt;/span&gt; nginx: worker process
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不要把&lt;code&gt;--forest&lt;/code&gt;和&lt;code&gt;--sort&lt;/code&gt;选项混合使用，因为他们都会影响结果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出子进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;＃先列出所有nginx进程
$ ps -o pid,uname,comm -C nginx
PID USER     COMMAND
&lt;span class="m"&gt;1344&lt;/span&gt; root     nginx
&lt;span class="m"&gt;1345&lt;/span&gt; www-data nginx
&lt;span class="m"&gt;1346&lt;/span&gt; www-data nginx
&lt;span class="m"&gt;1348&lt;/span&gt; www-data nginx
&lt;span class="m"&gt;1349&lt;/span&gt; www-data nginx

&lt;span class="c1"&gt;# 使用--ppid选项列出子进程&lt;/span&gt;
$ ps --ppid 2359
PID TTY          TIME CMD
&lt;span class="m"&gt;4524&lt;/span&gt; ?        00:00:00 apache2
&lt;span class="m"&gt;4525&lt;/span&gt; ?        00:00:00 apache2
&lt;span class="m"&gt;4526&lt;/span&gt; ?        00:00:00 apache2
&lt;span class="m"&gt;4527&lt;/span&gt; ?        00:00:00 apache2
&lt;span class="m"&gt;4528&lt;/span&gt; ?        00:00:00 apache2
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出进程的线程&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;-L&lt;/code&gt;选项&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -p &lt;span class="m"&gt;3150&lt;/span&gt; -L
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定输出结果的列&lt;/p&gt;
&lt;p&gt;可以输出的列信息与&lt;code&gt;--sort&lt;/code&gt;选项一样，可以查看man page 的&lt;code&gt;STANDARD FORMAT SPECIFIERS&lt;/code&gt;部分&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -e -o pid,uname,pcpu,pmem,comm

&lt;span class="c1"&gt;# 显示指定的列并给出别名&lt;/span&gt;
$ ps -e -o pid,uname&lt;span class="o"&gt;=&lt;/span&gt;USERNAME,pcpu&lt;span class="o"&gt;=&lt;/span&gt;CPU_USAGE,pmem,comm
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将ps转变为实时更新的效果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$  watch -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出僵尸进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ps -A -o stat,ppid,pid,cmd &lt;span class="p"&gt;|&lt;/span&gt;grep -e &lt;span class="s1"&gt;&amp;#39;^[Zz]&amp;#39;&lt;/span&gt;
$ ps -ef &lt;span class="p"&gt;|&lt;/span&gt; grep defunct &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定用户, 程序的&lt;span class="caps"&gt;CPU&lt;/span&gt;和内存使用情况统计&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# redis用户所使用的cpu和内存信息统计&lt;/span&gt;
$ ps --no-headers -u redis -o pcpu,pmem,command &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{cpu += $1; pmem += $2} END {print cpu, pmem}&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看只是监听在6000端口的redis使用cpu和内存信息&lt;/span&gt;
$ ps --no-headers -u redis -o pcpu,pmem,command &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="m"&gt;6000&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{cpu += $1; pmem += $2} END {print cpu, pmem}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部分选项解释&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;
-a： 显示所有终端机下执行的程序，除了阶段作业领导者之外。
a：  显示现行终端机下的所有程序，包括其他用户的程序。
-A： 显示所有程序。
-c： 显示CLS和PRI栏位。
c：  列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。
-C&lt;指令名称&gt;： 指定执行指令的名称，并列出该指令的程序的状况。
-d： 显示所有程序，但不包括阶段作业领导者的程序。
-e： 此选项的效果和指定"A"选项相同。
e：  列出程序时，显示每个程序所使用的环境变量。
-f： 显示UID,PPIP,C与STIME栏位。
f：  用ASCII字符显示树状结构，表达程序间的相互关系。
-g&lt;群组名称&gt;： 此选项的效果和指定"-G"选项相同，当亦能使用阶段作业领导者的名称来指定。
g：  显示现行终端机下的所有程序，包括群组领导者的程序。 -G&lt;群组识别码&gt;：列出属于该群组的程序的状况，也可使用群组名称来指定。
h：  不显示标题列。
-H： 显示树状结构，表示程序间的相互关系。
-j或j： 采用工作控制的格式显示程序状况。
-l或l： 采用详细的格式来显示程序状况。
L：  列出栏位的相关信息。
-m或m： 显示所有的执行绪。
n：  以数字来表示USER和WCHAN栏位。
-N： 显示所有的程序，除了执行ps指令终端机下的程序之外。
-p&lt;程序识别码&gt;： 指定程序识别码，并列出该程序的状况。
p&lt;程序识别码&gt;：  此选项的效果和指定"-p"选项相同，只在列表格式方面稍有差异。
r：  只列出现行终端机正在执行中的程序。
-s&lt;阶段作业&gt;：   指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。
s：  采用程序信号的格式显示程序状况。
S：  列出程序时，包括已中断的子程序资料。
-t&lt;终端机编号&gt;：  指定终端机编号，并列出属于该终端机的程序的状况。
t&lt;终端机编号&gt;：   此选项的效果和指定"-t"选项相同，只在列表格式方面稍有差异。
-T：   显示现行终端机下的所有程序。
-u&lt;用户识别码&gt;：  此选项的效果和指定"-U"选项相同。
u：  以用户为主的格式来显示程序状况。
-U&lt;用户识别码&gt;：  列出属于该用户的程序的状况，也可使用用户名称来指定。
U&lt;用户名称&gt;：  列出属于该用户的程序的状况。
v：  采用虚拟内存的格式显示程序状况。
-V或V：  显示版本信息。
-w或w：  采用宽阔的格式来显示程序状况。　
x：  显示所有程序，不以终端机来区分。
X：  采用旧式的Linux i386登陆格式显示程序状况。
-y：  配合选项"-l"使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。
-&lt;程序识别码&gt;：  此选项的效果和指定"p"选项相同。
--cols&lt;每列字符数&gt;：  设置每列的最大字符数。
--columns&lt;每列字符数&gt;：  此选项的效果和指定"--cols"选项相同。
--cumulative：  此选项的效果和指定"S"选项相同。
--deselect：  此选项的效果和指定"-N"选项相同。
--forest：  此选项的效果和指定"f"选项相同。
--headers：  重复显示标题列。
--help：  在线帮助。
--info：  显示排错信息。
--lines&lt;显示列数&gt;：  设置显示画面的列数。
--no-headers：  此选项的效果和指定"h"选项相同，只在列表格式方面稍有差异。
--group&lt;群组名称&gt;：  此选项的效果和指定"-G"选项相同。
--Group&lt;群组识别码&gt;：  此选项的效果和指定"-G"选项相同。
--pid&lt;程序识别码&gt;：  此选项的效果和指定"-p"选项相同。
--rows&lt;显示列数&gt;：  此选项的效果和指定"--lines"选项相同。
--sid&lt;阶段作业&gt;：  此选项的效果和指定"-s"选项相同。
--tty&lt;终端机编号&gt;：  此选项的效果和指定"-t"选项相同。
--user&lt;用户名称&gt;：  此选项的效果和指定"-U"选项相同。
--User&lt;用户识别码&gt;：  此选项的效果和指定"-U"选项相同。
--version：  此选项的效果和指定"-V"选项相同。
--widty&lt;每列字符数&gt;：  此选项的效果和指定"-cols"选项相同。
&lt;/pre&gt;</summary><category term="linux"></category><category term="command"></category><category term="ps"></category></entry><entry><title>export Android cantacts with vCard format via adb</title><link href="http://blog.wiseturtles.com/posts/android-vcard-from-command-line.html" rel="alternate"></link><published>2015-01-11T15:20:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2015-01-11:posts/android-vcard-from-command-line.html</id><summary type="html">&lt;p&gt;参考:
&lt;a href="http://www.commandlinefu.com/commands/view/11688/dump-android-contacts-sms"&gt;http://www.commandlinefu.com/commands/view/11688/dump-android-contacts-sms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;昨天手机(&lt;span class="caps"&gt;TCL&lt;/span&gt;&amp;nbsp;S960)掉地下把屏幕摔坏了，Google被xx后，就没在用过其它通讯录同步，只好想办法从坏手机里导出，屏幕完全坏了，只能通过adb完成。&lt;/p&gt;
&lt;h1&gt;获取通讯录&lt;/h1&gt;
&lt;p&gt;通过adb从手机中导出通讯录，可以用如下方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;am&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ adb shell am start -t &lt;span class="s2"&gt;&amp;quot;text/x-vcard&amp;quot;&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;file:///sdcard/contacts.vcf&amp;quot;&lt;/span&gt; -a android.intent.action.VIEW com.android.contacts
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;get&amp;nbsp;contacts.db&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ adb pull /data/data/com.android.providers.contacts/databases/contacts2.db .
sqlite3 -batch &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF contacts2.db &amp;lt;CR&amp;gt; .header on &amp;lt;CR&amp;gt; .mode tabs &amp;lt;CR&amp;gt; select * from data; &amp;lt;CR&amp;gt; EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法一无法运行报错，方法二需要root权限。&lt;/p&gt;
&lt;p&gt;Android拿root权限貌似就两种方法: xx root工具(通过系统漏洞获取root权限); 刷recory分区。&amp;nbsp;我没找到该机型的recory，而是用360一键root，拿到root权限。&lt;/p&gt;
&lt;p&gt;有了root权限，通过方法二就可以拿到通讯录数据了，剩下的就是生成vCard格式。&amp;nbsp;github上已经有人写了通过contacts2.db生成vCard文件的小工具。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git@github.com:stachre/dump-contacts2db.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; dump-contacts2db
$ bash dump-contacts2db.sh path/to/contacts2.db &amp;gt; path/to/contacts.vcf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果还希望获取手机里的短信，可以用下面的命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ adb pull /data/data/com.android.providers.telephony/databases/mmssms.db
$ sqlite3 -batch &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF mmssms.db &amp;lt;CR&amp;gt; .header on &amp;lt;CR&amp;gt; .mode tabs &amp;lt;CR&amp;gt; select * from sms; &amp;lt;CR&amp;gt; EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Android解锁&lt;/h1&gt;
&lt;p&gt;Android解锁我没试过，命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;adb shell
&lt;span class="nb"&gt;cd&lt;/span&gt; /data/data/com.android.providers.settings/databases
sqlite3 settings.db
update system &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; where &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;’lock_pattern_autolock&lt;span class="s1"&gt;&amp;#39;;&lt;/span&gt;
&lt;span class="s1"&gt;update secure set value=0 where name=’lock_pattern_autolock&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
update system &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; where &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;’lockscreen.lockedoutpermanently&lt;span class="s1"&gt;&amp;#39;;&lt;/span&gt;
&lt;span class="s1"&gt;update secure set value=0 where name=’lockscreen.lockedoutpermanently&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
.quit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果是忘了Android锁屏图案，想找回，可以试试:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sch3m4/androidpatternlock"&gt;https://github.com/sch3m4/androidpatternlock&lt;/a&gt;&lt;/p&gt;</summary><category term="Android"></category><category term="vCard"></category><category term="adb"></category></entry><entry><title>free</title><link href="http://blog.wiseturtles.com/posts/linux-free.html" rel="alternate"></link><published>2015-01-09T15:27:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-09:posts/linux-free.html</id><summary type="html">&lt;p&gt;本来转载自:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/coldplayerest/archive/2010/02/20/1669949.html"&gt;http://www.cnblogs.com/coldplayerest/archive/2010/02/20/1669949.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多free命令可参看:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Tuning_and_Optimizing_Red_Hat_Enterprise_Linux_for_Oracle_9i_and_10g_Databases/chap-Oracle_9i_and_10g_Tuning_Guide-Memory_Usage_and_Page_Cache.html"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.linuxatemyram.com/"&gt;http://www.linuxatemyram.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;top命令输出解释&lt;/h2&gt;
&lt;p&gt;下面是free的运行结果，一共有4行。为了方便说明，我加上了列号.
&lt;pre&gt;
                   1          2          3          4          5          6
1              total       used       free     shared    buffers     cached
2 Mem:      24677460   23276064    1401396          0     870540   12084008
3 -/+ buffers/cache:   10321516   14355944
4 Swap:     25151484     224188   24927296
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这样可以把free的输出看成一个二维数组&lt;span class="caps"&gt;FO&lt;/span&gt;(Free&amp;nbsp;Output)。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FO[2][1] = 24677460
FO[3][2] = 10321516
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;free的输出一共有四行，第四行为交换区的信息，分别是交换的总量（total），使用量（used）和有多少空闲的交换区（free），这个比较清楚，不说太多。
free输出的第二行和第三行是比较让人迷惑的。这两行都是说明内存使用情况的。第一列是总量（total），第二列是使用量（used），第三列是可用量（free）。
第一行的输出时从操作系统（&lt;span class="caps"&gt;OS&lt;/span&gt;）来看的。也就是说，从&lt;span class="caps"&gt;OS&lt;/span&gt;的角度来看，计算机上一共有:
&lt;span class="caps"&gt;24677460KB&lt;/span&gt;（缺省时free的单位为&lt;span class="caps"&gt;KB&lt;/span&gt;）物理内存，即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][1]；在这些物理内存中有&lt;span class="caps"&gt;23276064KB&lt;/span&gt;（即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][2]）被使用了；还用&lt;span class="caps"&gt;1401396KB&lt;/span&gt;（即&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]）是可用的；&amp;nbsp;这里得到第一个等式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FO[2][1] = FO[2][2] + FO[2][3]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;FO&lt;/span&gt;[2][4]表示被几个进程共享的内存的，现在已经deprecated，其值总是0（当然在一些系统上也可能不是0，主要取决于free命令是怎么实现的）。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;FO&lt;/span&gt;[2][5]表示被&lt;span class="caps"&gt;OS&lt;/span&gt; buffer住的内存。&lt;span class="caps"&gt;FO&lt;/span&gt;[2][6]表示被&lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;cache的内存。在有些时候buffer和cache这两个词经常混用。不过在一些比较低层的软件里是要区分这两个词的，看老外的洋文:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A buffer is something that has yet to be &amp;#8220;written&amp;#8221; to&amp;nbsp;disk.&lt;/li&gt;
&lt;li&gt;A cache is something that has been &amp;#8220;read&amp;#8221; from the disk and stored for later&amp;nbsp;use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说buffer是用于存放要输出到disk（块设备）的数据的，而cache是存放从disk上读出的数据。这二者是为了提高&lt;span class="caps"&gt;IO&lt;/span&gt;性能的，并由&lt;span class="caps"&gt;OS&lt;/span&gt;管理。&lt;/p&gt;
&lt;p&gt;Linux和其他成熟的操作系统（例如windows），为了提高&lt;span class="caps"&gt;IO&lt;/span&gt; read的性能，总是要多cache一些数据，这也就是为什么&lt;span class="caps"&gt;FO&lt;/span&gt;[2][6]（cached memory）比较大，而&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]比较小的原因。我们可以做一个简单的测试:&lt;/p&gt;
&lt;p&gt;释放掉被系统cache占用的数据；&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo 3&amp;gt;/proc/sys/vm/drop_caches
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;读一个大文件，并记录时间；
关闭该文件；
重读这个大文件，并记录时间；&amp;nbsp;第二次读应该比第一次快很多。原来我做过一个BerkeleyDB的读操作，大概要读5G的文件，几千万条记录。在我的环境上，第二次读比第一次大概可以快9倍左右。&lt;/p&gt;
&lt;p&gt;free输出的第二行是从一个应用程序的角度看系统内存的使用情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于&lt;span class="caps"&gt;FO&lt;/span&gt;[3][2]，即-buffers/cache，表示一个应用程序认为系统被用掉多少内存；&lt;/li&gt;
&lt;li&gt;对于&lt;span class="caps"&gt;FO&lt;/span&gt;[3][3]，即+buffers/cache，表示一个应用程序认为系统还有多少内存；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为被系统cache和buffer占用的内存可以被快速回收，所以通常&lt;span class="caps"&gt;FO&lt;/span&gt;[3][3]比&lt;span class="caps"&gt;FO&lt;/span&gt;[2][3]会大很多。&lt;/p&gt;
&lt;p&gt;这里还用两个等式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FO[3][2] = FO[2][2] - FO[2][5] - FO[2][6]
FO[3][3] = FO[2][3] + FO[2][5] + FO[2][6]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这二者都不难理解。&lt;/p&gt;
&lt;p&gt;free命令由procps.*.rpm提供（在Redhat系列的&lt;span class="caps"&gt;OS&lt;/span&gt;上）。free命令的所有输出值都是从/proc/meminfo中读出的。&lt;/p&gt;
&lt;p&gt;在系统上可能有meminfo(2)这个函数，它就是为了解析/proc/meminfo的。procps这个包自己实现了meminfo()这个函数。可以下载一个procps的tar包看看具体实现，现在最新版式3.2.8。&lt;/p&gt;</summary><category term="linux"></category><category term="command"></category><category term="free"></category></entry><entry><title>htop</title><link href="http://blog.wiseturtles.com/posts/linux-htop.html" rel="alternate"></link><published>2015-01-09T14:04:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-09:posts/linux-htop.html</id><summary type="html">&lt;p&gt;本文转摘自 &lt;a href="https://blog.linuxeye.com/350.html"&gt;Linux运维笔记&lt;/a&gt;.&amp;nbsp;并做适当修改　&lt;/p&gt;
&lt;h2&gt;简介&lt;/h2&gt;
&lt;p&gt;Htop是一款运行于Linux系统监控与进程管理软件，用于取代Unix下传统的top。与top只提供最消耗资源的进程列表不同，htop提供所有进程的列表，并且使用彩色标识出处理器、swap和内存状态。&lt;/p&gt;
&lt;p&gt;用户一般可以在top无法提供详尽系统信息的情况下选择安装并使用htop。比如，在查找应用程序的内存泄漏问题时。与top相比，htop提供更方便、光标控制的界面来杀死进程。&lt;/p&gt;
&lt;p&gt;htop用C语言编写，采用了ncurses库。htop的名称源于其作者的名字。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;htop安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install htop
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;htop用法&lt;/p&gt;
&lt;p&gt;&lt;img alt="htop screenshot" src="http://pic.yupoo.com/crazygit_v/ElYP0hQ6/medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;上面左上角显示&lt;span class="caps"&gt;CPU&lt;/span&gt;、内存、Swap使用情况，右边显示任务、负载、开机时间，下面就是进程实时状况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常用快捷键&lt;/p&gt;
&lt;p&gt;下面是 F1~F10 的功能和对应的字母快捷键。
&lt;table class="table table-striped table-bordered table-hover table-condensed"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
    Shortcut Key
&lt;/td&gt;
&lt;td&gt;
    Function Key
&lt;/td&gt;
&lt;td&gt;
    Description
&lt;/td&gt;
&lt;td&gt;
    中文说明
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    h, ?
&lt;/td&gt;
&lt;td&gt;
    F1
&lt;/td&gt;
&lt;td&gt;
    Invoke htop Help
&lt;/td&gt;
&lt;td&gt;
    查看htop使用说明
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    S
&lt;/td&gt;
&lt;td&gt;
    F2
&lt;/td&gt;
&lt;td&gt;
    Htop Setup Menu
&lt;/td&gt;
&lt;td&gt;
    htop 设定
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    /
&lt;/td&gt;
&lt;td&gt;
    F3
&lt;/td&gt;
&lt;td&gt;
    Search for a Process
&lt;/td&gt;
&lt;td&gt;
    搜索进程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    \
&lt;/td&gt;
&lt;td&gt;
    F4
&lt;/td&gt;
&lt;td&gt;
    Incremental process filtering
&lt;/td&gt;
&lt;td&gt;
    增量进程过滤器
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    t
&lt;/td&gt;
&lt;td&gt;
    F5
&lt;/td&gt;
&lt;td&gt;
    Tree View
&lt;/td&gt;
&lt;td&gt;
    显示树形结构
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    ,
&lt;/td&gt;
&lt;td&gt;
    F6
&lt;/td&gt;
&lt;td&gt;
    Sort by a column
&lt;/td&gt;
&lt;td&gt;
    选择排序方式
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    [
&lt;/td&gt;
&lt;td&gt;
    F7
&lt;/td&gt;
&lt;td&gt;
    Nice – (change priority)
&lt;/td&gt;
&lt;td&gt;
    可减少nice值，这样就可以提高对应进程的优先级
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    ]
&lt;/td&gt;
&lt;td&gt;
    F8
&lt;/td&gt;
&lt;td&gt;
    Nice + (change priority)
&lt;/td&gt;
&lt;td&gt;
    可增加nice值，这样就可以降低对应进程的优先级
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    k
&lt;/td&gt;
&lt;td&gt;
    F9
&lt;/td&gt;
&lt;td&gt;
    Kill a Process
&lt;/td&gt;
&lt;td&gt;
    可对进程传递信号
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    q
&lt;/td&gt;
&lt;td&gt;
    F10
&lt;/td&gt;
&lt;td&gt;
    Quit htop
&lt;/td&gt;
&lt;td&gt;
    结束htop
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令行选项（&lt;span class="caps"&gt;COMMAND&lt;/span&gt;-&lt;span class="caps"&gt;LINE&lt;/span&gt; &lt;span class="caps"&gt;OPTIONS&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;&lt;table class="table table-striped table-bordered table-hover table-condensed"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
    -C –no-color
&lt;/td&gt;
&lt;td&gt;
    使用一个单色的配色方案
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -d –delay=&lt;span class="caps"&gt;DELAY&lt;/span&gt;
&lt;/td&gt;
&lt;td&gt;
    设置延迟更新时间，单位秒
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -h –help
&lt;/td&gt;
&lt;td&gt;
    显示htop 命令帮助信息
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -u –user=&lt;span class="caps"&gt;USERNAME&lt;/span&gt;
&lt;/td&gt;
&lt;td&gt;
    只显示一个给定的用户的过程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -p –pid=&lt;span class="caps"&gt;PID&lt;/span&gt;,&lt;span class="caps"&gt;PID&lt;/span&gt;…
&lt;/td&gt;
&lt;td&gt;
    只显示给定的PIDs
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -s –sort-key &lt;span class="caps"&gt;COLUMN&lt;/span&gt;
&lt;/td&gt;
&lt;td&gt;
    依此列来排序
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    -v –version
&lt;/td&gt;
&lt;td&gt;
    显示版本信息
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交互式命令（&lt;span class="caps"&gt;INTERACTIVE&lt;/span&gt; &lt;span class="caps"&gt;COMMANDS&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;&lt;table class="table table-striped table-bordered table-hover table-condensed"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
    上下键或PgUP, PgDn
&lt;/td&gt;
&lt;td&gt;
    选定想要的进程，左右键或Home, End 移动字段，当然也可以直接用鼠标选定进程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    Space
&lt;/td&gt;
&lt;td&gt;
    标记/取消标记一个进程。命令可以作用于多个进程，例如 “kill”，将应用于所有已标记的进程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    U
&lt;/td&gt;
&lt;td&gt;
    取消标记所有进程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    s
&lt;/td&gt;
&lt;td&gt;
    选择某一进程，按s:用strace追踪进程的系统调用
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    l
&lt;/td&gt;
&lt;td&gt;
    显示进程打开的文件: 如果安装了lsof，按此键可以显示进程所打开的文件
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    I
&lt;/td&gt;
&lt;td&gt;
    倒转排序顺序，如果排序是正序的，则反转成倒序的，反之亦然
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    +, -
&lt;/td&gt;
&lt;td&gt;
    在树形模式下，展开或折叠子树
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    a (在有多处理器的机器上)
&lt;/td&gt;
&lt;td&gt;
    设置 &lt;span class="caps"&gt;CPU&lt;/span&gt; affinity: 标记一个进程允许使用哪些&lt;span class="caps"&gt;CPU&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    u
&lt;/td&gt;
&lt;td&gt;
    显示特定用户进程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    M
&lt;/td&gt;
&lt;td&gt;
    按Memory使用排序
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    P
&lt;/td&gt;
&lt;td&gt;
    按&lt;span class="caps"&gt;CPU&lt;/span&gt;使用排序
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    T
&lt;/td&gt;
&lt;td&gt;
    按Time+使用排序
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    F
&lt;/td&gt;
&lt;td&gt;
    跟踪进程: 如果排序顺序引起选定的进程在列表上到处移动，让选定条跟随该进程。这对监视一个进程非常有用：通过这种方式，你可以让一个进程在屏幕上一直可见。使用方向键会停止该功能
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    K
&lt;/td&gt;
&lt;td&gt;
    显示/隐藏内核线程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    H
&lt;/td&gt;
&lt;td&gt;
    显示/隐藏用户线程
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    Ctrl-L
&lt;/td&gt;
&lt;td&gt;
    刷新
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    Numbers
&lt;/td&gt;
&lt;td&gt;
    &lt;span class="caps"&gt;PID&lt;/span&gt; 查找: 输入&lt;span class="caps"&gt;PID&lt;/span&gt;，光标将移动到相应的进程上
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;替代top&lt;/p&gt;
&lt;p&gt;用htop替换top，可添加别名，编辑&lt;code&gt;~/.bashrc&lt;/code&gt;文件，添加如下代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias top=htop
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</summary><category term="linux"></category><category term="command"></category><category term="htop"></category></entry><entry><title>WIFI Hotspot Setup On Ubuntu 12.04</title><link href="http://blog.wiseturtles.com/posts/wifi-hotspot-setup-on-ubuntu.html" rel="alternate"></link><published>2014-12-30T00:00:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2014-12-30:posts/wifi-hotspot-setup-on-ubuntu.html</id><summary type="html">&lt;p&gt;hotspot配置参考：http://thenewbieblog.wordpress.com/2012/05/01/wifi-hotspot-setup-on-ubuntu/
Android利用Fiddler抓包：http://www.trinea.cn/android/android-network-sniffer/&amp;nbsp;Android利用tcpdump抓包：http://www.trinea.cn/android/tcpdump_wireshark/&lt;/p&gt;
&lt;p&gt;为了Ubuntu笔记本方便对Android手机上的Apps做抓包, 本文介绍两种方法，方法二更容易配置。
有线、无线同时可以工作时，用下面方法将无线网卡作为hotspot，通过有线连接外网。
如果想直接通过无线网卡上外网，需要先停掉hostapd 或&amp;nbsp;ap-hotspot，并重启网络。&lt;/p&gt;
&lt;p&gt;重启网络:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service network-manager restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;方法一&lt;/h1&gt;
&lt;h2&gt;查看无线网卡硬件信息&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i network
03:00.0 Network controller: Intel Corporation Wireless &lt;span class="m"&gt;7260&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev 6b&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看无线网卡驱动信息&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsmod
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看无线网卡设备名称&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ iwconfig
wlan0     IEEE 802.11bgn  Mode:Master  Tx-Power&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt; dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Power Management:on
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装需要的软件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install dhcp3-server hostapd
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/hostapd/hostapd.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/hostapd/hostapd.conf
&lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wlan0
&lt;span class="nv"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nl80211
&lt;span class="nv"&gt;ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_hotspot_name
&lt;span class="nv"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;hw_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;g
&lt;span class="nv"&gt;auth_algs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;wpa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
&lt;span class="nv"&gt;wpa_passphrase&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your-password
&lt;span class="nv"&gt;wpa_key_mgmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;WPA-PSK
&lt;span class="nv"&gt;wpa_pairwise&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;TKIP CCMP
&lt;span class="nv"&gt;rsn_pairwise&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;CCMP
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/default/isc-dhcp-server&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ grep INTERFACES /etc/default/isc-dhcp-server
&lt;span class="nv"&gt;INTERFACES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wlan0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/dhcp/dhcpd.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;配置文件: /etc/dhcp/dhcpd.conf
Make sure the follow lines are Commented out &lt;span class="o"&gt;(&lt;/span&gt; put a &lt;span class="nb"&gt;hash&lt;/span&gt; “#”  sign at the beginning of the line &lt;span class="o"&gt;)&lt;/span&gt; the following lines:
&lt;span class="c1"&gt;# option definitions common to all supported networks…&lt;/span&gt;
&lt;span class="c1"&gt;#option domain-name “example.org”;&lt;/span&gt;
&lt;span class="c1"&gt;#option domain-name-servers ns1.example.org, ns2.example.org;&lt;/span&gt;
&lt;span class="c1"&gt;#default-lease-time 600;&lt;/span&gt;
&lt;span class="c1"&gt;#max-lease-time 7200;&lt;/span&gt;

Add the following lines to the file &lt;span class="o"&gt;(&lt;/span&gt;copy and paste&lt;span class="o"&gt;)&lt;/span&gt;
subnet 10.10.0.0 netmask 255.255.255.0 &lt;span class="o"&gt;{&lt;/span&gt;
        range 10.10.0.2 10.10.0.16&lt;span class="p"&gt;;&lt;/span&gt;
        option domain-name-servers 8.8.4.4, 208.67.222.222&lt;span class="p"&gt;;&lt;/span&gt;
        option routers 10.10.0.1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;Note: the only other line in this whole config file that is uncommented is :

ddns-update-style none&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/default/hostapd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ grep -E &lt;span class="s1"&gt;&amp;#39;RUN_DAEMON|DAEMON_CONF|DAEMON_OPTS&amp;#39;&lt;/span&gt; /etc/default/hostapd &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;^#&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;RUN_DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/hostapd/hostapd.conf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-dd&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/network/interfaces&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/network/interfaces
auto lo
iface lo inet loopback
auto wlan0
iface wlan0 inet static
    address 10.10.0.1
    netmask 255.255.255.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/sysctl.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ grep net.ipv4.ip_forward /etc/sysctl.conf 
net.ipv4.ip_forward&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;修改/etc/rc.local&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;编辑 /etc/rc.local, 在 &lt;span class="s2"&gt;&amp;quot;exit 0&amp;quot;&lt;/span&gt; 前添加下一行
iptables -t nat -A POSTROUTING -s 10.10.0.0/16 -o ppp0 -j MASQUERADE
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重启电脑&lt;/h2&gt;
&lt;p&gt;重启电脑，手机测试是否可以连接.&lt;/p&gt;
&lt;h1&gt;方法二&lt;/h1&gt;
&lt;p&gt;用ap-hotspot更容易搭建。&lt;/p&gt;
&lt;h2&gt;ap-hotspot安装、配置&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo add-apt-repository ppa:nilarimogard/webupd8
$ sudo apt-get install ap-hotspot
$ sudo ap-hotspot configure &lt;span class="c1"&gt;# configure&lt;/span&gt;
$ sudo ap-hotspot start &lt;span class="c1"&gt;# start&lt;/span&gt;
$ sudo ap-hotspot stop &lt;span class="c1"&gt;# stop&lt;/span&gt;
$ sudo ap-hotspot restart &lt;span class="c1"&gt;# restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Ubuntu"></category></entry><entry><title>MySQL查看用户权限</title><link href="http://blog.wiseturtles.com/posts/show-grants.html" rel="alternate"></link><published>2014-12-17T11:25:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-17:posts/show-grants.html</id><summary type="html">&lt;h2&gt;命令&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;SHOW&lt;/span&gt; &lt;span class="caps"&gt;GRANTS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方文档: &lt;a href="http://dev.mysql.com/doc/refman/5.6/en/show-grants.html"&gt;http://dev.mysql.com/doc/refman/5.6/en/show-grants.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;常看帮助&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;HELP&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看当前登陆用户在当前机器上的权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看特定用户在特定主机上的权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 查看test用户在主机&amp;#39;%&amp;#39;上的权限(没有指定主机时，默认是&amp;#39;%&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看test用户在主机&amp;#39;localhost&amp;#39;上的权限(没有指定主机时，默认是&amp;#39;%&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;GRANTS&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查看用户在哪些主机上分配了权限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;各种权限用法表&lt;/h2&gt;
&lt;p&gt;参考自
&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/grant.html"&gt;http://dev.mysql.com/doc/refman/5.6/en/grant.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="table"&gt;
&lt;a name="idm140062991811312"&gt;&lt;/a&gt;&lt;p class="title"&gt;&lt;b&gt;Table&amp;nbsp;13.1&amp;nbsp;Permissible Privileges for &lt;span class="caps"&gt;GRANT&lt;/span&gt; and &lt;span class="caps"&gt;REVOKE&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;div class="table-contents"&gt;
&lt;table summary="Permissible Privileges for GRANT and REVOKE" border="1"&gt;&lt;colgroup&gt;&lt;col&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;thead&gt;&lt;tr&gt;&lt;th scope="col"&gt;Privilege&lt;/th&gt;&lt;th scope="col"&gt;Meaning and Grantable Levels&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_all"&gt;&lt;code class="literal"&gt;ALL [PRIVILEGES]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Grant all privileges at specified access level except
                &lt;a class="link" href="privileges-provided.html#priv_grant-option"&gt;&lt;code class="literal"&gt;GRANT OPTION&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_alter"&gt;&lt;code class="literal"&gt;ALTER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="alter-table.html" title="13.1.7&amp;nbsp;ALTER TABLE Syntax"&gt;&lt;code class="literal"&gt;ALTER TABLE&lt;/code&gt;&lt;/a&gt;. Levels:
                Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_alter-routine"&gt;&lt;code class="literal"&gt;ALTER ROUTINE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable stored routines to be altered or dropped. Levels: Global,
                database, procedure.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create"&gt;&lt;code class="literal"&gt;CREATE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable database and table creation. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-routine"&gt;&lt;code class="literal"&gt;CREATE ROUTINE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable stored routine creation. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-tablespace"&gt;&lt;code class="literal"&gt;CREATE TABLESPACE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable tablespaces and log file groups to be created, altered, or
                dropped. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-temporary-tables"&gt;&lt;code class="literal"&gt;CREATE TEMPORARY TABLES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="create-table.html" title="13.1.17&amp;nbsp;CREATE TABLE Syntax"&gt;&lt;code class="literal"&gt;CREATE
                TEMPORARY TABLE&lt;/code&gt;&lt;/a&gt;. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-user"&gt;&lt;code class="literal"&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="create-user.html" title="13.7.1.2&amp;nbsp;CREATE USER Syntax"&gt;&lt;code class="literal"&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="drop-user.html" title="13.7.1.3&amp;nbsp;DROP USER Syntax"&gt;&lt;code class="literal"&gt;DROP USER&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="rename-user.html" title="13.7.1.5&amp;nbsp;RENAME USER Syntax"&gt;&lt;code class="literal"&gt;RENAME USER&lt;/code&gt;&lt;/a&gt;, and
                &lt;a class="link" href="revoke.html" title="13.7.1.6&amp;nbsp;REVOKE Syntax"&gt;&lt;code class="literal"&gt;REVOKE ALL
                PRIVILEGES&lt;/code&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_create-view"&gt;&lt;code class="literal"&gt;CREATE VIEW&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable views to be created or altered. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_delete"&gt;&lt;code class="literal"&gt;DELETE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="delete.html" title="13.2.2&amp;nbsp;DELETE Syntax"&gt;&lt;code class="literal"&gt;DELETE&lt;/code&gt;&lt;/a&gt;. Level: Global,
                database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_drop"&gt;&lt;code class="literal"&gt;DROP&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable databases, tables, and views to be dropped. Levels: Global,
                database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_event"&gt;&lt;code class="literal"&gt;EVENT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of events for the Event Scheduler. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_execute"&gt;&lt;code class="literal"&gt;EXECUTE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to execute stored routines. Levels: Global, database,
                table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_file"&gt;&lt;code class="literal"&gt;FILE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to cause the server to read or write files. Level:
                Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_grant-option"&gt;&lt;code class="literal"&gt;GRANT OPTION&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable privileges to be granted to or removed from other accounts.
                Levels: Global, database, table, procedure, proxy.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_index"&gt;&lt;code class="literal"&gt;INDEX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable indexes to be created or dropped. Levels: Global, database,
                table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_insert"&gt;&lt;code class="literal"&gt;INSERT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="insert.html" title="13.2.5&amp;nbsp;INSERT Syntax"&gt;&lt;code class="literal"&gt;INSERT&lt;/code&gt;&lt;/a&gt;. Levels: Global,
                database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_lock-tables"&gt;&lt;code class="literal"&gt;LOCK TABLES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="lock-tables.html" title="13.3.5&amp;nbsp;LOCK TABLES and UNLOCK TABLES Syntax"&gt;&lt;code class="literal"&gt;LOCK TABLES&lt;/code&gt;&lt;/a&gt; on tables for
                which you have the &lt;a class="link" href="select.html" title="13.2.9&amp;nbsp;SELECT Syntax"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;
                privilege. Levels: Global, database.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_process"&gt;&lt;code class="literal"&gt;PROCESS&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to see all processes with &lt;a class="link" href="show-processlist.html" title="13.7.5.30&amp;nbsp;SHOW PROCESSLIST Syntax"&gt;&lt;code class="literal"&gt;SHOW
                PROCESSLIST&lt;/code&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_proxy"&gt;&lt;code class="literal"&gt;PROXY&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable user proxying. Level: From user to user.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_references"&gt;&lt;code class="literal"&gt;REFERENCES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not implemented&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_reload"&gt;&lt;code class="literal"&gt;RELOAD&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="flush.html" title="13.7.6.3&amp;nbsp;FLUSH Syntax"&gt;&lt;code class="literal"&gt;FLUSH&lt;/code&gt;&lt;/a&gt; operations. Level:
                Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_replication-client"&gt;&lt;code class="literal"&gt;REPLICATION CLIENT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable the user to ask where master or slave servers are. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_replication-slave"&gt;&lt;code class="literal"&gt;REPLICATION SLAVE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable replication slaves to read binary log events from the master.
                Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_select"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="select.html" title="13.2.9&amp;nbsp;SELECT Syntax"&gt;&lt;code class="literal"&gt;SELECT&lt;/code&gt;&lt;/a&gt;. Levels: Global,
                database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_show-databases"&gt;&lt;code class="literal"&gt;SHOW DATABASES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable &lt;a class="link" href="show-databases.html" title="13.7.5.15&amp;nbsp;SHOW DATABASES Syntax"&gt;&lt;code class="literal"&gt;SHOW DATABASES&lt;/code&gt;&lt;/a&gt; to show all
                databases. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_show-view"&gt;&lt;code class="literal"&gt;SHOW VIEW&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="show-create-view.html" title="13.7.5.14&amp;nbsp;SHOW CREATE VIEW Syntax"&gt;&lt;code class="literal"&gt;SHOW CREATE VIEW&lt;/code&gt;&lt;/a&gt;. Levels:
                Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_shutdown"&gt;&lt;code class="literal"&gt;SHUTDOWN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="mysqladmin.html" title="4.5.2&amp;nbsp;mysqladmin — Client for Administering a MySQL Server"&gt;&lt;span class="command"&gt;&lt;strong&gt;mysqladmin shutdown&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_super"&gt;&lt;code class="literal"&gt;SUPER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of other administrative operations such as
                &lt;a class="link" href="change-master-to.html" title="13.4.2.1&amp;nbsp;CHANGE MASTER TO Syntax"&gt;&lt;code class="literal"&gt;CHANGE MASTER TO&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="kill.html" title="13.7.6.4&amp;nbsp;KILL Syntax"&gt;&lt;code class="literal"&gt;KILL&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="purge-binary-logs.html" title="13.4.1.1&amp;nbsp;PURGE BINARY LOGS Syntax"&gt;&lt;code class="literal"&gt;PURGE BINARY LOGS&lt;/code&gt;&lt;/a&gt;,
                &lt;a class="link" href="set-statement.html" title="13.7.4&amp;nbsp;SET Syntax"&gt;&lt;code class="literal"&gt;SET
                GLOBAL&lt;/code&gt;&lt;/a&gt;, and &lt;a class="link" href="mysqladmin.html" title="4.5.2&amp;nbsp;mysqladmin — Client for Administering a MySQL Server"&gt;&lt;span class="command"&gt;&lt;strong&gt;mysqladmin
                debug&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt; command. Level: Global.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_trigger"&gt;&lt;code class="literal"&gt;TRIGGER&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable trigger operations. Levels: Global, database, table.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_update"&gt;&lt;code class="literal"&gt;UPDATE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Enable use of &lt;a class="link" href="update.html" title="13.2.11&amp;nbsp;UPDATE Syntax"&gt;&lt;code class="literal"&gt;UPDATE&lt;/code&gt;&lt;/a&gt;. Levels: Global,
database, table, column.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope="row"&gt;&lt;a class="link" href="privileges-provided.html#priv_usage"&gt;&lt;code class="literal"&gt;USAGE&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Synonym for &lt;span class="quote"&gt;“&lt;span class="quote"&gt;no privileges&lt;/span&gt;”&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;</summary><category term="mysql"></category><category term="user"></category><category term="grants"></category></entry><entry><title>uptime</title><link href="http://blog.wiseturtles.com/posts/linux-uptime.html" rel="alternate"></link><published>2014-12-15T10:08:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-15:posts/linux-uptime.html</id><summary type="html">&lt;h2&gt;用途&lt;/h2&gt;
&lt;p&gt;man&amp;nbsp;page&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uptime gives a one line display of the following information.  The cur‐
rent time, how long the system has been running,  how  many  users  are
currently  logged  on,  and the system load averages for the past 1, 5,
and 15&amp;nbsp;minutes.&lt;/p&gt;
&lt;p&gt;System load averages is the average number of processes that are either
in a runnable or uninterruptable state.  A process in a runnable  state
is  either  using the &lt;span class="caps"&gt;CPU&lt;/span&gt; or waiting to use the &lt;span class="caps"&gt;CPU&lt;/span&gt;. A process in unin‐
terruptable state is waiting for some I/O access, eg waiting for  disk.
The  averages  are  taken over the three time intervals. Load averages
are not normalized for the number of CPUs in a system, so a load  aver‐
age  of 1 means a single &lt;span class="caps"&gt;CPU&lt;/span&gt; system is loaded all the time while on a 4
&lt;span class="caps"&gt;CPU&lt;/span&gt; system it means it was idle 75% of the&amp;nbsp;time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Load averages are not normalized for the number of CPUs in a system, so a load  aver‐ age  of 1 means a single &lt;span class="caps"&gt;CPU&lt;/span&gt; system is loaded all the time while on a 4 &lt;span class="caps"&gt;CPU&lt;/span&gt; system it means it was idle 75% of the&amp;nbsp;time.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;语法&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ uptime
10:14:31 up &lt;span class="m"&gt;10&lt;/span&gt; days, 20:55,  &lt;span class="m"&gt;6&lt;/span&gt; users,  load average: 0.28, 0.42, 0.54
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面的结果显示的分别是系统的当前时间，运行时间，当前用户数，过去1, 5, 15分钟的系统平均负载
总体来说，值为1时，当只有单个&lt;span class="caps"&gt;CPU&lt;/span&gt;表示已经完全利用，当有４个&lt;span class="caps"&gt;CPU&lt;/span&gt;时，表示还有75%的空闲.&lt;/p&gt;
&lt;p&gt;关于平均负载的值可以阅读&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages"&gt;http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category><category term="command"></category><category term="uptime"></category></entry><entry><title>Upgrade Ubuntu from 10.04 to 12.04</title><link href="http://blog.wiseturtles.com/posts/upgrade-ubuntu-from-10.04-to-12.04.html" rel="alternate"></link><published>2014-12-04T00:00:00+08:00</published><author><name>Zhang Wanming</name></author><id>tag:blog.wiseturtles.com,2014-12-04:posts/upgrade-ubuntu-from-10.04-to-12.04.html</id><summary type="html">&lt;p&gt;公司开发人员电脑都安装的是Ubuntu 10.04，现在越来越不好用，而且，很多同事发现编译最新的Firefox &lt;span class="caps"&gt;OS&lt;/span&gt;都有问题，所以，我尝试升级并把碰到的问题记录下来。&lt;/p&gt;
&lt;h1&gt;升级&lt;/h1&gt;
&lt;h2&gt;修改源&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/apt/sources.list
deb http://172.26.32.18/ubuntu/ lucid main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-security main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-updates main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-proposed main restricted universe multiverse
deb http://172.26.32.18/ubuntu/ lucid-backports main restricted universe multiverse

&lt;span class="c1"&gt;# aliyun&lt;/span&gt;
deb http://mirrors.aliyun.com/ubuntu/ lucid main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ lucid-backports main restricted universe multiverse
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;开始升级&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="k"&gt;do&lt;/span&gt;-release-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;nis无法启动，导致升级过程中配置nis包失败&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ grep redhat /etc/hosts
172.26.32.12    cd-redhat-001.TCTCD

$ tail -1 /etc/yp.conf 
ypserver cd-redhat-001.TCTCD

$ cat /etc/defaultdomain 
TCTCD

$ grep NIS /etc/default/nis &lt;span class="p"&gt;|&lt;/span&gt; grep -Ev &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;NISSERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="nv"&gt;NISCLIENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;NISMASTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

$ cat /etc/auto.master
/home /etc/auto.home

$ cat /etc/auto.home 
xcsu cd-redhat-001.TCTCD:/home/xcsu

$ /usr/lib/yp/ypinit -s cd-redhat-001.TCTCD

$ sudo service portmap restart
$ sudo service nis restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;启动后登录时发现只能用administrator和guest登录&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/lightdm/lightdm.conf 
&lt;span class="o"&gt;[&lt;/span&gt;SeatDefaults&lt;span class="o"&gt;]&lt;/span&gt;
user-session&lt;span class="o"&gt;=&lt;/span&gt;ubuntu
greeter-session&lt;span class="o"&gt;=&lt;/span&gt;unity-greeter
allow-guest&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
greeter-show-manual-login&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重启电脑，就可以用其它用户登录了&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo reboot
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Ubuntu"></category><category term="Nis"></category></entry><entry><title>如何发表文章</title><link href="http://blog.wiseturtles.com/posts/about-wiseturtles.html" rel="alternate"></link><published>2014-12-03T00:04:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-12-03:posts/about-wiseturtles.html</id><summary type="html">&lt;h2&gt;为什么要有这个博客&lt;/h2&gt;
&lt;p&gt;方便知识的整理，分享和交流。更主要的是慢慢感觉年纪越来越大(黑线！！！)，记性越来越差，需要一个可以记录东西的地方.&lt;/p&gt;
&lt;p&gt;古话说得好&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好记性不如烂笔头嘛!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;名字的由来&lt;/h2&gt;
&lt;p&gt;为什么取名叫Wise Turtles？在这里我不得不吐槽一下咯。取名字，本来就是一件很难的事情，取一个有意义的名字就更难了，让一个理工宅男来取就难到吐血啦。
为了取一个有意义的名字，同时又能注册到域名和github组织名，我简直是使出了吃奶的力气, 从dota3一直试到了dota100， 域名都被注册了，想死的心都有。
伤心欲绝时，突然灵光一闪，想到了不久前热映的电影《忍者神龟》， 四兄弟团结, 幽默, 充满活力, 这不是我们所追求的团队精神吗? 所以决定以忍者神龟作为名字啦！
悲剧的是turtles竟然也被注册了，坚持着不放弃的原则，我觉得我们团队的兄弟姐妹们比起忍着神龟更加睿智，于是就用Wise Turtles啦！（实在不想再为名字纠结咯），&amp;nbsp;赶紧去注册了域名和github组织名，大功告成！&lt;/p&gt;
&lt;h2&gt;如何加入组织&lt;/h2&gt;
&lt;p&gt;请大家把github的&lt;strong&gt;用户名&lt;/strong&gt;（注意是用户名：而不是登陆邮箱）发给我，&amp;nbsp;我会逐一给大家发送邀请。然后大家用自己的账号登陆github，访问&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wiseturtles"&gt;https://github.com/wiseturtles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;即可接受邀请。&lt;/p&gt;
&lt;h2&gt;博客的功能介绍&lt;/h2&gt;
&lt;p&gt;博客采用开源的&lt;a href="http://blog.getpelican.com"&gt;pelican&lt;/a&gt;静态博客引擎，集成了Disqus评论，百度分享，百度统计(不要问我为什么用百度，你懂的)，支持Atom/&lt;span class="caps"&gt;RSS&lt;/span&gt; feeds
订阅，响应式布局（移动端访问排版依然良好），Travis-ci自动构建文章。文章格式支持Markdown， reStructuredText,&amp;nbsp;html语法。通过jinjia定义主题模板，git版本控制，以及程序员喜欢的语法高亮。&lt;/p&gt;
&lt;p&gt;附上一些常用语法的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wowubuntu.com/markdown/index.html"&gt;Markdown 语法说明&amp;nbsp;(简体中文版)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docutils.sourceforge.net/rst.html"&gt;Rst语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;与博客有关的repo介绍&lt;/h2&gt;
&lt;p&gt;我们的blog主要用到了三个repo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wiseturtles.github.io  (博客静态html文件库，也就是博客展示的最终库，由travis-ci自动修改,&amp;nbsp;不需要手动修改）&lt;/li&gt;
&lt;li&gt;blog  &amp;nbsp;（博客源码库，大家平时写文章时需要提交的库）&lt;/li&gt;
&lt;li&gt;theme    （主题库，可以定制博客的排版，样式和布局,&amp;nbsp;感觉现在博客难看的同学可以修改）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家平时主要使用到的也就是blog这个库，下面就blog的目录结构简单介绍一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 下载blog库&lt;/span&gt;
$ git clone --recursive git@github.com:wiseturtles/blog.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; blog
$ tree -aL 1
.
├── cache       &lt;span class="c1"&gt;# 编译生成静态文件的cache库，加快编译速度&lt;/span&gt;
├── content     &lt;span class="c1"&gt;# 博客内容库，所有写的文章都按照目录来分类并放在这个目录下面&lt;/span&gt;
├── deploy.sh   &lt;span class="c1"&gt;# 部署编译出来的静态文件到wiseturtles.github.io库的脚本，由travis-ci调用&lt;/span&gt;
├── develop_server.sh
├── fabfile.py  &lt;span class="c1"&gt;# 封装了常用命令的fab文件&lt;/span&gt;
├── Makefile    &lt;span class="c1"&gt;# 封装了常用命令的makefile文件&lt;/span&gt;
├── output      &lt;span class="c1"&gt;# 编译生成静态html文件的目录，wiseturtles.github.io库里的内容就是这个目录下的&lt;/span&gt;
├── pelicanconf.py  &lt;span class="c1"&gt;# 博客的配置文件&lt;/span&gt;
├── publishconf.py  &lt;span class="c1"&gt;# 博客发布时调用的配置文件, 主要覆盖了pelicanconf.py里的一些配置&lt;/span&gt;
├── README.md
├── requirements.txt  &lt;span class="c1"&gt;# 记录安装本库需要使用的python包文件&lt;/span&gt;
├── theme       &lt;span class="c1"&gt;# 主题目录，其实就是theme库，作为一个子库放在blog里面&lt;/span&gt;
└── .travis.yml &lt;span class="c1"&gt;# travis-ci的配置文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所有的文章写好之后，都要放到coetent目录下， 所有的文章按照目录分类，可以根据自己的需要在content下创建需要的目录(目录名会出现在&lt;span class="caps"&gt;URL&lt;/span&gt;中，建议是英文的）。&lt;/p&gt;
&lt;h2&gt;如何搭建本地环境&lt;/h2&gt;
&lt;p&gt;为了使整个过程简洁，下面以&lt;strong&gt;本地python版本为2.7.X, 不创建python虚拟为前提&lt;/strong&gt;。
如果不满足这两个条件，可以参考我的另一片文章 &lt;a href="http://blog.wiseturtles.com/posts/setup-pelican.html"&gt;pelican + github&amp;nbsp;搭建个人Blog&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone --recursive git@github.com:wiseturtles/blog.git  &lt;span class="c1"&gt;# 下载代码&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; blog
$ sudo pip install -r requirements.txt  &lt;span class="c1"&gt;# 安装必要的python库, 如果不需要本地预览的话，可以跳过这一步&lt;/span&gt;
$ touch content/test/hello.md   &lt;span class="c1"&gt;# 此处略去编辑content/test/hello.md文件过程的三千字&lt;/span&gt;
$ make devserver    &lt;span class="c1"&gt;# 启动本地预览的server， 访问http://127.0.0.1:8000/查看文章那个效果&lt;/span&gt;
&lt;span class="c1"&gt;# 重复上面两个步骤,直到决定发布文章&lt;/span&gt;
$ git add content/test/hello.md
$ git commit -m &lt;span class="s2"&gt;&amp;quot;add hello.md&amp;quot;&lt;/span&gt;
$ git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;， 打完收工！ 过一会访问我们的博客&lt;a href="http://blog.wiseturtles.com/"&gt;http://blog.wiseturtles.com/&lt;/a&gt;就可以看到自己刚刚发表的文章啦!&lt;/p&gt;
&lt;p&gt;整个过程概述起来就跟把大象放进冰箱一样简单，只需要三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载blog代码&lt;/li&gt;
&lt;li&gt;写好文章&lt;/li&gt;
&lt;li&gt;提交文章&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;在线环境&lt;/h2&gt;
&lt;p&gt;如果感觉搭建本地环境麻烦的话，那就直接用github的在线编辑功能吧。&amp;nbsp;访问&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wiseturtles/blog"&gt;https://github.com/wiseturtles/blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;即可在线编辑.&lt;/p&gt;
&lt;h2&gt;文件模板&lt;/h2&gt;
&lt;p&gt;无论选择Markdown， reStructuredText,&amp;nbsp;html哪种语法，文章模板都应该像下面这样：&lt;/p&gt;
&lt;h3&gt;reStructuredText（Rst）格式（文件名以.rst结尾）&lt;/h3&gt;
&lt;pre&gt;
My super title
##############

:date: 2010-10-03 10:20
:modified: 2010-10-04 18:40
:tags: thats, awesome
:category: yeah
:slug: my-super-post
:authors: Alexis Metaireau, Conan Doyle
:summary: Short version for index and feeds

This is the content of my super blog post.
&lt;/pre&gt;

&lt;h3&gt;md格式(文件名以 .md, .markdown, .mkd,&amp;nbsp;.mdown结尾）&lt;/h3&gt;
&lt;pre&gt;
Title: My super title
Date: 2010-12-03 10:20
Modified: 2010-12-05 19:30
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Authors: Alexis Metaireau, Conan Doyle
Summary: Short version for index and feeds

This is the content of my super blog post.

&lt;/pre&gt;

&lt;h3&gt;html格式(文件名以.html and&amp;nbsp;.htm结尾）&lt;/h3&gt;
&lt;pre&gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;My super title&amp;lt;/title&amp;gt;
&amp;lt;meta name="tags" content="thats, awesome" /&amp;gt;
&amp;lt;meta name="date" content="2012-07-09 22:28" /&amp;gt;
&amp;lt;meta name="modified" content="2012-07-10 20:14" /&amp;gt;
&amp;lt;meta name="category" content="yeah" /&amp;gt;
&amp;lt;meta name="authors" content="Alexis Métaireau, Conan Doyle" /&amp;gt;
&amp;lt;meta name="summary" content="Short version for index and feeds" /&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
This is the content of my super blog post.
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;从上面的模板可以看出，无论选择哪种语言，都包含了共同的信息.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要注意的一点是slug标签的信息就是文章的&lt;span class="caps"&gt;URL&lt;/span&gt;链接，最好不要是中文的&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;代码高亮&lt;/h2&gt;
&lt;p&gt;对于Rst格式,&amp;nbsp;用如下格式&lt;/p&gt;
&lt;pre&gt;

.. code-block:: identifier

   &amp;lt;indented code block goes here&amp;gt;

&lt;/pre&gt;

&lt;p&gt;md格式&lt;/p&gt;
&lt;pre&gt;

A block of text.

    :::identifier
    &amp;lt;code goes here&amp;gt;

&lt;/pre&gt;

&lt;h2&gt;图片和附件管理&lt;/h2&gt;
&lt;p&gt;一般不建议将文章中要使用到的图片或附件提交到blog库中，避免引起blog库迅速增大， blog库建议只保存纯文本的东西。可以将要使用的图片或附件上传到支持外链的第三方存储，然后在文正里直接引用图片或附件的&lt;span class="caps"&gt;URL&lt;/span&gt;。或者单独建立一个git库来保存图片和附件。&lt;/p&gt;
&lt;h2&gt;最后&lt;/h2&gt;
&lt;p&gt;这里只是介绍了大体上的一些用法，更多请参阅: &lt;a href="http://docs.getpelican.com/en/3.5.0/content.html"&gt;http://docs.getpelican.com/en/3.5.0/content.html&lt;/a&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry><entry><title>pelican + github 搭建个人Blog</title><link href="http://blog.wiseturtles.com/posts/setup-pelican.html" rel="alternate"></link><published>2014-11-30T22:42:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2014-11-30:posts/setup-pelican.html</id><summary type="html">&lt;h2&gt;为什么选择Pelican&lt;/h2&gt;
&lt;p&gt;想搭建一个博客，不想受门户网站博客的限制，想用更纯净的方式写作，方便数据转移，
专注内容而不是格式，在这个页面&lt;a href="https://www.staticgen.com"&gt;https://www.staticgen.com&lt;/a&gt;罗列了各种语言的静态博客引擎,&amp;nbsp;最终选择了Pelican.&lt;/p&gt;
&lt;p&gt;为什么呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为人生苦短，我用python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;特色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它是一个基于python语言的静态博客引擎&lt;/li&gt;
&lt;li&gt;使用Jinjia作为主题的模板语言&lt;/li&gt;
&lt;li&gt;支持Markdown,&amp;nbsp;reStructuredText格式&lt;/li&gt;
&lt;li&gt;其他牛逼的特色等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装Pelican&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;官方入门指南：&lt;a href="http://docs.getpelican.com/en/latest/getting_started.html"&gt;http://docs.getpelican.com/en/latest/getting_started.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文以Pelican3.5为例，使用Pelican需要python环境，官方推荐的python版本是2.7.X，因此开始之前，最好是检查一下当前系统的python版本是否满足情况。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python --version
Python 2.7.6
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;创建虚拟环境&lt;/h3&gt;
&lt;p&gt;如果当前系统默认是2.7.X, 我们则可以直接创建一个虚拟环境来为安装pelican做准备。
关于python虚拟环境的创建，详细可以参考: &lt;a href="http://liuzhijun.iteye.com/blog/1872241"&gt;http://liuzhijun.iteye.com/blog/1872241&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面说说主要步骤&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install virtualenv virtualenvwrapper
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[[ -s /usr/local/bin/virtualenvwrapper.sh ]] &amp;amp;&amp;amp; source /usr/local/bin/virtualenvwrapper.sh&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
$ mkvirtualenv pelican &lt;span class="c1"&gt;# 创建名字为pelican的虚拟环境，这里可以将pelican替换成任意你喜欢的名字&lt;/span&gt;
$ workon pelican &lt;span class="c1"&gt;# 激活虚拟环境&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另一种情况是当前系统默认python版本不是2.7.X的，
为了方便及不影响当前系统的python版本，可以使用&lt;a href="https://github.com/utahta/pythonbrew"&gt;pythonbrew&lt;/a&gt;来搭建Python2.7.x环境。
安装步骤: &lt;a href="https://github.com/utahta/pythonbrew/blob/master/README.rst"&gt;https://github.com/utahta/pythonbrew/blob/master/&lt;span class="caps"&gt;README&lt;/span&gt;.rst&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 安装pythonbrew&lt;/span&gt;
$ curl -kL http://xrl.us/pythonbrewinstall &lt;span class="p"&gt;|&lt;/span&gt; bash    &lt;span class="c1"&gt;# 这步执行成功后会生成目录: ~/.pythonbrew&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[[ -s &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pythonbrew/etc/bashrc ]] &amp;amp;&amp;amp; source &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pythonbrew/etc/bashrc&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
$ pythonbrew --version      &lt;span class="c1"&gt;# 检查是否安装成功&lt;/span&gt;
$ pythonbrew install --verbose 2.7.5       &lt;span class="c1"&gt;# 安装python 2.7.5&lt;/span&gt;
$ pythonbrew use 2.7.5      &lt;span class="c1"&gt;# 临时在当前会话使用python 2.7.5&lt;/span&gt;
$ which python              &lt;span class="c1"&gt;# 检查python版本信息是否正确&lt;/span&gt;

&lt;span class="c1"&gt;# 一些关于pythonbrew的常用命令&lt;/span&gt;
$ pythonbrew list           &lt;span class="c1"&gt;# 查看已经安装了的python版本&lt;/span&gt;
$ pythonbrew off            &lt;span class="c1"&gt;# 禁用pythonbrew，使用系统默认的python环境&lt;/span&gt;
$ pythonbrew list -k        &lt;span class="c1"&gt;# 查看pythonbrew提供了哪些python版本可以安装&lt;/span&gt;
$ pythonbrew switch 2.7.5   &lt;span class="c1"&gt;# 永久切换到python 2.7.5,与use有点不同&lt;/span&gt;
&lt;span class="c1"&gt;# 更多命令可以参考官方文档&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用pythonbrew自带的virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pythonbrew use 2.7.5
$ pythonbrew venv init       &lt;span class="c1"&gt;# 初始化虚拟环境&lt;/span&gt;
$ pythonbrew venv create pelican  &lt;span class="c1"&gt;# 创建名字为pelican的虚拟环境，这里可以将pelican替换成任意你喜欢的名字&lt;/span&gt;
$ pythonbrew venv use pelican     &lt;span class="c1"&gt;# 开启虚拟环境&lt;/span&gt;

&lt;span class="c1"&gt;# 为了以后使用方便,设置penv为开启虚拟环境的别名&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;alias  penv=&amp;#39;pythonbrew use 2.7.5 &amp;amp;&amp;amp; pythonbrew venv use pelican&amp;#39;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc

&lt;span class="c1"&gt;# 一些常用的命令&lt;/span&gt;
$ pythonbrew venv list
$ pythonbrew venv use proj
$ pythonbrew venv delete proj
$ pythonbrew venv rename proj proj2
$ pythonbrew venv clone proj proj2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装pelican&lt;/h3&gt;
&lt;p&gt;在配置好了虚拟环境之后，就让我们进入虚拟环境安装pelican吧&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 需要先激活虚拟环境&lt;/span&gt;
$ workon pelican  &lt;span class="c1"&gt;# 如果是使用的pythonbrew ,则是“penv”&lt;/span&gt;
$ pip install pelican markdown typogrif  &lt;span class="c1"&gt;# 安装必须的python包&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;博客配置&lt;/h2&gt;
&lt;p&gt;现在一切环境都好了，就让我们开始动手写博客吧&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir myblog           &lt;span class="c1"&gt;# 创建一个目录，用于存放博客&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; myblog
$ pelican-quickstart     &lt;span class="c1"&gt;# 开始创建博客的向导&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行&lt;code&gt;pelican-quickstart&lt;/code&gt;命令，会有一些问题，根据实际情况选择即可, 暂时不理解的也无所谓，直接回车就行了，后面都可以在配置文件里面修改。&amp;nbsp;通过上面的向导，博客的基本框架就建立起来了。&lt;/p&gt;
&lt;p&gt;默认Pelican提供了Fabric文件和Makefile封装了常用操作, 可以根据自身的喜好选择。&amp;nbsp;下面介绍一些常用的make命令，以后会用得比较频繁。&lt;/p&gt;
&lt;pre&gt;
    $ make     # 直接运行make， 查看命令帮助

    make html                        (re)generate the web site(生成网站)
    make clean                       remove the generated files
    make regenerate                  regenerate files upon modification(每当本地文件被修改时，都自动生存网站）
    make publish                     generate using production settings
    make serve                       serve site at http://localhost:8000 （开始本地服务，可以通过http://localhost:8000查看）
    make devserver                   start/restart develop_server.sh (make regenerate 和make serve两个命令的集合）
    make stopserver                  stop local server (关闭本地服务)
    ssh_upload                       upload the web site via SSH
    rsync_upload                     upload the web site via rsync+ssh
    dropbox_upload                   upload the web site via Dropbox
    ftp_upload                       upload the web site via FTP
    s3_upload                        upload the web site via S3
    github                           upload the web site via gh-pages
&lt;/pre&gt;

&lt;h3&gt;创建第一篇文章&lt;/h3&gt;
&lt;p&gt;说了这么多了，都还没有开始写呢，让我们开始写第一篇文章吧。
pelican 支持三种格式的文件： reStructuredText， markdown和html。
个人偏好于markdwon。下面就主要介绍markdown的吧，其他的可以到&lt;a href="http://docs.getpelican.com/en/3.2/getting_started.html#kickstart-your-site"&gt;官网查看&lt;/a&gt;.&amp;nbsp;上面写得很清楚。&lt;/p&gt;
&lt;p&gt;创建第一篇文章，直接使用官网的例子。文章看起来应该大致像如下模板：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Title: 文章标题
Date: 2014-11-30 23:15(日期)
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Author: crazygit
Summary: hello

这里是文章内容。
##你好，pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将上面的内容保存到&lt;code&gt;content&lt;/code&gt;目录下，取名为&lt;code&gt;test.md&lt;/code&gt;
。现在就要用到前面的命令了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make html
$ make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在打开&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;，怎么样?&amp;nbsp;看到了我们的第一篇文章了吧。&lt;/p&gt;
&lt;h3&gt;配置文件修改&lt;/h3&gt;
&lt;p&gt;博客的配置通过修改&lt;code&gt;publishconf.py&lt;/code&gt;
文件来实现，由于可以pelican比较灵活，可以配置的地方比较的多，就不介绍了，可以
查看&lt;a href="http://docs.getpelican.com/en/3.2/settings.html"&gt;官方文档&lt;/a&gt;查找自己需要的
。其实，默认的配置基本上已经很好了，我自己除了在配置文件里面加上了时区之外，其他的基本上没有修改什么了。&amp;nbsp;给一个官方的配置文件示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Alexis Métaireau&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Alexis&amp;#39; log&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://blog.notmyidea.org&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Europe/Paris&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# can be useful in development, but set to False when you&amp;#39;re ready to publish&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://github.com/ametaireau/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blog-notmyidea&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;PDF_GENERATOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;REVERSE_CATEGORY_ORDER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Biologeek&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://biologeek.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Filyb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://filyb.info/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Libert-fr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.libert-fr.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;N1k0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://prendreuncafe.com/blog/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Tarek Ziadé&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://ziade.org/blog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Zubin Mithra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://zubin71.wordpress.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://twitter.com/ametaireau&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lastfm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://lastfm.com/user/akounet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://github.com/ametaireau&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# global metadata to all the contents&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yeah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;it is&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# static paths will be copied under the same name&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pictures&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# A list of files to copy from the source to the destination&lt;/span&gt;
&lt;span class="n"&gt;FILES_TO_COPY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# custom page generated with a jinja2 template&lt;/span&gt;
&lt;span class="n"&gt;TEMPLATE_PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pages/jinja2_template.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jinja2_template.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# foobar will not be used, because it&amp;#39;s not in caps. All configuration keys&lt;/span&gt;
&lt;span class="c1"&gt;# have to be in caps&lt;/span&gt;
&lt;span class="n"&gt;foobar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;barbaz&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;主题安装&lt;/h3&gt;
&lt;p&gt;默认的博客主题是不是不符合你自己的胃口呢？没关系，pelican已经有很多漂亮的主题&amp;nbsp;供你选择了，在&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;已经有很多现成的主题了，打开每个主题的文件夹都有一张主题效果的截图，可以方便选择自己喜欢的主题。什么？这些主题都不满意。好吧，你还可以选择&lt;a href="http://docs.getpelican.com/en/3.2/themes.html#theming-pelican"&gt;创建属于自己独有的主题&lt;/a&gt;。由于个人比较懒，信奉拿来主义，所以就选择了&lt;code&gt;tuxlite_tbs&lt;/code&gt;这个主题，自己只做了一些细节的修改。&lt;/p&gt;
&lt;p&gt;废话不多说，让我们开始安装主题吧。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git://github.com/getpelican/pelican-themes.git ~/pelican-themes &lt;span class="c1"&gt;# 下载主题到`~/pelican-themes/`目录下&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/pelican-themes/
$ git submodule init  &lt;span class="c1"&gt;# 由于这个git库里面的一些主题是单独的一个子模块，所以将它们一起下载下来&lt;/span&gt;
$ git submodule update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，现在已经有了所有的主题了，打开每个主题的文件夹都有一张主题效果的截图，选择自己喜欢的主题。&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;publishconf.py&lt;/code&gt; 文件，添加&lt;code&gt;THEME&lt;/code&gt;关键字，如果已经有了，则直接修改值即可，我选择的是&lt;code&gt;tuxlite-tbs&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;THEME = &amp;quot;~/pelican-themes/tuxlite-tbs&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后重新执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make html
$ make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;访问&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;看看新的主题效果吧。&lt;/p&gt;
&lt;h3&gt;主题定制&lt;/h3&gt;
&lt;p&gt;新的主题怎么样呢？是不是还是有点遗憾呢？老外制作的主题总是弄Twitter，Google Plus等。这些东西虽然好，但是我们身在天朝，又用不上，要是我们能够把自己的新浪微博，&lt;span class="caps"&gt;QQ&lt;/span&gt;，等添加到自己的博客里面，看起来是不是更爽一点呢？&amp;nbsp;下面就来添加吧!&lt;/p&gt;
&lt;h3&gt;添加新浪微博关注按钮&lt;/h3&gt;
&lt;p&gt;首先到&lt;a href="http://open.weibo.com/widget/followbutton.php"&gt;新浪开放平台&lt;/a&gt;获取关注按钮的代码吧。在我使用的时候，它主要提供了两中样式，一种是&lt;span class="caps"&gt;WBML&lt;/span&gt;标准版，一种是JavaScript简化版本。在实际使用的时候发现JavaScript版本时候会有一些问题。
&lt;a href="http://open.weibo.com/qa/index.php?qa=11802&amp;amp;qa_1=%E4%BD%BF%E7%94%A8%E5%85%B3%E6%B3%A8%E6%8C%89%E9%92%AEjavascript%E7%AE%80%E5%8C%96%E7%89%88%EF%BC%8C%E6%8F%90%E7%A4%BAclient-js%E6%B2%A1%E6%9C%89sendmessage%E6%96%B9%E6%B3%95&amp;amp;code=4b3704c5bce7d8cc46de2fe229687bdb"&gt;提示client.js没有sendMessage方法&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;因此下面主要介绍如何添加&lt;span class="caps"&gt;WBML&lt;/span&gt;标准版本的。取得类似下面的代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;wb:follow-button&lt;/span&gt; &lt;span class="na"&gt;uid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2991975565&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red_1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;67&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;24&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/wb:follow-button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意上面的uid就是自己微博帐号的id，type就是选择的样式。&amp;nbsp;为了让这个代码有通用性。我将它修改为如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;wb:follow-button&lt;/span&gt; &lt;span class="na"&gt;uid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;WEIBO_UID&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;WEIBO_TYPE&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;64&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/wb:follow-button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样我们就可以通过在&lt;code&gt;pelicanconf.py&lt;/code&gt;通过配置&lt;code&gt;WEIBO_UID&lt;/code&gt;和&lt;code&gt;WEIBO_TYPE&lt;/code&gt;灵活地设置帐号和样式。
将上面的代码保存在weibo.html文件中，并将文件保存到主题代码库的&lt;code&gt;~/pelican-themes/tuxlite-tbs/templates&lt;/code&gt;目录下。&amp;nbsp;再修改这个目录下的base.html文件，引用我们的weibo.html。具体改动如下:&lt;/p&gt;
&lt;p&gt;在&lt;span class="caps"&gt;HTML&lt;/span&gt;标签中增加&lt;span class="caps"&gt;XML&lt;/span&gt;命名空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;html xmlns:wb=“http://open.weibo.com/wb”&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;span class="caps"&gt;HEAD&lt;/span&gt;头中引入&lt;span class="caps"&gt;WB&lt;/span&gt;.&lt;span class="caps"&gt;JS&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://tjs.sjs.sinajs.cn/open/api/js/wb.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在需要显示微博关注按钮的地方includ刚刚的weibo.html，我把它添加在了社交下面.同时设置了&lt;span class="caps"&gt;WEIBO&lt;/span&gt;变量来设置是否显示微博关注按钮&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;WEIBO&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;social&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;well&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;padding: 8px 0; background-color: #FBFBFB;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav nav-list&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav-header&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    新浪微博
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;weibo.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;pelicanconf.py&lt;/code&gt;,&amp;nbsp;添加如下字段：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 新浪微博新关注按钮&lt;/span&gt;
&lt;span class="n"&gt;WEIBO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;WEIBO_UID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1768615155&lt;/span&gt;        &lt;span class="c1"&gt;# 填入uid&lt;/span&gt;
&lt;span class="n"&gt;WEIBO_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red_3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译发布并预览。在本地预览的时候可能不会看到效果。需要发布到github&amp;nbsp;pages上面才能看到.下面马上会讲如何部署到github上面.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make html
$ make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;部署到Github上面&lt;/h3&gt;
&lt;p&gt;如何利用github&amp;nbsp;pages功能来创建个人的博客，网上和官网已经有很多教程了，就不再细讲具体步骤的，唯一需要注意的是，它主要分两类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户级别的pages&lt;/li&gt;
&lt;li&gt;项目级别的pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面两个不同之处是提交代码的时候一个是master分支，另一个是gh-pages分支.
因此，我们只需要将output 目录下的内容提交到上面的分支中。
为了做这件事情，我们可以使用前面介绍的ghp-import工具. 同时在我们的Makefile文件中也有封装这个命令
具体使用&lt;a href="http://docs.getpelican.com/en/3.2/tips.html#publishing-to-github"&gt;参考这里&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;但是需要根据实际修改Makefile文件中的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
    ghp-import &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
    git push origin gh-pages   &lt;span class="c1"&gt;# 根据实际使用的pages情况修改这里&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改好了之后，可以直接使用&lt;code&gt;make github&lt;/code&gt; 发布博客了.&lt;/p&gt;
&lt;p&gt;我使用的用户级别的pages时，具体修改如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; myblog &lt;span class="c1"&gt;# 进入博客代码目录&lt;/span&gt;
$ git init
$ git remote add origin git@github.com:username/username.github.io.git &lt;span class="c1"&gt;# 需要替换username&lt;/span&gt;
$ git add .
$ git commit -m &lt;span class="s1"&gt;&amp;#39;init pelican source code&amp;#39;&lt;/span&gt;
$ penv  &lt;span class="c1"&gt;#打开虚拟环境&lt;/span&gt;
$ make html 编译代码
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改Makefile文件如下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
    ghp-import &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 这一步会在本地创建一个gh-pages分支。并将OUTPUTDIR里面的内容拷贝到这个分支&lt;/span&gt;
    git push -f origin gh-pages:master
&lt;span class="c"&gt;# 注意我这里添加了参数f，在后面每次往master 分支提交代码的时候，如果有冲突，会强制覆盖master的代码&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后一步，提交代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，打开你自己的github pages, 如&lt;a href="http://username.github.io/"&gt;http://username.github.io/&lt;/a&gt;查看效果。&lt;strong&gt;注意&lt;/strong&gt;： 首次部署到github pages&amp;nbsp;需要等15分钟才有效&lt;/p&gt;
&lt;h3&gt;使用google在线字体&lt;/h3&gt;
&lt;p&gt;有些时候，我们想在文章中使用一些好看的字体，怎么办呢？伟大的Google替我们解决了这个问题，提供了&lt;a href="http://www.google.com/fonts/"&gt;Google Web Fonts&lt;/a&gt;。
在这里可以选择一些好看的字体来用。怎么用也写得很清楚，就不再这里叙述了。
一些效果如下：
&lt;p class="googlefont"&gt;Hello Google Web&amp;nbsp;Fonts&lt;/p&gt;
&lt;p class="font-effect-fire-animation"&gt;Hello Google&amp;nbsp;Fonts&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是上面的字体有些老的浏览器不支持，所以在使用的时候注意下当前的浏览器是否支持这些字体。&lt;/p&gt;
&lt;h3&gt;图片添加&lt;/h3&gt;
&lt;p&gt;有时候，再多的语言，也比不上一张图片来得直白，虽然我们可以将图片直接放在写博客的代码库里面再直接引用。但是个人感觉这样做并不好。图片一多，代码库就明显变大。一点也不方便。最好的方法是选用一个第三方的图片托管，支持外链的。这样我们只需要在图片托管处上传图片，然后在博客里面引用即可。在网上搜寻一番之后，在&lt;a href="http://c7sky.com/image-storage-server.html"&gt;这里&lt;/a&gt;找到了一些关于各种图片托管的介绍。在这里我选择了yupoo。大家也可以根据自己的需求任意选择一款。不说了，直接上图吧.&lt;/p&gt;
&lt;p&gt;&lt;img alt="第一张图片" src="http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;由于markdown语法本身没有代办设置图片布局，所以可以用html标签来设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Test Image&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p align="center"&gt;&lt;img src="http://pic.yupoo.com/crazygit/CQBeKErP/medish.jpg" title="Test Image"/&gt;&lt;/p&gt;

&lt;h3&gt;添加文章评论系统，分享按钮，访问统计&lt;/h3&gt;
&lt;p&gt;这些步骤与添加新浪关注按钮一样，就不再赘述了。
这些设置再我当前使用的主题中都添加了，如果有需要的话大家可以&lt;a href="https://github.com/crazygit/pelican-themes-tuxlite-tbs-mine"&gt;参考一下&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;其他功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;导入已经存在的博客&lt;/li&gt;
&lt;li&gt;文字的多语言设置&lt;/li&gt;
&lt;li&gt;个人私有文章和草稿箱&lt;/li&gt;
&lt;li&gt;插件使用&lt;/li&gt;
&lt;li&gt;标签云&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt;订阅&lt;/li&gt;
&lt;li&gt;文章分类&lt;/li&gt;
&lt;li&gt;&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些功能&lt;a href="http://docs.getpelican.com"&gt;官方文档&lt;/a&gt;都有介绍，可以自己查找。&lt;/p&gt;
&lt;h3&gt;结束语&lt;/h3&gt;
&lt;p&gt;暂时使用到的功能就这么多了，以后有什么新的添加我会更新的，由于小弟也是刚刚接触这个，加上文笔不怎么好，如果有什么不明白的地方或错误的地方，欢迎留言，大家一起交流下。&lt;/p&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry><entry><title>Sublime Text 2使用入门</title><link href="http://blog.wiseturtles.com/posts/sublime-text-2.html" rel="alternate"></link><published>2013-11-27T09:52:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-27:posts/sublime-text-2.html</id><summary type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id4"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id5"&gt;小试牛刀&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id6"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;关于Sublime&amp;nbsp;Text的赞美之词，网上太多了，不过别人再怎么说也是别人的感受，要自己亲身体会才是硬道理。下面，就让我们进入Sublime的世界吧。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;安装&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;直接从官网下载http://www.sublimetext.com/2即可， 在这里可以选择不同的平台和版本的软件。 同时，如果想尝鲜的话，也可以从http://www.sublimetext.com/3下载Beat版本的Sublime Text&amp;nbsp;3。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;小试牛刀&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;安装好下载的Sublime Text 2之后，&amp;nbsp;让我们开始尝试使用这传说中的神器吧。&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;快速定位&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Ctrl + P
&amp;#64; 定位到
# 搜索
:&amp;nbsp;行号&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;命令面板&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Ctrl + Shift +&amp;nbsp;P&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;一些快捷键&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="loweralpha simple"&gt;
&lt;li&gt;Ctrl+D&amp;nbsp;选中一个变量之后，用Ctrl+D快速跳到该变量下一次出现的地方。&lt;/li&gt;
&lt;li&gt;Ctrl+Shift+L&amp;nbsp;将选中的内容拆分为多行，之后对每一行的操作都是同步的。&lt;/li&gt;
&lt;li&gt;Ctrl+Shift+P 打开命令面板，如使用Ctrl+Shift+P打开命令面板之后，输入“sspy” (short for Set Syntax:&amp;nbsp;Python),使用python语法高显亮当前文章。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;常用插件&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Package&amp;nbsp;Control&lt;/li&gt;
&lt;li&gt;emmet&lt;/li&gt;
&lt;li&gt;Soda&amp;nbsp;Theme&lt;/li&gt;
&lt;li&gt;SideBarEnhancements&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Bracket​Highlighter&lt;/li&gt;
&lt;li&gt;Pretty &lt;span class="caps"&gt;JSON&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Markdown&amp;nbsp;Preview&lt;/li&gt;
&lt;li&gt;JsFormat&lt;/li&gt;
&lt;li&gt;j​Query&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;文档&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sublimetext.com/docs/2/"&gt;http://www.sublimetext.com/docs/2/&lt;/a&gt;&amp;nbsp;(官方文档，介绍了了一些sublime的常用操作)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yangweijie/SublimeText2_doc_cn"&gt;https://github.com/yangweijie/SublimeText2_doc_cn&lt;/a&gt;&amp;nbsp;（这个是官方文档的中文版）&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sublime.wbond.net/"&gt;https://sublime.wbond.net/&lt;/a&gt; （sublime package control,&amp;nbsp;插件管理的文档，在这里可以查看所有插件，获取热门插件和插件更新信息)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><category term="sublime"></category></entry><entry><title>Windows下安装Nginx</title><link href="http://blog.wiseturtles.com/posts/install-nginx-on-windows.html" rel="alternate"></link><published>2013-11-26T09:30:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-26:posts/install-nginx-on-windows.html</id><summary type="html">&lt;p&gt;本文参考自 &lt;a class="reference external" href="http://nginx.org/cn/docs/windows.html"&gt;windows下安装nginx&lt;/a&gt;&amp;nbsp;.&lt;/p&gt;
&lt;p&gt;nginx的Windows版本使用原生Win32 &lt;span class="caps"&gt;API&lt;/span&gt;（非Cygwin模拟层）。当前nginx/Windows只使用select作为通知方法，所以不要期待它有很高的性能和扩展性。鉴于这点和一些已知问题，nginx/Windows目前还处于beta阶段。nginx/Windows和Unix版本相比，功能几乎已经齐全，除了&lt;span class="caps"&gt;XSLT&lt;/span&gt;过滤器、图像过滤器、GeoIP模块和嵌入Perl语言支持以外。&lt;/p&gt;
&lt;p&gt;安装nginx/Windows，需要下载最新的1.5.7开发版本，因为开发分支上包含了所有已知的问题修复，尤其是针对Windows版本的问题修复。解压缩下载得到的zip文件，进入nginx-1.5.7目录，运行nginx。下面给出一个在C盘根目录下安装的例子：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd c:\
unzip nginx-1.5.7.zip
cd nginx-1.5.7
start nginx
&lt;/pre&gt;
&lt;p&gt;可以在命令行运行tasklist命令来查看nginx进程：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C:\nginx-1.5.7&amp;gt;tasklist /fi &amp;quot;imagename eq nginx.exe&amp;quot;

Image Name           PID Session Name     Session#    Mem Usage
=============== ======== ============== ========== ============
nginx.exe            652 Console                 0      2 780 K
nginx.exe           1332 Console                 0      3 112 K
&lt;/pre&gt;
&lt;p&gt;其中一个是主进程，另一个是工作进程。如果nginx没有启动，请查看logserror.log文件以寻找失败原因。如果日志文件不存在，那失败原因会记录在Windows事件日志中。如果某次请求没有展示预想的页面，而是展示了错误页面，也请查看logserror.log文件。&lt;/p&gt;
&lt;p&gt;nginx/Windows使用工作目录作为前缀将配置文件中设置的相对目录补齐。就上面安装的例子而言，工作目录应该是C:nginx-1.5.7（工作目录基本上与运行文件所在的目录相同）。配置文件中的目录请使用“/”，而不是“”做目录分隔：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
access_log   logs/site.log;
    root         C:/web/html;
    nginx/Windows作为标准控制台应用运行，而不是系统服务。可以用下面的命令控制：

    nginx -s stop   快速退出
    nginx -s quit   优雅退出
    nginx -s reload  更换配置，启动新的工作进程，优雅的关闭以往的工作进程
    nginx -s reopen 重新打开日志文件
&lt;/pre&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;已知问题&lt;/h2&gt;
&lt;p&gt;虽然可以启动若干工作进程运行，实际上只有一个进程在处理请求所有请求。
一个工作进程只能处理不超过1024个并发连接。
缓存和其他需要共享内存支持的模块在Windows&amp;nbsp;Vista及后续版本的操作系统中无法工作，因为在这些操作系统中，地址空间的布局是随机的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;日后可能加强的功能&lt;/h2&gt;
&lt;p&gt;作为系统服务运行。
使用“I/O完成端口”作为事件模型。&amp;nbsp;使用单工作进程多线程的模型。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="windows"></category><category term="nginx"></category></entry><entry><title>Windows环境下搭建python开发环境</title><link href="http://blog.wiseturtles.com/posts/install-python-on-windows.html" rel="alternate"></link><published>2013-11-25T23:14:34+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-25:posts/install-python-on-windows.html</id><summary type="html">&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;从 &lt;a class="reference external" href="http://www.python.org/download/"&gt;Python官网下载&lt;/a&gt;&amp;nbsp;下载自己所需版本的windows安装包并进行安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;将安装包的路径添加到系统环境变量,  &lt;code&gt;C:\Python27&lt;/code&gt; ， 同时为了后面使 &lt;code&gt;easy_install&lt;/code&gt; ，也 &lt;code&gt;C:\Python27\Scripts&lt;/code&gt; 添加到环境变量里（现在这个目录还不存在).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;安装python包管理工具 &lt;em&gt;setuptools&lt;/em&gt; ,&amp;nbsp;安装方法如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="loweralpha simple"&gt;
&lt;li&gt;下载 &lt;a class="reference external" href="https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py"&gt;ez_setup.py&lt;/a&gt;  脚本，并运行 &lt;code&gt;python easy_install.py&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;如果cmd命令支持curl命令(如机器上安装过git或一些带linux命令的包时），则可以直接执 &lt;code&gt;curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py | python&lt;/code&gt; 进行安装.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;安装另一个python包的管理工具 &lt;em&gt;pip&lt;/em&gt; , &lt;code&gt;easy_install pip&lt;/code&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;让pip使用国内的pypi源。我们在使用pip进行包安装的时候，默认是从官方下载包的，下载速度相当地慢，而且经常还会出现一些包无法下载的情况。这个时候，让pip使用国内原则能解决这个问题。在这里我选择使用 &lt;a class="reference external" href="http://e.pypi.python.org/"&gt;清华大学的源&lt;/a&gt;  。使用pip命令的时候，只需要加 &lt;code&gt;-i 源地址即可&lt;/code&gt; 。如 &lt;code&gt;pip install flask -i http://e.pypi.python.org/simple&lt;/code&gt; .也可以进行如下配置，&amp;nbsp;让以后每次安装的时候都自动使用指定的源&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
使用pip的用户可以如下配置：

在unix和macos，配置文件为：$HOME/.pip/pip.conf
在windows上，配置文件为：%HOME%\pip\pip.ini

需要在配置文件内加上：

[global]
index-url=http://e.pypi.python.org/simple
&lt;/pre&gt;
&lt;p&gt;使用清华大学的源之后，下载安装python包时真是可以体会到飞一般的感觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;如果有需要，也可以在本地自己做pypi的镜像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;p class="first"&gt;使用bandersnatch， 具体方法可以参考 &lt;a class="reference external" href="https://pypi.python.org/mirrors"&gt;PyPI Mirrors&lt;/a&gt;&amp;nbsp;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;使用pep381client, 具体方法可以参考 &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0381/"&gt;pep381client&lt;/a&gt;&amp;nbsp;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用pep381cient搭建本地镜像时发现它本身没有下载包，只是同步了包名，
Google了一下，在 &lt;a class="reference external" href="http://stackoverflow.com/questions/17667835/pep381clientpep381run-wont-download-packages-from-the-official-pypi-server"&gt;这里&lt;/a&gt; 发现了答案，原因是pep381cient用的是http下载，而pypi只支持hppts.
因此需要修改一下pep381cient程序代码。
修改文件: &lt;code&gt;(YOUR INSALLED DIRECTORY)/pep381client/__init__.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如 &lt;code&gt;/usr/local/lib/python2.6/dist-packages/pep381client/__init__.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;9:  -BASE = &amp;#39;http://&amp;#39;+pypi
    +BASE = &amp;#39;https://&amp;#39;+pypi

28: -        _conn = httplib.HTTPConnection(pypi)
    +        _conn = httplib.HTTPSConnection(pypi)

37: -        _conn = httplib.HTTPConnection(pypi)
    +        _conn = httplib.HTTPSConnection(pypi)
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;更多可以参考 &lt;a class="reference external" href="http://www.worldhello.net/2011/03/14/2357.html"&gt;http://www.worldhello.net/2011/03/14/2357.html&lt;/a&gt;&amp;nbsp;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;好了，现在可以开始python之旅了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="windows"></category><category term="python"></category><category term="pypi mirrors"></category></entry><entry><title>Ubuntu上手动安装JDK</title><link href="http://blog.wiseturtles.com/posts/install-jdk.html" rel="alternate"></link><published>2013-11-03T19:09:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-03:posts/install-jdk.html</id><summary type="html">&lt;p&gt;Ubuntu上面自己手动安装&lt;span class="caps"&gt;JDK&lt;/span&gt;的方法如下:
首先下载jdk-7u45-linux-i586.tar.gz压缩包，并解压到 &lt;code&gt;/usr/local/lib/jdk1.7.0_45&lt;/code&gt; ,&amp;nbsp;再执行下面的脚本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;JDK_BIN_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/lib/jdk1.7.0_45/bin
&lt;span class="k"&gt;for&lt;/span&gt; x in &lt;span class="k"&gt;$(&lt;/span&gt;find &lt;span class="nv"&gt;$JDK_BIN_PATH&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$x&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    sudo update-alternatives --install /usr/bin/&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; 300
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="jdk"></category></entry><entry><title>WAMP(Windows + Apache + Mysql + PHP) 环境搭建</title><link href="http://blog.wiseturtles.com/posts/setup-wamp.html" rel="alternate"></link><published>2013-09-30T13:44:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-09-30:posts/setup-wamp.html</id><summary type="html">&lt;p&gt;最近开始学习&lt;span class="caps"&gt;PHP&lt;/span&gt;，工欲善其事，必先利其器。第一步当然是环境搭建啦！&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;开发基本也就是在不同平台下，要么是&lt;span class="caps"&gt;LAMP&lt;/span&gt;(Linux + Apache + Mysql + &lt;span class="caps"&gt;PHP&lt;/span&gt;)，要么就是&lt;span class="caps"&gt;WAMP&lt;/span&gt;(Windows + Apache + Mysql +&lt;span class="caps"&gt;PHP&lt;/span&gt;),&amp;nbsp;个人感觉在ubuntu环境下搭建环境比较简单，只需要一个命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install -y apache2 mysql-server-5.5 php5 php5-gd php5-mysql php5-xdebug libapache2-mod-php5 phpmyadmin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后通过少许配置， &lt;span class="caps"&gt;LAMP&lt;/span&gt;环境就基本上搭建好了。系统默认帮我们做了很多事情，但是为了学习，我们还是尝试下在windows下搭建吧！虽然在windows下面也有很多&lt;span class="caps"&gt;WAMP&lt;/span&gt;的集成环境，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="caps"&gt;XAMPP&lt;/span&gt; - &lt;span class="caps"&gt;XAMPP&lt;/span&gt;是一款具有中文说明的功能全面的集成环境，&lt;span class="caps"&gt;XAMPP&lt;/span&gt;并不仅仅针对Windows，而是一个适用于Linux、Windows、Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X 和Solaris 的易于安装的Apache 发行版。软件包中包含Apache 服务器、MySQL、SQLite、&lt;span class="caps"&gt;PHP&lt;/span&gt;、Perl、FileZilla &lt;span class="caps"&gt;FTP&lt;/span&gt;&amp;nbsp;Server、Tomcat等等。默认安装开放了所有功能，安全性有问题，需要进行额外的安全设定。&lt;/p&gt;
&lt;p&gt;WampServer - WampServe集成了Apache、MySQL、&lt;span class="caps"&gt;PHP&lt;/span&gt;、phpmyadmin，支持Apache的mod_rewrite，&lt;span class="caps"&gt;PHP&lt;/span&gt;扩展、Apache模块只需要在菜单“开启/关闭”上点点就搞定，省去了修改配置文件的麻烦。&lt;/p&gt;
&lt;p&gt;AppServ - 集成了Apache、&lt;span class="caps"&gt;PHP&lt;/span&gt;、MySQL、phpMyAdmin，较为轻量。&lt;/p&gt;
&lt;p&gt;总的来说，无论从安全性和性能上来讲，&lt;span class="caps"&gt;LAMP&lt;/span&gt;（Linux + Apache + MySQL + &lt;span class="caps"&gt;PHP&lt;/span&gt;）都优于&lt;span class="caps"&gt;WAMP&lt;/span&gt;（Windows + Apache + MySQL + &lt;span class="caps"&gt;PHP&lt;/span&gt;），不过由于Windows具有易用的特点，&lt;span class="caps"&gt;WAMP&lt;/span&gt;也未尝不是初学者的一个不错的选择。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面&lt;span class="caps"&gt;WAMP&lt;/span&gt;集成环境的内容介绍引用自&lt;br /&gt;
&lt;a href="http://www.williamlong.info/archives/1281.html"&gt;http://www.williamlong.info/archives/1281.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于集成的开发环境，还不得不提到ZendServer， 这个也是一个相当不错的环境，相比&lt;span class="caps"&gt;XAMPP&lt;/span&gt;更加精简一些。&lt;/p&gt;
&lt;p&gt;如果我们可以自己搭建一次整个开发环境的话，对这个过程将会更加熟悉。废话不多说，下面就让我们开始搭建吧！&lt;/p&gt;
&lt;h2&gt;Apache安装&lt;/h2&gt;
&lt;h3&gt;1.下载安装Apache包&lt;/h3&gt;
&lt;p&gt;根据http://httpd.apache.org/docs/2.4/platform/windows.html中如下一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Apache &lt;span class="caps"&gt;HTTP&lt;/span&gt; Server Project itself does not provide binary releases of software, only source code. If you cannot compile the Apache &lt;span class="caps"&gt;HTTP&lt;/span&gt; Server yourself, you can obtain a binary package from numerous binary &amp;gt;distributions available on the Internet.
Popular options for deploying Apache httpd, and, optionally, &lt;span class="caps"&gt;PHP&lt;/span&gt; and MySQL, on Microsoft Windows,&amp;nbsp;include:&lt;/p&gt;
&lt;p&gt;•&amp;nbsp;ApacheHaus&lt;/p&gt;
&lt;p&gt;•  Apache&amp;nbsp;Lounge&lt;/p&gt;
&lt;p&gt;•&amp;nbsp;WampServer&lt;/p&gt;
&lt;p&gt;•  &lt;span class="caps"&gt;XAMPP&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从上面可以知道，Apache官方并没有提供windows下的二进制安装包，
可以从它推荐的站点下载apache二进制安装包。
在此选择&lt;br /&gt;
&lt;a href="https://www.apachelounge.com/download/"&gt;https://www.apachelounge.com/download/&lt;/a&gt; 
网站上的&lt;br /&gt;
&lt;a href="https://www.apachelounge.com/download/win32/binaries/httpd-2.4.4-win32.zip"&gt;https://www.apachelounge.com/download/win32/binaries/httpd-2.4.4-win32.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于上面这个安装包是根据Visual Studio C++ 2010 &lt;span class="caps"&gt;SP1&lt;/span&gt; &lt;span class="caps"&gt;VC10&lt;/span&gt;&amp;nbsp;环境下编译的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Be sure that you have installed the Visual C++ 2010 &lt;span class="caps"&gt;SP1&lt;/span&gt; Redistributable Package x86 : &lt;span class="caps"&gt;VC10&lt;/span&gt; &lt;span class="caps"&gt;SP1&lt;/span&gt;&amp;nbsp;vcredist_x86.exe&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此需要额外从&amp;nbsp;http://www.microsoft.com/en-us/download/confirmation.aspx?id=8328  &lt;/p&gt;
&lt;p&gt;下载vcredist_x86.exe（这里根据自己的系统类型选择安装，我的是32位的系统，因此选择这个）&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;安装和修改Apache配置文件&lt;/h3&gt;
&lt;p&gt;首先安装vcredist_x86.exe。再将下载的httpd-2.4.4-win32.zip解压到任意目录下，如：&lt;code&gt;D:\wamp\Apache24&lt;/code&gt;.
修改配置文件&lt;code&gt;D:\wamp\Apache24\conf\httpd.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;由于在&lt;code&gt;httpd.conf&lt;/code&gt;中默认为httpd-2.4.4-win32.zip解压是解压到&lt;code&gt;c:\Apache24&lt;/code&gt;目录下面的。
因此需要将&lt;code&gt;httpd.conf&lt;/code&gt;文件中所有的&lt;code&gt;c:/Apache24&lt;/code&gt;替换成&lt;code&gt;D:/wamp/Apache24&lt;/code&gt;（&lt;strong&gt;注意&lt;/strong&gt;:在&lt;code&gt;httpd.conf&lt;/code&gt;文件中表示文件路径都是用的正斜杠，而不是反斜杠）。跟大部分网上讲的配置方法一样，在&lt;code&gt;httpd.conf&lt;/code&gt; 中有如下几处是需要注意修改的&lt;/p&gt;
&lt;pre&gt;
    ServerRoot "D:/wamp/Apache24"  # apache服务器安装路径
    Listen 80                      # 服务器监听的端口
    ServerName localhost:80        # 服务器的域名，测试环境下一般是localhost
    ServerAdmin lianglin999@gmail.com   # 服务器维护人员的邮箱
    DocumentRoot "D:/wamp/Apache24/htdocs"  # 服务器的根目录
    &amp;lt;Directory "D:/wamp/Apache24/htdocs"&amp;gt;    # 这里和服务器的根目录路径一致
&lt;/pre&gt;

&lt;h3&gt;3.&amp;nbsp;安装和启动Apache服务&lt;/h3&gt;
&lt;p&gt;先将&lt;code&gt;D:\wamp\Apache24\bin\&lt;/code&gt;添加到系统环境变量中。方便后面安装和启动服务。&amp;nbsp;运行cmd窗口，执行如下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;httpd -k install -n service_name            # 安装apache服务 -n 是可选的，表示指定服务名字，不加-n使用默认的服务名字
httpd -k start/stop/restart -n service_name # 运行/停止/重启 apache服务, 同样，如果上面没有使用-n参数，这里也可以省去
httpd -k uninstall -n service_name          # 卸载apache服务
net start/stop service_name                 # 也可以运行/停止 apache服务
httpd -help                                 # 查看更多帮助信息
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装并运行Apache服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;httpd -k install
httpd -k start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有修改配置文件中的默认80端口的话，访问&lt;br /&gt;
&lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;
如果修改了端口号为8000，则访问  &lt;br /&gt;
&lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后看到It works页面。表示apache服务器安装成功。&amp;nbsp;如果没有，请检查上述步骤是不是有什么错误。&lt;/p&gt;
&lt;h2&gt;Mysql安装&lt;/h2&gt;
&lt;h3&gt;1.&amp;nbsp;下载安装包&lt;/h3&gt;
&lt;p&gt;从&lt;a href="http://dev.mysql.com/downloads/"&gt;http://dev.mysql.com/downloads/&lt;/a&gt;上面，可以获取Mysql的安装包，在Windows下面，Mysql的安装包主要有两种：一种是MySQL Community Server Windows msi安装包， 另一种是自己配置的zip包。&amp;nbsp;msi类型的的安装简单方面，根据需求选择，直接一直“下一步”就可以了。zip包您想的需要自己修改配置文件，在安装包解压路径下，复制my-default.ini到my.ini进行配置，具体配置内容可以网上查询。&lt;/p&gt;
&lt;p&gt;在这里可以查看一篇别人介绍的&lt;a href="http://www.chenyudong.com/archives/installing-mysql-on-microsoft-windows-using-a-noinstall-zip-archive.html"&gt;配置方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实，也可以暂时不管配置什么的，先把Mysql用起来，需要的配置等要用时再来修改也不迟，那样印象更深刻，直接借鉴别人的配置，有些地方也不知道为什么要那么做。&amp;nbsp;所以，我的做法就是不管配置什么的，直接用吧。&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;安装Mysql服务和使用&lt;/h3&gt;
&lt;p&gt;假设我使用的是zip包类型的Mysql，解压在&lt;code&gt;D:\wamp\mysql-5.6.13-win32\&lt;/code&gt;目录下, 先把&lt;code&gt;D:\wamp\mysql-5.6.13-win32\bin&lt;/code&gt;添加到环境变量，方便使用命令行。&lt;/p&gt;
&lt;p&gt;运行&lt;span class="caps"&gt;CMD&lt;/span&gt;窗口，跟安装Apache服务类似，直接运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysqld --install MySQL5.5(service_name)  # Mysql5.5 是service_name，是可选的，不指定的话它会默认使用一个服务名
net start/stop MySQL5.5                  # 启动/停止Mysql服务
mysqld --remove MySQL5.5                 # 移除Mysql服务

# 更改Mysql数据库密码，第一次使用时，密码默认为空
mysql -u root -p                        # 从命令行中进入mysql的客户端
use mysql;                              # 使用mysql这个数据库
update user set password=password(&amp;quot;root_passwd&amp;quot;) where user=&amp;quot;root&amp;quot;;      # 对root密码进行更改
FLUSH PRIVILEGES;                       
# 现在退出，便可以使用root_passwd密码登录了
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多安装细节可以查看&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/windows-installation.html"&gt;Mysql手册&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;为了方便对数据库进行管理，我们可以安装phpmyadmin，一个web版本的Mysql数据库管理工具，具体安装方法网上比较多，也比较简单这里就不在讲解咯。&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;安装&lt;/h2&gt;
&lt;h3&gt;1.&amp;nbsp;下载并配置&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;安装包的版本分线程安全和非线程安全两种，具体两种有什么区别，网上有一大推讲解，本人也不是很了解，但是如果要使用apache服务器的话，只有下载线程安全的版本，非线程安全的版本没有php5apache2_4.dll文件。&lt;/p&gt;
&lt;p&gt;根据&lt;span class="caps"&gt;PHP&lt;/span&gt;安装手册，在安装&lt;span class="caps"&gt;PHP&lt;/span&gt;的时候，需要先进行一些配置。假设我们将安装包解压在&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86&lt;/code&gt;。
首先复制&lt;code&gt;php.ini-development&lt;/code&gt;为&lt;code&gt;php.ini&lt;/code&gt;, 然后修改&lt;code&gt;php.ini&lt;/code&gt;进行如下配置：&lt;/p&gt;
&lt;pre&gt;
# 把;error_log = php_errors.log 修改为
    error_log = D:\wamp\php-5.5.3-Win32-VC11-x86\logs

# ;date.timezone =修改为
    date.timezone = PRC

# 下面这2个,自己决定了
    post_max_size = 100M
# upload_max_filesize通常比post_max_size小
    upload_max_filesize = 50M

# 修改相关路径
# 上传暂存路径,别忘了创建对应的文件夹
    upload_tmp_dir = D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\upload
    session.save_path = D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\session
    extension_dir = D:\wamp\php-5.5.3-Win32-VC11-x86\ext

# 取消常用的扩展前面的分号注释
    extension=php_curl.dll
    extension=php_gd2.dll
    extension=php_mbstring.dll
    extension=php_mysql.dll
    extension=php_mysqli.dll
    extension=php_pdo_mysql.dll
&lt;/pre&gt;

&lt;p&gt;最后再创建相对应的目录&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\logs&lt;/code&gt;,&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\upload&lt;/code&gt;,&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\session&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后，让apache认识php，修改apache的配置文件&lt;code&gt;D:\wamp\Apache24\conf\httpd.conf&lt;/code&gt;添加下面的内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# php配置 
LoadModule php5_module &amp;quot;E:/wamp_x64/php-5.5.3-Win32-VC11-x64/php5apache2_4.dll&amp;quot;
AddHandler application/x-httpd-php .php

# 配置 php.ini 的路径
PHPIniDir &amp;quot;E:/wamp_x64/php-5.5.3-Win32-VC11-x64

# 同时修改
DirectoryIndex index.html index.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在apache根目录下创建&lt;code&gt;D:/wamp/Apache24/htdocs/phpinfo.php&lt;/code&gt;文件，内容如下:
&lt;pre&gt;
    &amp;lt;?php phpinfo() ?&amp;gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;重启apache服务，访问 http://localhost/phpinfo.php,&amp;nbsp;如果看到php相关信息，表示php安装成功。&lt;/p&gt;
&lt;h2&gt;Xdebug安装&lt;/h2&gt;
&lt;p&gt;Xdebug 是一个&lt;span class="caps"&gt;PHP&lt;/span&gt;开发的调试工具，跟它齐名的另一个叫&lt;code&gt;Zend Debugger&lt;/code&gt;, 也是一个很不错的东西。
安装xdebug，首先需要下载适合版本的xdebug，如果不知道自己应该下载哪个版本的话，可以将你phpinfo();方法得到的页面内容粘贴到&lt;a href="http://xdebug.org/wizard.php"&gt;这里&lt;/a&gt;，它会自动分析出哪个版本的xdebug插件适合你。
将下载下来的dll文件保存到php的安装路径&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\ext&lt;/code&gt;目录下，然后修改&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\php.ini&lt;/code&gt;文件，添加如下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[XDebug]&lt;/span&gt;
&lt;span class="na"&gt;zend_extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\extphp_xdebug.dll&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.auto_trace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.collect_params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.collect_return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_append&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_enable_trigger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_output_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cachegrind.out.%t-%s&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dbgp&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;9000&lt;/span&gt;
&lt;span class="na"&gt;xdebug.trace_output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，重新启动apache即可。访问phpinfo();页面检查是否有xdebug，如果有，表示安装成功。&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;集成开发环境&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;的集成开发环境比较多: 如Zend Studio，Eclipse + &lt;span class="caps"&gt;PDT&lt;/span&gt;， Eclipse + PHPEclipse等。这些环境经过简单的配置之后都支持远程调试，还有一些浏览器的工具，如FireFox浏览器的&amp;#8221;FireBug +&amp;nbsp;FirePHP&amp;#8221;插件，这些资料比较多，就不在这里重复了。&lt;/p&gt;</summary><category term="php"></category><category term="wamp"></category></entry><entry><title>OpenGrok安装使用指南</title><link href="http://blog.wiseturtles.com/posts/setup-opengrok.html" rel="alternate"></link><published>2012-12-14T18:09:00+08:00</published><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2012-12-14:posts/setup-opengrok.html</id><summary type="html">&lt;p&gt;本文主要参考了下面的文章:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hub.opensolaris.org/bin/view/Project+opengrok/installdescription"&gt;http://hub.opensolaris.org/bin/view/Project+opengrok/installdescription&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://src.opensolaris.org/source/xref/opengrok/trunk/README.txt"&gt;http://src.opensolaris.org/source/xref/opengrok/trunk/&lt;span class="caps"&gt;README&lt;/span&gt;.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：最好是单独建立一个用户，并保证该用户对代码和后面创建索引的目录读写权限&lt;/p&gt;
&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;p&gt;以opengrok用户身份登录安装jdk和Exuberant&amp;nbsp;Ctags.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install sun-java6-jdk ctags
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;获取opengrok安装包（opengrok-0.11.1.tar.gz）和tomcat安装包(apachetomcat-7.0.6.tar.gz)解压安装包到任意目录下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/local/
$ tar -zxvf /path/to/opengrok-0.11.1.tar.gz
$ tar -zxvf /path/to/apachetomcat-7.0.6.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下载需要使用的代码到一个目录下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p ~/opengrok/projects/project1
$ mkdir -p ~/opnegrok/projects/project2
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/opengrok/projects/project1
$ download code of project1 &lt;span class="o"&gt;(&lt;/span&gt;such as: git clone ... or repo init ... &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; repo sync&lt;span class="o"&gt;)&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/opengrok/projects/project2
$ download code of project2 &lt;span class="o"&gt;(&lt;/span&gt;such as: git clone ... or repo init ... &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; repo sync&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;目录结构如下:&lt;/p&gt;
&lt;pre&gt;
opengrok/projects----project1
            |----project2
            |----project3
            |----.......
&lt;/pre&gt;

&lt;p&gt;启动tomcat，确认tomcat没有问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /var/local/apache-tomcat-7.0.6/bin/startup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;访问&lt;a href="http://127.0.0.1:8080"&gt;http://127.0.0.1:8080&lt;/a&gt;检查tomcat&amp;nbsp;是否正常工作&lt;/p&gt;
&lt;h2&gt;部署OpenGrok&lt;/h2&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="nv"&gt;OPENGROK_TOMCAT_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/local/apache-tomcat-7.0.6 /var/local/opengrok-0.11.1/bin/OpenGrok deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这一步实际操作是&lt;code&gt;/var/local/opengrok-0.11.1/lib/source.war&lt;/code&gt;部署到&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/&lt;/code&gt;
访问
&lt;a href="http://127.0.0.1:8080/source"&gt;http://127.0.0.1:8080/source&lt;/a&gt;
已经可以看到opengrok页面了，但是没有项目的数据信息。
在&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/&lt;/code&gt;目录下面可以看到一个source目录和source.war，就是刚刚部属的产物。&amp;nbsp;source.war已经没有什么用了，可以删除。&lt;/p&gt;
&lt;h3&gt;创建索引&lt;/h3&gt;
&lt;p&gt;创建索引时，会创建三个目录，一个data目录来存放索引信息，一个etc目录创建配置信息和一个log目录。
 如想让~/opengrok/来存放索引,则指定&lt;code&gt;OPENGROK_INSTANCE_BASE=~/opengrok&lt;/code&gt;, 则指定&lt;code&gt;OPENGROK_INSTANCE_BASE=~/opengrok&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这一步命令的执行时间视~/opengrok/projects/的代码数量决定。 最后会在~/opengrok 目录下面看到data,etc,log&amp;nbsp;三个目录&lt;/p&gt;
&lt;p&gt;访问&lt;a href="http://127.0.0.1:8080/source"&gt;http://127.0.0.1:8080/source&lt;/a&gt;,enjoy&amp;nbsp;it!&lt;/p&gt;
&lt;h3&gt;项目代码更新或者添加新的项目&lt;/h3&gt;
&lt;p&gt;首先更新项目代码或者下载新的项目到~/opengrok/projects目录下面。&amp;nbsp;然后重新执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;命令即可。&lt;/p&gt;
&lt;h3&gt;可选操作&lt;/h3&gt;
&lt;p&gt;可以通过修改&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/source/index_body.html&lt;/code&gt;来定制化你的OpenGrok首页。
如添加公司&lt;span class="caps"&gt;LOGO&lt;/span&gt;或一些有用的帮助信息。&lt;/p&gt;
&lt;h3&gt;直接调用命令行接口&lt;/h3&gt;
&lt;p&gt;上面创建索引的命令其实&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实调用的是opengrok&amp;nbsp;lib目录下的jar包：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;java -Xmx2048m -Dorg.opensolaris.opengrok.history.cvs=/usr/bin/cvs
-Dorg.opensolaris.opengrok.history.git=/usr/bin/git
-Djava.util.logging.config.file=/data/opengrok/opengrok_data/logging.properties
-jar /data/opengrok/opengrok-0.11.1/bin/../lib/opengrok.jar
-P -S -r on -v -c /usr/bin/ctags-exuberant -a on
-W /data/opengrok/opengrok_data/etc/configuration.xml
-U localhost:2424 -s /data/opengrok/projects/
-d /data/opengrok/opengrok_data/data -H..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面各个参数的意思如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ java -jar opengrok.jar

Usage: opengrok.jar &lt;span class="o"&gt;[&lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt;
-?
    Help

-A ext:analyzer
    Files with the named extension should be analyzed with the specified class

-a on/off
    Allow or disallow leading wildcards in a search

-B url
    Base URL of the user Information provider. Default: &lt;span class="s2"&gt;&amp;quot;http://www.opensolaris.org/viewProfile.jspa?username=&amp;quot;&lt;/span&gt;

-C
    Print per project percentage progress information&lt;span class="o"&gt;(&lt;/span&gt;I/O extensive, since one &lt;span class="nb"&gt;read&lt;/span&gt; through dir structure is made before indexing, needs -v, otherwise it just goes to the log&lt;span class="o"&gt;)&lt;/span&gt;

-c /path/to/ctags
    Path to Exuberant Ctags from http://ctags.sf.net by default takes the Exuberant Ctags in PATH.

-D
    Store &lt;span class="nb"&gt;history&lt;/span&gt; cache in a database &lt;span class="o"&gt;(&lt;/span&gt;needs the JDBC driver in the classpath, typically derbyclient.jar or derby.jar&lt;span class="o"&gt;)&lt;/span&gt;

-d /path/to/data/root
    The directory where OpenGrok stores the generated data

-e
    Economical - consumes less disk space. It does not generate hyper text cross reference files offline, but will &lt;span class="k"&gt;do&lt;/span&gt; so on demand - which could be sightly slow.

-H
    Generate &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; all repositories

-h /path/to/repository
    just generate &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; the specified repos &lt;span class="o"&gt;(&lt;/span&gt;absolute path from &lt;span class="nb"&gt;source&lt;/span&gt; root&lt;span class="o"&gt;)&lt;/span&gt;

-I pattern
    Only files matching this pattern will be examined &lt;span class="o"&gt;(&lt;/span&gt;supports wildcards, example: -I *.java -I *.c&lt;span class="o"&gt;)&lt;/span&gt;

-i pattern
    Ignore the named files or directories &lt;span class="o"&gt;(&lt;/span&gt;supports wildcards, example: -i *.so -i *.dll&lt;span class="o"&gt;)&lt;/span&gt;

-j class
    Name of the JDBC driver class used by the &lt;span class="nb"&gt;history&lt;/span&gt; cache. Can use one of the shorthands &lt;span class="s2"&gt;&amp;quot;client&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;org.apache.derby.jdbc.ClientDriver&lt;span class="o"&gt;)&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;embedded&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;org.apache.derby.jdbc.EmbeddedDriver&lt;span class="o"&gt;)&lt;/span&gt;. Default: &lt;span class="s2"&gt;&amp;quot;client&amp;quot;&lt;/span&gt;

-k /path/to/repository
    Kill the &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; the given repository and exit. Use &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; to delete the cache &lt;span class="k"&gt;for&lt;/span&gt; all repositories.

-K
    List all repository pathes and exit.

-L path
    Path to the subdirectory in the web-application containing the requested stylesheet. The following factory-defaults exist: &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;offwhite&amp;quot;&lt;/span&gt; and &lt;span class="s2"&gt;&amp;quot;polished&amp;quot;&lt;/span&gt;

-l on/off
    Turn on/off locking of the Lucene database during index generation

-m number
    The maximum words to index in a file

-N /path/to/symlink
    Allow this symlink to be followed. Option may be repeated.

-n
    Do not generate indexes, but process all other &lt;span class="nb"&gt;command&lt;/span&gt; line options

-O on/off
    Turn on/off the optimization of the index database as part of the indexing step

-P
    Generate a project &lt;span class="k"&gt;for&lt;/span&gt; each of the top-level directories in &lt;span class="nb"&gt;source&lt;/span&gt; root

-p /path/to/default/project
    This is the path to the project that should be selected by default in the web application&lt;span class="o"&gt;(&lt;/span&gt;when no other project &lt;span class="nb"&gt;set&lt;/span&gt; either in cookie or in parameter&lt;span class="o"&gt;)&lt;/span&gt;. You should strip off the &lt;span class="nb"&gt;source&lt;/span&gt; root.

-Q on/off
    Turn on/off quick context scan. By default only the first 32k of a file is scanned, and a &lt;span class="s1"&gt;&amp;#39;[..all..]&amp;#39;&lt;/span&gt; link is inserted &lt;span class="k"&gt;if&lt;/span&gt; the file is bigger. Activating this may slow the server down &lt;span class="o"&gt;(&lt;/span&gt;Note: this is setting only affects the web application&lt;span class="o"&gt;)&lt;/span&gt;

-q
    Run as quietly as possible

-R /path/to/configuration
    Read configuration from the specified file

-r on/off
    Turn on/off support &lt;span class="k"&gt;for&lt;/span&gt; remote SCM systems

-S
    Search &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;external&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; repositories and add them

-s /path/to/source/root
    The root directory of the &lt;span class="nb"&gt;source&lt;/span&gt; tree

-T number
    The number of threads to use &lt;span class="k"&gt;for&lt;/span&gt; index generation. By default the number of threads will be &lt;span class="nb"&gt;set&lt;/span&gt; to the number of available CPUs

-t number
    Default tabsize to use &lt;span class="o"&gt;(&lt;/span&gt;number of spaces per tab character&lt;span class="o"&gt;)&lt;/span&gt;

-U host:port
    Send the current configuration to the specified address &lt;span class="o"&gt;(&lt;/span&gt;This is most likely the web-app configured with ConfigAddress&lt;span class="o"&gt;)&lt;/span&gt;

-u url
    URL to the database that contains the &lt;span class="nb"&gt;history&lt;/span&gt; cache. Default: If -j specifies &lt;span class="s2"&gt;&amp;quot;embedded&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;jdbc:derby:&lt;/span&gt;&lt;span class="nv"&gt;$DATA_ROOT&lt;/span&gt;&lt;span class="s2"&gt;/cachedb;create=true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; otherwise, &lt;span class="s2"&gt;&amp;quot;jdbc:derby://localhost/cachedb;create=true&amp;quot;&lt;/span&gt;

-V
    Print version and quit

-v
    Print progress information as we go along

-W /path/to/configuration
    Write the current configuration to the specified file &lt;span class="o"&gt;(&lt;/span&gt;so that the web application can use the same configuration

-w webapp-context
    Context of webapp. Default is /source. If you specify a different name, make sure to rename source.war to that name.

-X url:suffix
    URL Suffix &lt;span class="k"&gt;for&lt;/span&gt; the user Information provider. Default: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

-z number
    depth of scanning &lt;span class="k"&gt;for&lt;/span&gt; repositories in directory structure relative to &lt;span class="nb"&gt;source&lt;/span&gt; root
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;:默认情况下，调用OpenGork脚本是会生成项目的历史记录的，如果不想生成脚本的历史记录, 可以修改
OpenGrok脚本的&lt;code&gt;UpdateGeneratedData&lt;/code&gt; 方法，去掉&lt;code&gt;StdInvocation -H&lt;/code&gt;的&lt;code&gt;-H&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</summary><category term="opengrok"></category></entry></feed>