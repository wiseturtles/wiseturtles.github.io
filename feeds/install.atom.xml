<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wise Turtles - install</title><link href="http://blog.wiseturtles.com/" rel="alternate"></link><link href="http://blog.wiseturtles.com/feeds/install.atom.xml" rel="self"></link><id>http://blog.wiseturtles.com/</id><updated>2015-02-09T23:49:00+08:00</updated><entry><title>CentOS上安装Supervisor</title><link href="http://blog.wiseturtles.com/posts/centos-supervisor.html" rel="alternate"></link><published>2015-02-09T23:49:00+08:00</published><updated>2015-02-09T23:49:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-09:/posts/centos-supervisor.html</id><summary type="html">&lt;p&gt;CentOS上安装Supervisor&lt;/p&gt;</summary><content type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;部署项目从Ubuntu转战到CentOS,&amp;nbsp;使用yum命令安装supervisor后，发现无法正常使用，因此只有使用pip安装.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install supervisor
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置supervisor&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;添加配置文件&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir /etc/supervisor
$ sudo mkdir /etc/supervisor/conf.d
&lt;span class="c1"&gt;# 添加如下配置文件&lt;/span&gt;
$ cat /etc/supervisor/supervisord.conf
&lt;span class="o"&gt;[&lt;/span&gt;unix_http_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/tmp/supervisor.sock    &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;the path to the socket file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;chmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;                       &lt;span class="p"&gt;;&lt;/span&gt; sockef file mode &lt;span class="o"&gt;(&lt;/span&gt;default 0700&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; the below section must remain in the config file &lt;span class="k"&gt;for&lt;/span&gt; RPC
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisorctl/web interface&lt;span class="o"&gt;)&lt;/span&gt; to work, additional interfaces may be
&lt;span class="p"&gt;;&lt;/span&gt; added by defining them in separate rpcinterface: sections
&lt;span class="o"&gt;[&lt;/span&gt;rpcinterface:supervisor&lt;span class="o"&gt;]&lt;/span&gt;
supervisor.rpcinterface_factory &lt;span class="o"&gt;=&lt;/span&gt; supervisor.rpcinterface:make_main_rpcinterface

&lt;span class="o"&gt;[&lt;/span&gt;supervisord&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisor.sock &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default is to run a UNIX domain socket server&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:9001  &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;alternately, ip_address:port specifies AF_INET&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socketmode &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignore, default 0700&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nobody.nogroup     &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socket uid.gid owner &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignores&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;umask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;022&lt;/span&gt;                   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;process file creation umask&lt;span class="p"&gt;;&lt;/span&gt;default 022&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/supervisord.log &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;main log file&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nv"&gt;$CWD&lt;/span&gt;/supervisord.log&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50MB       &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;max main logfile bytes b4 rotation&lt;span class="p"&gt;;&lt;/span&gt;default 50MB&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;num of main logfile rotation backups&lt;span class="p"&gt;;&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;loglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;logging level&lt;span class="p"&gt;;&lt;/span&gt;default info&lt;span class="p"&gt;;&lt;/span&gt; others: debug,warn&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisord.pid &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisord pidfile&lt;span class="p"&gt;;&lt;/span&gt;default supervisord.pid&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;nodaemon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;start in foreground &lt;span class="k"&gt;if&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minfds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;                 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail startup file descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 1024&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minprocs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;                &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail process descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 200&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;childlogdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt; child log dir, default &lt;span class="nv"&gt;$TEMP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;nocleanup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;don&lt;span class="s1"&gt;&amp;#39;t clean up tempfiles at start;default false)&lt;/span&gt;
&lt;span class="s1"&gt;;http_username=user          ; (default is no username (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;http_password=123           ; (default is no password (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;user=chrism                 ; (default is current user, required if root)&lt;/span&gt;
&lt;span class="s1"&gt;;directory=/tmp              ; (default is not to cd during start)&lt;/span&gt;
&lt;span class="s1"&gt;;environment=KEY=value       ; (key value pairs to add to environment)&lt;/span&gt;

&lt;span class="s1"&gt;[supervisorctl]&lt;/span&gt;
&lt;span class="s1"&gt;serverurl=unix:///var/tmp/supervisor.sock ; use a unix:// URL  for a unix socket&lt;/span&gt;
&lt;span class="s1"&gt;;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket&lt;/span&gt;
&lt;span class="s1"&gt;;username=chris              ; should be same as http_username if set&lt;/span&gt;
&lt;span class="s1"&gt;;password=123                ; should be same as http_password if set&lt;/span&gt;
&lt;span class="s1"&gt;;prompt=mysupervisor         ; cmd line prompt (default &amp;quot;supervisor&amp;quot;)&lt;/span&gt;

&lt;span class="s1"&gt;; The below sample program section shows all possible program subsection values,&lt;/span&gt;
&lt;span class="s1"&gt;; create one or more &amp;#39;&lt;/span&gt;real&lt;span class="s1"&gt;&amp;#39; program: sections to be able to control them under&lt;/span&gt;
&lt;span class="s1"&gt;; supervisor.&lt;/span&gt;

&lt;span class="s1"&gt;;[program:theprogramname]&lt;/span&gt;
&lt;span class="s1"&gt;;command=/bin/cat            ; the program (relative uses PATH, can take args)&lt;/span&gt;
&lt;span class="s1"&gt;;priority=999                ; the relative start priority (default 999)&lt;/span&gt;
&lt;span class="s1"&gt;;autostart=true              ; start at supervisord start (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;autorestart=true            ; retstart at unexpected quit (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;startsecs=10                ; number of secs prog must stay running (def. 10)&lt;/span&gt;
&lt;span class="s1"&gt;;startretries=3              ; max # of serial start failures (default 3)&lt;/span&gt;
&lt;span class="s1"&gt;;exitcodes=0,2               ; &amp;#39;&lt;/span&gt;expected&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; codes &lt;span class="k"&gt;for&lt;/span&gt; process &lt;span class="o"&gt;(&lt;/span&gt;default 0,2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopsignal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;QUIT             &lt;span class="p"&gt;;&lt;/span&gt; signal used to &lt;span class="nb"&gt;kill&lt;/span&gt; process &lt;span class="o"&gt;(&lt;/span&gt;default TERM&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopwaitsecs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; max num secs to &lt;span class="nb"&gt;wait&lt;/span&gt; before SIGKILL &lt;span class="o"&gt;(&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;chrism                 &lt;span class="p"&gt;;&lt;/span&gt; setuid to this UNIX account to run the program
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; true, log program stdout &lt;span class="o"&gt;(&lt;/span&gt;default &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; true, log program stderr &lt;span class="o"&gt;(&lt;/span&gt;def &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/log/cat.log    &lt;span class="p"&gt;;&lt;/span&gt; child log path, use NONE &lt;span class="k"&gt;for&lt;/span&gt; none&lt;span class="p"&gt;;&lt;/span&gt; default AUTO
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1MB        &lt;span class="p"&gt;;&lt;/span&gt; max &lt;span class="c1"&gt;# logfile bytes b4 rotation (default 50MB)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# of logfile backups (default 10)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;include&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/supervisor/conf.d/*.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;项目的配置文件写入&amp;nbsp;/etc/supervisor/conf.d/目录即可&lt;/p&gt;
&lt;h2&gt;添加开机启动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 添加如下配置文件&lt;/span&gt;
$ cat /etc/init.d/supervisord

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# /etc/rc.d/init.d/supervisord&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Supervisor is a client/server system that&lt;/span&gt;
&lt;span class="c1"&gt;# allows its users to monitor and control a&lt;/span&gt;
&lt;span class="c1"&gt;# number of processes on UNIX-like operating&lt;/span&gt;
&lt;span class="c1"&gt;# systems.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# chkconfig: - 64 36&lt;/span&gt;
&lt;span class="c1"&gt;# description: Supervisor Server&lt;/span&gt;
&lt;span class="c1"&gt;# processname: supervisord&lt;/span&gt;

&lt;span class="c1"&gt;# Source init functions&lt;/span&gt;
. /etc/rc.d/init.d/functions

&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;supervisord&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;prog_bin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/bin/supervisord&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/run/&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;.pid&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-c /etc/supervisor/supervisord.conf &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

start&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    daemon &lt;span class="nv"&gt;$prog_bin&lt;/span&gt; &lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt; --pidfile &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; success $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; startup&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; failure $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; startup&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Shutting down &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; killproc &lt;span class="nv"&gt;$prog&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; success $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt; shutdown&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in

start&lt;span class="o"&gt;)&lt;/span&gt;
start
&lt;span class="p"&gt;;;&lt;/span&gt;

stop&lt;span class="o"&gt;)&lt;/span&gt;
stop
&lt;span class="p"&gt;;;&lt;/span&gt;

status&lt;span class="o"&gt;)&lt;/span&gt;
    status &lt;span class="nv"&gt;$prog&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

restart&lt;span class="o"&gt;)&lt;/span&gt;
stop
start
&lt;span class="p"&gt;;;&lt;/span&gt;

*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|status}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;设置如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chmod +x /etc/init.d/supervisord
$ sudo chkconfig --add supervisord
$ sudo chkconfig supervisord on
$ sudo service supervisord start
&lt;/pre&gt;&lt;/div&gt;</content><category term="centos"></category><category term="supervisor"></category></entry><entry><title>OpenResty</title><link href="http://blog.wiseturtles.com/posts/openresty-install.html" rel="alternate"></link><published>2015-02-06T15:45:00+08:00</published><updated>2015-02-06T15:45:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-06:/posts/openresty-install.html</id><summary type="html">&lt;p&gt;OpenResty安装及常用配置&lt;/p&gt;</summary><content type="html">&lt;h2&gt;什么是OpenResty&lt;/h2&gt;
&lt;p&gt;OpenResty（也称为 ngx_openresty）是一个全功能的 Web 应用服务器，它打包了标准
的Nginx 核心，很多的常用的第三方模块，以及它们的大多数依赖项。对于经常需要使用&amp;nbsp;nginx第三方模块的人来说，是一个非常不错的选择.&lt;/p&gt;
&lt;h2&gt;下载及安装&lt;/h2&gt;
&lt;p&gt;关于如何下载及安装OpenResty, &lt;a href="http://openresty.org/cn/"&gt;官网&lt;/a&gt;已经有很详细的介&amp;nbsp;绍，不再赘述。&lt;/p&gt;
&lt;h2&gt;添加开机启动脚本&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建如下文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/init.d/nginx

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# chkconfig: 2345 55 25&lt;/span&gt;
&lt;span class="c1"&gt;# Description: Nginx init.d script, put in /etc/init.d, chmod +x /etc/init.d/nginx&lt;/span&gt;
&lt;span class="c1"&gt;#              For Debian, run: update-rc.d -f nginx defaults&lt;/span&gt;
&lt;span class="c1"&gt;#              For CentOS, run: chkconfig --add nginx&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;# Provides:          nginx&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Stop:     $all&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c1"&gt;# Short-Description: nginx init.d script&lt;/span&gt;
&lt;span class="c1"&gt;# Description:       OpenResty (aka. ngx_openresty) is a full-fledged web application server by bundling the standard Nginx core,&lt;/span&gt;
&lt;span class="c1"&gt;#                    lots of 3rd-party Nginx modules, as well as most of their external dependencies.&lt;/span&gt;
&lt;span class="c1"&gt;### END INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nginx Daemon&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nginx
&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/openresty/nginx
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/sbin/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/conf/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.conf
&lt;span class="nv"&gt;PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/logs/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.pid
&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/init.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -x &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt; has no permission to run. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m Or &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
    sleep 1
    &lt;span class="nb"&gt;exit&lt;/span&gt; 1
&lt;span class="k"&gt;fi&lt;/span&gt;

do_start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; already exists. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; is already running or crashed. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reopening &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reopen -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reopened. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Stopping &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s stop -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; stopped. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reloading &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reload -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reloaded. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_quit&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Quitting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s quit -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; quitted. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_test&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Testing &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -t -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_info&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -V
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
start&lt;span class="o"&gt;)&lt;/span&gt;
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
&lt;span class="p"&gt;;;&lt;/span&gt;
reload&lt;span class="o"&gt;)&lt;/span&gt;
do_reload
&lt;span class="p"&gt;;;&lt;/span&gt;
restart&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
quit&lt;span class="o"&gt;)&lt;/span&gt;
do_quit
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
do_test
&lt;span class="p"&gt;;;&lt;/span&gt;
info&lt;span class="o"&gt;)&lt;/span&gt;
do_info
&lt;span class="p"&gt;;;&lt;/span&gt;
*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$SCRIPT&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|reload|restart|quit|test|info}&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; 2
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给文件设置执行权限&lt;code&gt;chmod +x /etc/init.d/nginx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加到开机启动&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CentOS系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chkconfig --list nginx   &lt;span class="c1"&gt;# 列出系统nginx服务启动情况&lt;/span&gt;
chkconfig --add nginx    &lt;span class="c1"&gt;# 添加nginx服务&lt;/span&gt;
chkconfig --level &lt;span class="m"&gt;35&lt;/span&gt; nginx on &lt;span class="c1"&gt;# 设定nginx在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debian系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo update-rc.d -f nginx remove  &lt;span class="c1"&gt;# 删除nginx服务&lt;/span&gt;
sudo update-rc.d apache2 defaults &lt;span class="c1"&gt;# 添加nginx服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;使用logrotate切割日志&lt;/h2&gt;
&lt;p&gt;创建如下文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/logrotate.d/nginx
/etc/openresty/nginx/logs/*.log &lt;span class="o"&gt;{&lt;/span&gt;
    daily
    missingok
    rotate 52
    dateext
    dateformat  -%Y-%m-%d
    compress
    delaycompress
    notifempty
    create &lt;span class="m"&gt;0640&lt;/span&gt; www-data adm
    sharedscripts
    postrotate
        &lt;span class="o"&gt;[&lt;/span&gt; ! -f /etc/openresty/nginx/logs/nginx.pid &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -USR1 &lt;span class="sb"&gt;`&lt;/span&gt;cat /etc/openresty/nginx/logs/nginx.pid&lt;span class="sb"&gt;`&lt;/span&gt;
    endscript
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/openresty/nginx/logs/*.log&lt;/code&gt; 为OpenResty的log目录&lt;/li&gt;
&lt;li&gt;daily：每天轮询&lt;/li&gt;
&lt;li&gt;missingok:&amp;nbsp;如果日志丢失，不报错继续滚动下一个日志&lt;/li&gt;
&lt;li&gt;rotate&amp;nbsp;52：保留最多52次滚动的日志&lt;/li&gt;
&lt;li&gt;dateext：日期扩展&lt;/li&gt;
&lt;li&gt;dateformat:&amp;nbsp;日期格式&lt;/li&gt;
&lt;li&gt;compress：旧日志默认用gzip压缩&lt;/li&gt;
&lt;li&gt;notifempty:当日志为空时不进行滚动&lt;/li&gt;
&lt;li&gt;create: mode owner group&amp;nbsp;转储文件，使用指定的文件模式创建新的日志文件&lt;/li&gt;
&lt;li&gt;/etc/openresty/nginx/logs/nginx.pid：nginx主进程pid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ logroate -f /etc/logrotate.d/nginx
&lt;/pre&gt;&lt;/div&gt;</content><category term="nginx"></category><category term="openresty"></category></entry><entry><title>Gerrit搭建指南</title><link href="http://blog.wiseturtles.com/posts/gerrit.html" rel="alternate"></link><published>2015-01-15T17:09:00+08:00</published><updated>2015-01-15T17:09:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-15:/posts/gerrit.html</id><summary type="html">&lt;p&gt;install guide of&amp;nbsp;gerrit&lt;/p&gt;</summary><content type="html">&lt;h2&gt;什么是Gerrit&lt;/h2&gt;
&lt;p&gt;Gerrit，一种免费、开放源代码的代码审查软件，使用网页界面。利用网页浏览器，同一个团队的软件程序员，可以相互审阅彼此修改后的程序代码，决定是否能够提交，退回或者继续修改。它使用Git作为底层版本控制系统。&lt;/p&gt;
&lt;p&gt;本文以Ubuntu&amp;nbsp;12.04，Gerrit2.9.4(目前最新的版本)为例介绍整个搭建过程&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;环境要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;JDK&lt;/span&gt;&amp;nbsp;1.7+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;前期准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;span class="caps"&gt;JDK1&lt;/span&gt;.7&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt-get update
$ sudo apt-get install oracle-java7-installer
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install git
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Nginx服务器, 用于作为Gerrit网站的反向代理以及&lt;span class="caps"&gt;HTTP&lt;/span&gt;认证&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;数据库设置&lt;/h2&gt;
&lt;p&gt;Gerrit的使用必须依赖于数据库，目前支持的数据库有H2(Gerrit内置的), PostgreSQL, MySQL,&amp;nbsp;Oracle.&lt;/p&gt;
&lt;p&gt;本文以MySQL为例，介绍数据库的设置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 安装数据库&lt;/span&gt;
$ sudo apt-get install mysql-server

&lt;span class="c1"&gt;# 创建数据库reviewdb和用户gerrit2为后面做准备&lt;/span&gt;
&lt;span class="c1"&gt;# 数据库名和用户名可以根据实际的使用情况自己选择&lt;/span&gt;
mysql&amp;gt; CREATE USER &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; CREATE DATABASE reviewdb&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; GRANT ALL ON reviewdb.* TO &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; FLUSH PRIVILEGES&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;初始化Gerrit站点&lt;/h2&gt;
&lt;p&gt;由于Gerrit创建中需要保存自己的&lt;span class="caps"&gt;SSH&lt;/span&gt; Keys,&amp;nbsp;配置文件，代码库等信息，因此强烈建议单独创建一个用户来创建Gerrit站点。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 在系统上添加用户gerrit2&lt;/span&gt;
$ sudo adduser gerrit2
&lt;span class="c1"&gt;# 切换到当前用户&lt;/span&gt;
$ sudo su gerrit2
&lt;span class="c1"&gt;# 下载gerrit安装包&lt;/span&gt;
$ wget http://gerrit-releases.storage.googleapis.com/gerrit-2.9.4.war
&lt;span class="c1"&gt;# -d 指定站点的根目录, 本例以gerrit2 HOME目录下的gerrit为例&lt;/span&gt;
$ java -jar gerrit-2.9.4.war init -d gerrit

*** Gerrit Code Review 2.9.4
***

Create &lt;span class="s1"&gt;&amp;#39;/home/gerrit2/gerrit&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?

*** Git Repositories
***
&lt;span class="c1"&gt;# 项目代码目录设置&lt;/span&gt;
Location of Git repositories   &lt;span class="o"&gt;[&lt;/span&gt;git&lt;span class="o"&gt;]&lt;/span&gt;:

*** SQL Database
***

Database server &lt;span class="nb"&gt;type&lt;/span&gt;           &lt;span class="o"&gt;[&lt;/span&gt;h2&lt;span class="o"&gt;]&lt;/span&gt;: mysql

Gerrit Code Review is not shipped with MySQL Connector/J 5.1.21
**  This library is required &lt;span class="k"&gt;for&lt;/span&gt; your configuration. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://repo2.maven.org/maven2/mysql/mysql-connector-java/5.1.21/mysql-connector-java-5.1.21.jar ... OK
Checksum mysql-connector-java-5.1.21.jar OK
Server hostname                &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:           &lt;span class="c1"&gt;# 此处填写刚刚创建数据库时设置的信息&lt;/span&gt;
Server port                    &lt;span class="o"&gt;[(&lt;/span&gt;mysql default&lt;span class="o"&gt;)]&lt;/span&gt;:
Database name                  &lt;span class="o"&gt;[&lt;/span&gt;reviewdb&lt;span class="o"&gt;]&lt;/span&gt;:
Database username              &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
gerrit2&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password             :
            confirm password :

*** Index
***

Type                           &lt;span class="o"&gt;[&lt;/span&gt;LUCENE/?&lt;span class="o"&gt;]&lt;/span&gt;:

*** User Authentication
***

&lt;span class="c1"&gt;# 认证方式设置, 根据实际情况自行选择，不清楚有哪些方式可以输入&amp;quot;?&amp;quot;查看&lt;/span&gt;
Authentication method          &lt;span class="o"&gt;[&lt;/span&gt;OPENID/?&lt;span class="o"&gt;]&lt;/span&gt;: http
Get username from custom HTTP header &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
SSO &lt;span class="nb"&gt;logout&lt;/span&gt; URL                 :

*** Review Labels
***

Install Verified label         &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

*** Email Delivery
***

&lt;span class="c1"&gt;# 邮件服务器设置, 根据实际情况自行选择&lt;/span&gt;
SMTP server hostname           &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP server port               &lt;span class="o"&gt;[(&lt;/span&gt;default&lt;span class="o"&gt;)]&lt;/span&gt;:
SMTP encryption                &lt;span class="o"&gt;[&lt;/span&gt;NONE/?&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP username                  :

*** Container Process
***

Run as                         &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
Java runtime                   &lt;span class="o"&gt;[&lt;/span&gt;/usr/lib/jvm/java-7-oracle/jre&lt;span class="o"&gt;]&lt;/span&gt;:
Copy gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Copying gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war

*** SSH Daemon
***

Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;29418&lt;span class="o"&gt;]&lt;/span&gt;:

Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v149
If available, Gerrit can take advantage of features
in the library, but will also &lt;span class="k"&gt;function&lt;/span&gt; without it.
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcpkix-jdk15on-149.jar ... OK
Checksum bcpkix-jdk15on-149.jar OK

Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v149
** This library is required by Bouncy Castle Crypto SSL v149. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcprov-jdk15on-149.jar ... OK
Checksum bcprov-jdk15on-149.jar OK
Generating SSH host key ... rsa... dsa... &lt;span class="k"&gt;done&lt;/span&gt;

*** HTTP Daemon
***

&lt;span class="c1"&gt;# 启用反向代理&lt;/span&gt;
Behind reverse proxy           &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;? y
Proxy uses SSL &lt;span class="o"&gt;(&lt;/span&gt;https://&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Subdirectory on proxy server   &lt;span class="o"&gt;[&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;8081&lt;span class="o"&gt;]&lt;/span&gt;:     &lt;span class="c1"&gt;# 设置gerrit网站监听端口&lt;/span&gt;
Canonical URL                  &lt;span class="o"&gt;[&lt;/span&gt;http://localhost/&lt;span class="o"&gt;]&lt;/span&gt;:

*** Plugins
***

Install plugin commit-message-length-validator version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin download-commands version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin replication version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin reviewnotes version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin singleusergroup version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

Initialized /home/gerrit2/gerrit
Executing /home/gerrit2/gerrit/bin/gerrit.sh start
Starting Gerrit Code Review: OK
Waiting &lt;span class="k"&gt;for&lt;/span&gt; server on localhost:80 ... OK
Opening http://localhost/#/admin/projects/ ...No protocol specified
No protocol specified
OK
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置nginx反向代理&lt;/h2&gt;
&lt;p&gt;在nginx配置中间中配置如下:&lt;/p&gt;
&lt;pre&gt;
      location / {
            proxy_pass        http://localhost:8081;
            proxy_set_header  X-Forwarded-For $remote_addr;
            proxy_set_header  Host $host;
            auth_basic "Restricted";  # 配置访问限制和密码文件
            auth_basic_user_file  /home/gerrit2/gerrit/etc/auth_passwd;

    }
&lt;/pre&gt;

&lt;p&gt;创建用户密码文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 创建用户名和密码都是admin的文件&lt;/span&gt;
$ htpasswd -b -c /home/gerrit2/gerrit/etc/auth_passwd admin admin
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;访问&lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;输入用户名和密码即可登陆到Gerrit&lt;/p&gt;
&lt;h2&gt;Gerrit目录结构&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tree -L &lt;span class="m"&gt;1&lt;/span&gt; gerrit
gerrit
├── bin
├── cache
├── data
├── etc  &lt;span class="c1"&gt;# 配置信息, 创建站点时的配置信息都保存在这里，可以按照需要修改&lt;/span&gt;
├── git
├── index
├── lib
├── logs
├── plugins
├── static
└── tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gerrit/bin/gerrit.sh start  &lt;span class="c1"&gt;# 启动gerrit服务&lt;/span&gt;
$ gerrit/bin/gerrit.sh stop   &lt;span class="c1"&gt;# 关闭gerrit服务&lt;/span&gt;
$ gerrit/bin/gerrit.sh restart &lt;span class="c1"&gt;# 重启gerrit服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;更多信息&lt;/h2&gt;
&lt;p&gt;关于gerrit主题设置，使用方法等更多信息，官方文档上已有详细描述,&amp;nbsp;请参考:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;更新&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;最近因工作需要，又重新搭建了一次gerrit, 遇到一些坑, 记录一下&lt;/em&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果用MySQL作为数据库，Gerrit数据库的引擎应该是Innodb.&lt;/li&gt;
&lt;li&gt;配置邮件时，一直认证失败，除了在&lt;code&gt;etc/gerrt.conf&lt;/code&gt;文件里指定&lt;code&gt;sendmail.smtpUser&lt;/code&gt;, 还需要指定&lt;code&gt;sendmail.from&lt;/code&gt;为发送邮件的用户信息, 格式为&lt;code&gt;username &amp;lt;youmail@mail.com&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;认证可以使用github oauth认证&lt;a href="https://github.com/davido/gerrit-oauth-provider"&gt;gerrit-oauth-provider&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="git"></category><category term="gerrit"></category></entry><entry><title>Windows下安装Nginx</title><link href="http://blog.wiseturtles.com/posts/install-nginx-on-windows.html" rel="alternate"></link><published>2013-11-26T09:30:00+08:00</published><updated>2013-11-26T09:30:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-26:/posts/install-nginx-on-windows.html</id><summary type="html">&lt;p class="first last"&gt;Install nginx on&amp;nbsp;windows&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本文参考自 &lt;a class="reference external" href="http://nginx.org/cn/docs/windows.html"&gt;windows下安装nginx&lt;/a&gt;&amp;nbsp;.&lt;/p&gt;
&lt;p&gt;nginx的Windows版本使用原生Win32 &lt;span class="caps"&gt;API&lt;/span&gt;（非Cygwin模拟层）。当前nginx/Windows只使用select作为通知方法，所以不要期待它有很高的性能和扩展性。鉴于这点和一些已知问题，nginx/Windows目前还处于beta阶段。nginx/Windows和Unix版本相比，功能几乎已经齐全，除了&lt;span class="caps"&gt;XSLT&lt;/span&gt;过滤器、图像过滤器、GeoIP模块和嵌入Perl语言支持以外。&lt;/p&gt;
&lt;p&gt;安装nginx/Windows，需要下载最新的1.5.7开发版本，因为开发分支上包含了所有已知的问题修复，尤其是针对Windows版本的问题修复。解压缩下载得到的zip文件，进入nginx-1.5.7目录，运行nginx。下面给出一个在C盘根目录下安装的例子：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd c:\
unzip nginx-1.5.7.zip
cd nginx-1.5.7
start nginx
&lt;/pre&gt;
&lt;p&gt;可以在命令行运行tasklist命令来查看nginx进程：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C:\nginx-1.5.7&amp;gt;tasklist /fi &amp;quot;imagename eq nginx.exe&amp;quot;

Image Name           PID Session Name     Session#    Mem Usage
=============== ======== ============== ========== ============
nginx.exe            652 Console                 0      2 780 K
nginx.exe           1332 Console                 0      3 112 K
&lt;/pre&gt;
&lt;p&gt;其中一个是主进程，另一个是工作进程。如果nginx没有启动，请查看logserror.log文件以寻找失败原因。如果日志文件不存在，那失败原因会记录在Windows事件日志中。如果某次请求没有展示预想的页面，而是展示了错误页面，也请查看logserror.log文件。&lt;/p&gt;
&lt;p&gt;nginx/Windows使用工作目录作为前缀将配置文件中设置的相对目录补齐。就上面安装的例子而言，工作目录应该是C:nginx-1.5.7（工作目录基本上与运行文件所在的目录相同）。配置文件中的目录请使用“/”，而不是“”做目录分隔：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
access_log   logs/site.log;
    root         C:/web/html;
    nginx/Windows作为标准控制台应用运行，而不是系统服务。可以用下面的命令控制：

    nginx -s stop   快速退出
    nginx -s quit   优雅退出
    nginx -s reload  更换配置，启动新的工作进程，优雅的关闭以往的工作进程
    nginx -s reopen 重新打开日志文件
&lt;/pre&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;已知问题&lt;/h2&gt;
&lt;p&gt;虽然可以启动若干工作进程运行，实际上只有一个进程在处理请求所有请求。
一个工作进程只能处理不超过1024个并发连接。
缓存和其他需要共享内存支持的模块在Windows&amp;nbsp;Vista及后续版本的操作系统中无法工作，因为在这些操作系统中，地址空间的布局是随机的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;日后可能加强的功能&lt;/h2&gt;
&lt;p&gt;作为系统服务运行。
使用“I/O完成端口”作为事件模型。&amp;nbsp;使用单工作进程多线程的模型。&lt;/p&gt;
&lt;/div&gt;
</content><category term="windows"></category><category term="nginx"></category></entry><entry><title>Ubuntu上手动安装JDK</title><link href="http://blog.wiseturtles.com/posts/install-jdk.html" rel="alternate"></link><published>2013-11-03T19:09:00+08:00</published><updated>2013-11-03T19:09:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-11-03:/posts/install-jdk.html</id><summary type="html">&lt;p class="first last"&gt;install&amp;nbsp;jdk&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Ubuntu上面自己手动安装&lt;span class="caps"&gt;JDK&lt;/span&gt;的方法如下:
首先下载jdk-7u45-linux-i586.tar.gz压缩包，并解压到 &lt;code&gt;/usr/local/lib/jdk1.7.0_45&lt;/code&gt; ,&amp;nbsp;再执行下面的脚本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;JDK_BIN_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/lib/jdk1.7.0_45/bin
&lt;span class="k"&gt;for&lt;/span&gt; x in &lt;span class="k"&gt;$(&lt;/span&gt;find &lt;span class="nv"&gt;$JDK_BIN_PATH&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$x&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    sudo update-alternatives --install /usr/bin/&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; 300
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="ubuntu"></category><category term="jdk"></category></entry><entry><title>WAMP(Windows + Apache + Mysql + PHP) 环境搭建</title><link href="http://blog.wiseturtles.com/posts/setup-wamp.html" rel="alternate"></link><published>2013-09-30T13:44:00+08:00</published><updated>2013-09-30T13:44:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2013-09-30:/posts/setup-wamp.html</id><summary type="html">&lt;p&gt;how to use pelican to setup&amp;nbsp;wamp&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近开始学习&lt;span class="caps"&gt;PHP&lt;/span&gt;，工欲善其事，必先利其器。第一步当然是环境搭建啦！&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;开发基本也就是在不同平台下，要么是&lt;span class="caps"&gt;LAMP&lt;/span&gt;(Linux + Apache + Mysql + &lt;span class="caps"&gt;PHP&lt;/span&gt;)，要么就是&lt;span class="caps"&gt;WAMP&lt;/span&gt;(Windows + Apache + Mysql +&lt;span class="caps"&gt;PHP&lt;/span&gt;),&amp;nbsp;个人感觉在ubuntu环境下搭建环境比较简单，只需要一个命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install -y apache2 mysql-server-5.5 php5 php5-gd php5-mysql php5-xdebug libapache2-mod-php5 phpmyadmin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后通过少许配置， &lt;span class="caps"&gt;LAMP&lt;/span&gt;环境就基本上搭建好了。系统默认帮我们做了很多事情，但是为了学习，我们还是尝试下在windows下搭建吧！虽然在windows下面也有很多&lt;span class="caps"&gt;WAMP&lt;/span&gt;的集成环境，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="caps"&gt;XAMPP&lt;/span&gt; - &lt;span class="caps"&gt;XAMPP&lt;/span&gt;是一款具有中文说明的功能全面的集成环境，&lt;span class="caps"&gt;XAMPP&lt;/span&gt;并不仅仅针对Windows，而是一个适用于Linux、Windows、Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X 和Solaris 的易于安装的Apache 发行版。软件包中包含Apache 服务器、MySQL、SQLite、&lt;span class="caps"&gt;PHP&lt;/span&gt;、Perl、FileZilla &lt;span class="caps"&gt;FTP&lt;/span&gt;&amp;nbsp;Server、Tomcat等等。默认安装开放了所有功能，安全性有问题，需要进行额外的安全设定。&lt;/p&gt;
&lt;p&gt;WampServer - WampServe集成了Apache、MySQL、&lt;span class="caps"&gt;PHP&lt;/span&gt;、phpmyadmin，支持Apache的mod_rewrite，&lt;span class="caps"&gt;PHP&lt;/span&gt;扩展、Apache模块只需要在菜单“开启/关闭”上点点就搞定，省去了修改配置文件的麻烦。&lt;/p&gt;
&lt;p&gt;AppServ - 集成了Apache、&lt;span class="caps"&gt;PHP&lt;/span&gt;、MySQL、phpMyAdmin，较为轻量。&lt;/p&gt;
&lt;p&gt;总的来说，无论从安全性和性能上来讲，&lt;span class="caps"&gt;LAMP&lt;/span&gt;（Linux + Apache + MySQL + &lt;span class="caps"&gt;PHP&lt;/span&gt;）都优于&lt;span class="caps"&gt;WAMP&lt;/span&gt;（Windows + Apache + MySQL + &lt;span class="caps"&gt;PHP&lt;/span&gt;），不过由于Windows具有易用的特点，&lt;span class="caps"&gt;WAMP&lt;/span&gt;也未尝不是初学者的一个不错的选择。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面&lt;span class="caps"&gt;WAMP&lt;/span&gt;集成环境的内容介绍引用自&lt;br&gt;
&lt;a href="http://www.williamlong.info/archives/1281.html"&gt;http://www.williamlong.info/archives/1281.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于集成的开发环境，还不得不提到ZendServer， 这个也是一个相当不错的环境，相比&lt;span class="caps"&gt;XAMPP&lt;/span&gt;更加精简一些。&lt;/p&gt;
&lt;p&gt;如果我们可以自己搭建一次整个开发环境的话，对这个过程将会更加熟悉。废话不多说，下面就让我们开始搭建吧！&lt;/p&gt;
&lt;h2&gt;Apache安装&lt;/h2&gt;
&lt;h3&gt;1.下载安装Apache包&lt;/h3&gt;
&lt;p&gt;根据http://httpd.apache.org/docs/2.4/platform/windows.html中如下一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Apache &lt;span class="caps"&gt;HTTP&lt;/span&gt; Server Project itself does not provide binary releases of software, only source code. If you cannot compile the Apache &lt;span class="caps"&gt;HTTP&lt;/span&gt; Server yourself, you can obtain a binary package from numerous binary &amp;gt;distributions available on the Internet.
Popular options for deploying Apache httpd, and, optionally, &lt;span class="caps"&gt;PHP&lt;/span&gt; and MySQL, on Microsoft Windows,&amp;nbsp;include:&lt;/p&gt;
&lt;p&gt;•&amp;nbsp;ApacheHaus&lt;/p&gt;
&lt;p&gt;•  Apache&amp;nbsp;Lounge&lt;/p&gt;
&lt;p&gt;•&amp;nbsp;WampServer&lt;/p&gt;
&lt;p&gt;•  &lt;span class="caps"&gt;XAMPP&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从上面可以知道，Apache官方并没有提供windows下的二进制安装包，
可以从它推荐的站点下载apache二进制安装包。
在此选择&lt;br&gt;
&lt;a href="https://www.apachelounge.com/download/"&gt;https://www.apachelounge.com/download/&lt;/a&gt; 
网站上的&lt;br&gt;
&lt;a href="https://www.apachelounge.com/download/win32/binaries/httpd-2.4.4-win32.zip"&gt;https://www.apachelounge.com/download/win32/binaries/httpd-2.4.4-win32.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于上面这个安装包是根据Visual Studio C++ 2010 &lt;span class="caps"&gt;SP1&lt;/span&gt; &lt;span class="caps"&gt;VC10&lt;/span&gt;&amp;nbsp;环境下编译的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Be sure that you have installed the Visual C++ 2010 &lt;span class="caps"&gt;SP1&lt;/span&gt; Redistributable Package x86 : &lt;span class="caps"&gt;VC10&lt;/span&gt; &lt;span class="caps"&gt;SP1&lt;/span&gt;&amp;nbsp;vcredist_x86.exe&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此需要额外从&amp;nbsp;http://www.microsoft.com/en-us/download/confirmation.aspx?id=8328  &lt;/p&gt;
&lt;p&gt;下载vcredist_x86.exe（这里根据自己的系统类型选择安装，我的是32位的系统，因此选择这个）&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;安装和修改Apache配置文件&lt;/h3&gt;
&lt;p&gt;首先安装vcredist_x86.exe。再将下载的httpd-2.4.4-win32.zip解压到任意目录下，如：&lt;code&gt;D:\wamp\Apache24&lt;/code&gt;.
修改配置文件&lt;code&gt;D:\wamp\Apache24\conf\httpd.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;由于在&lt;code&gt;httpd.conf&lt;/code&gt;中默认为httpd-2.4.4-win32.zip解压是解压到&lt;code&gt;c:\Apache24&lt;/code&gt;目录下面的。
因此需要将&lt;code&gt;httpd.conf&lt;/code&gt;文件中所有的&lt;code&gt;c:/Apache24&lt;/code&gt;替换成&lt;code&gt;D:/wamp/Apache24&lt;/code&gt;（&lt;strong&gt;注意&lt;/strong&gt;:在&lt;code&gt;httpd.conf&lt;/code&gt;文件中表示文件路径都是用的正斜杠，而不是反斜杠）。跟大部分网上讲的配置方法一样，在&lt;code&gt;httpd.conf&lt;/code&gt; 中有如下几处是需要注意修改的&lt;/p&gt;
&lt;pre&gt;
    ServerRoot "D:/wamp/Apache24"  # apache服务器安装路径
    Listen 80                      # 服务器监听的端口
    ServerName localhost:80        # 服务器的域名，测试环境下一般是localhost
    ServerAdmin lianglin999@gmail.com   # 服务器维护人员的邮箱
    DocumentRoot "D:/wamp/Apache24/htdocs"  # 服务器的根目录
    &amp;lt;Directory "D:/wamp/Apache24/htdocs"&amp;gt;    # 这里和服务器的根目录路径一致
&lt;/pre&gt;

&lt;h3&gt;3.&amp;nbsp;安装和启动Apache服务&lt;/h3&gt;
&lt;p&gt;先将&lt;code&gt;D:\wamp\Apache24\bin\&lt;/code&gt;添加到系统环境变量中。方便后面安装和启动服务。&amp;nbsp;运行cmd窗口，执行如下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;httpd -k install -n service_name            # 安装apache服务 -n 是可选的，表示指定服务名字，不加-n使用默认的服务名字
httpd -k start/stop/restart -n service_name # 运行/停止/重启 apache服务, 同样，如果上面没有使用-n参数，这里也可以省去
httpd -k uninstall -n service_name          # 卸载apache服务
net start/stop service_name                 # 也可以运行/停止 apache服务
httpd -help                                 # 查看更多帮助信息
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装并运行Apache服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;httpd -k install
httpd -k start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有修改配置文件中的默认80端口的话，访问&lt;br&gt;
&lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;
如果修改了端口号为8000，则访问  &lt;br&gt;
&lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后看到It works页面。表示apache服务器安装成功。&amp;nbsp;如果没有，请检查上述步骤是不是有什么错误。&lt;/p&gt;
&lt;h2&gt;Mysql安装&lt;/h2&gt;
&lt;h3&gt;1.&amp;nbsp;下载安装包&lt;/h3&gt;
&lt;p&gt;从&lt;a href="http://dev.mysql.com/downloads/"&gt;http://dev.mysql.com/downloads/&lt;/a&gt;上面，可以获取Mysql的安装包，在Windows下面，Mysql的安装包主要有两种：一种是MySQL Community Server Windows msi安装包， 另一种是自己配置的zip包。&amp;nbsp;msi类型的的安装简单方面，根据需求选择，直接一直“下一步”就可以了。zip包您想的需要自己修改配置文件，在安装包解压路径下，复制my-default.ini到my.ini进行配置，具体配置内容可以网上查询。&lt;/p&gt;
&lt;p&gt;在这里可以查看一篇别人介绍的&lt;a href="http://www.chenyudong.com/archives/installing-mysql-on-microsoft-windows-using-a-noinstall-zip-archive.html"&gt;配置方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实，也可以暂时不管配置什么的，先把Mysql用起来，需要的配置等要用时再来修改也不迟，那样印象更深刻，直接借鉴别人的配置，有些地方也不知道为什么要那么做。&amp;nbsp;所以，我的做法就是不管配置什么的，直接用吧。&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;安装Mysql服务和使用&lt;/h3&gt;
&lt;p&gt;假设我使用的是zip包类型的Mysql，解压在&lt;code&gt;D:\wamp\mysql-5.6.13-win32\&lt;/code&gt;目录下, 先把&lt;code&gt;D:\wamp\mysql-5.6.13-win32\bin&lt;/code&gt;添加到环境变量，方便使用命令行。&lt;/p&gt;
&lt;p&gt;运行&lt;span class="caps"&gt;CMD&lt;/span&gt;窗口，跟安装Apache服务类似，直接运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysqld --install MySQL5.5(service_name)  # Mysql5.5 是service_name，是可选的，不指定的话它会默认使用一个服务名
net start/stop MySQL5.5                  # 启动/停止Mysql服务
mysqld --remove MySQL5.5                 # 移除Mysql服务

# 更改Mysql数据库密码，第一次使用时，密码默认为空
mysql -u root -p                        # 从命令行中进入mysql的客户端
use mysql;                              # 使用mysql这个数据库
update user set password=password(&amp;quot;root_passwd&amp;quot;) where user=&amp;quot;root&amp;quot;;      # 对root密码进行更改
FLUSH PRIVILEGES;                       
# 现在退出，便可以使用root_passwd密码登录了
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多安装细节可以查看&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/windows-installation.html"&gt;Mysql手册&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;为了方便对数据库进行管理，我们可以安装phpmyadmin，一个web版本的Mysql数据库管理工具，具体安装方法网上比较多，也比较简单这里就不在讲解咯。&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;安装&lt;/h2&gt;
&lt;h3&gt;1.&amp;nbsp;下载并配置&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;安装包的版本分线程安全和非线程安全两种，具体两种有什么区别，网上有一大推讲解，本人也不是很了解，但是如果要使用apache服务器的话，只有下载线程安全的版本，非线程安全的版本没有php5apache2_4.dll文件。&lt;/p&gt;
&lt;p&gt;根据&lt;span class="caps"&gt;PHP&lt;/span&gt;安装手册，在安装&lt;span class="caps"&gt;PHP&lt;/span&gt;的时候，需要先进行一些配置。假设我们将安装包解压在&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86&lt;/code&gt;。
首先复制&lt;code&gt;php.ini-development&lt;/code&gt;为&lt;code&gt;php.ini&lt;/code&gt;, 然后修改&lt;code&gt;php.ini&lt;/code&gt;进行如下配置：&lt;/p&gt;
&lt;pre&gt;
# 把;error_log = php_errors.log 修改为
    error_log = D:\wamp\php-5.5.3-Win32-VC11-x86\logs

# ;date.timezone =修改为
    date.timezone = PRC

# 下面这2个,自己决定了
    post_max_size = 100M
# upload_max_filesize通常比post_max_size小
    upload_max_filesize = 50M

# 修改相关路径
# 上传暂存路径,别忘了创建对应的文件夹
    upload_tmp_dir = D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\upload
    session.save_path = D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\session
    extension_dir = D:\wamp\php-5.5.3-Win32-VC11-x86\ext

# 取消常用的扩展前面的分号注释
    extension=php_curl.dll
    extension=php_gd2.dll
    extension=php_mbstring.dll
    extension=php_mysql.dll
    extension=php_mysqli.dll
    extension=php_pdo_mysql.dll
&lt;/pre&gt;

&lt;p&gt;最后再创建相对应的目录&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\logs&lt;/code&gt;,&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\upload&lt;/code&gt;,&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp\session&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后，让apache认识php，修改apache的配置文件&lt;code&gt;D:\wamp\Apache24\conf\httpd.conf&lt;/code&gt;添加下面的内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# php配置 
LoadModule php5_module &amp;quot;E:/wamp_x64/php-5.5.3-Win32-VC11-x64/php5apache2_4.dll&amp;quot;
AddHandler application/x-httpd-php .php

# 配置 php.ini 的路径
PHPIniDir &amp;quot;E:/wamp_x64/php-5.5.3-Win32-VC11-x64

# 同时修改
DirectoryIndex index.html index.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在apache根目录下创建&lt;code&gt;D:/wamp/Apache24/htdocs/phpinfo.php&lt;/code&gt;文件，内容如下:
&lt;pre&gt;
    &amp;lt;?php phpinfo() ?&amp;gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;重启apache服务，访问 http://localhost/phpinfo.php,&amp;nbsp;如果看到php相关信息，表示php安装成功。&lt;/p&gt;
&lt;h2&gt;Xdebug安装&lt;/h2&gt;
&lt;p&gt;Xdebug 是一个&lt;span class="caps"&gt;PHP&lt;/span&gt;开发的调试工具，跟它齐名的另一个叫&lt;code&gt;Zend Debugger&lt;/code&gt;, 也是一个很不错的东西。
安装xdebug，首先需要下载适合版本的xdebug，如果不知道自己应该下载哪个版本的话，可以将你phpinfo();方法得到的页面内容粘贴到&lt;a href="http://xdebug.org/wizard.php"&gt;这里&lt;/a&gt;，它会自动分析出哪个版本的xdebug插件适合你。
将下载下来的dll文件保存到php的安装路径&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\ext&lt;/code&gt;目录下，然后修改&lt;code&gt;D:\wamp\php-5.5.3-Win32-VC11-x86\php.ini&lt;/code&gt;文件，添加如下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[XDebug]&lt;/span&gt;
&lt;span class="na"&gt;zend_extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\extphp_xdebug.dll&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.auto_trace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.collect_params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.collect_return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_append&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_enable_trigger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.profiler_output_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cachegrind.out.%t-%s&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dbgp&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;9000&lt;/span&gt;
&lt;span class="na"&gt;xdebug.trace_output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;D:\wamp\php-5.5.3-Win32-VC11-x86\tmp&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，重新启动apache即可。访问phpinfo();页面检查是否有xdebug，如果有，表示安装成功。&lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;集成开发环境&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;的集成开发环境比较多: 如Zend Studio，Eclipse + &lt;span class="caps"&gt;PDT&lt;/span&gt;， Eclipse + PHPEclipse等。这些环境经过简单的配置之后都支持远程调试，还有一些浏览器的工具，如FireFox浏览器的&amp;#8221;FireBug +&amp;nbsp;FirePHP&amp;#8221;插件，这些资料比较多，就不在这里重复了。&lt;/p&gt;</content><category term="php"></category><category term="wamp"></category></entry><entry><title>OpenGrok安装使用指南</title><link href="http://blog.wiseturtles.com/posts/setup-opengrok.html" rel="alternate"></link><published>2012-12-14T18:09:00+08:00</published><updated>2012-12-14T18:09:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2012-12-14:/posts/setup-opengrok.html</id><summary type="html">&lt;p&gt;how to set up&amp;nbsp;OpenGrok&lt;/p&gt;</summary><content type="html">&lt;p&gt;本文主要参考了下面的文章:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hub.opensolaris.org/bin/view/Project+opengrok/installdescription"&gt;http://hub.opensolaris.org/bin/view/Project+opengrok/installdescription&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://src.opensolaris.org/source/xref/opengrok/trunk/README.txt"&gt;http://src.opensolaris.org/source/xref/opengrok/trunk/&lt;span class="caps"&gt;README&lt;/span&gt;.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：最好是单独建立一个用户，并保证该用户对代码和后面创建索引的目录读写权限&lt;/p&gt;
&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;p&gt;以opengrok用户身份登录安装jdk和Exuberant&amp;nbsp;Ctags.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install sun-java6-jdk ctags
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;获取opengrok安装包（opengrok-0.11.1.tar.gz）和tomcat安装包(apachetomcat-7.0.6.tar.gz)解压安装包到任意目录下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/local/
$ tar -zxvf /path/to/opengrok-0.11.1.tar.gz
$ tar -zxvf /path/to/apachetomcat-7.0.6.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下载需要使用的代码到一个目录下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p ~/opengrok/projects/project1
$ mkdir -p ~/opnegrok/projects/project2
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/opengrok/projects/project1
$ download code of project1 &lt;span class="o"&gt;(&lt;/span&gt;such as: git clone ... or repo init ... &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; repo sync&lt;span class="o"&gt;)&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/opengrok/projects/project2
$ download code of project2 &lt;span class="o"&gt;(&lt;/span&gt;such as: git clone ... or repo init ... &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; repo sync&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;目录结构如下:&lt;/p&gt;
&lt;pre&gt;
opengrok/projects----project1
            |----project2
            |----project3
            |----.......
&lt;/pre&gt;

&lt;p&gt;启动tomcat，确认tomcat没有问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /var/local/apache-tomcat-7.0.6/bin/startup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;访问&lt;a href="http://127.0.0.1:8080"&gt;http://127.0.0.1:8080&lt;/a&gt;检查tomcat&amp;nbsp;是否正常工作&lt;/p&gt;
&lt;h2&gt;部署OpenGrok&lt;/h2&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="nv"&gt;OPENGROK_TOMCAT_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/local/apache-tomcat-7.0.6 /var/local/opengrok-0.11.1/bin/OpenGrok deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这一步实际操作是&lt;code&gt;/var/local/opengrok-0.11.1/lib/source.war&lt;/code&gt;部署到&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/&lt;/code&gt;
访问
&lt;a href="http://127.0.0.1:8080/source"&gt;http://127.0.0.1:8080/source&lt;/a&gt;
已经可以看到opengrok页面了，但是没有项目的数据信息。
在&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/&lt;/code&gt;目录下面可以看到一个source目录和source.war，就是刚刚部属的产物。&amp;nbsp;source.war已经没有什么用了，可以删除。&lt;/p&gt;
&lt;h3&gt;创建索引&lt;/h3&gt;
&lt;p&gt;创建索引时，会创建三个目录，一个data目录来存放索引信息，一个etc目录创建配置信息和一个log目录。
 如想让~/opengrok/来存放索引,则指定&lt;code&gt;OPENGROK_INSTANCE_BASE=~/opengrok&lt;/code&gt;, 则指定&lt;code&gt;OPENGROK_INSTANCE_BASE=~/opengrok&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这一步命令的执行时间视~/opengrok/projects/的代码数量决定。 最后会在~/opengrok 目录下面看到data,etc,log&amp;nbsp;三个目录&lt;/p&gt;
&lt;p&gt;访问&lt;a href="http://127.0.0.1:8080/source"&gt;http://127.0.0.1:8080/source&lt;/a&gt;,enjoy&amp;nbsp;it!&lt;/p&gt;
&lt;h3&gt;项目代码更新或者添加新的项目&lt;/h3&gt;
&lt;p&gt;首先更新项目代码或者下载新的项目到~/opengrok/projects目录下面。&amp;nbsp;然后重新执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;命令即可。&lt;/p&gt;
&lt;h3&gt;可选操作&lt;/h3&gt;
&lt;p&gt;可以通过修改&lt;code&gt;/var/local/apache-tomcat-7.0.6/webapps/source/index_body.html&lt;/code&gt;来定制化你的OpenGrok首页。
如添加公司&lt;span class="caps"&gt;LOGO&lt;/span&gt;或一些有用的帮助信息。&lt;/p&gt;
&lt;h3&gt;直接调用命令行接口&lt;/h3&gt;
&lt;p&gt;上面创建索引的命令其实&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;OPENGROK_VERBOSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nv"&gt;OPENGROK_INSTANCE_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/opengrok/ ./OpenGrok index ~/opengrok/projects/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实调用的是opengrok&amp;nbsp;lib目录下的jar包：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;java -Xmx2048m -Dorg.opensolaris.opengrok.history.cvs=/usr/bin/cvs
-Dorg.opensolaris.opengrok.history.git=/usr/bin/git
-Djava.util.logging.config.file=/data/opengrok/opengrok_data/logging.properties
-jar /data/opengrok/opengrok-0.11.1/bin/../lib/opengrok.jar
-P -S -r on -v -c /usr/bin/ctags-exuberant -a on
-W /data/opengrok/opengrok_data/etc/configuration.xml
-U localhost:2424 -s /data/opengrok/projects/
-d /data/opengrok/opengrok_data/data -H..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面各个参数的意思如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ java -jar opengrok.jar

Usage: opengrok.jar &lt;span class="o"&gt;[&lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt;
-?
    Help

-A ext:analyzer
    Files with the named extension should be analyzed with the specified class

-a on/off
    Allow or disallow leading wildcards in a search

-B url
    Base URL of the user Information provider. Default: &lt;span class="s2"&gt;&amp;quot;http://www.opensolaris.org/viewProfile.jspa?username=&amp;quot;&lt;/span&gt;

-C
    Print per project percentage progress information&lt;span class="o"&gt;(&lt;/span&gt;I/O extensive, since one &lt;span class="nb"&gt;read&lt;/span&gt; through dir structure is made before indexing, needs -v, otherwise it just goes to the log&lt;span class="o"&gt;)&lt;/span&gt;

-c /path/to/ctags
    Path to Exuberant Ctags from http://ctags.sf.net by default takes the Exuberant Ctags in PATH.

-D
    Store &lt;span class="nb"&gt;history&lt;/span&gt; cache in a database &lt;span class="o"&gt;(&lt;/span&gt;needs the JDBC driver in the classpath, typically derbyclient.jar or derby.jar&lt;span class="o"&gt;)&lt;/span&gt;

-d /path/to/data/root
    The directory where OpenGrok stores the generated data

-e
    Economical - consumes less disk space. It does not generate hyper text cross reference files offline, but will &lt;span class="k"&gt;do&lt;/span&gt; so on demand - which could be sightly slow.

-H
    Generate &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; all repositories

-h /path/to/repository
    just generate &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; the specified repos &lt;span class="o"&gt;(&lt;/span&gt;absolute path from &lt;span class="nb"&gt;source&lt;/span&gt; root&lt;span class="o"&gt;)&lt;/span&gt;

-I pattern
    Only files matching this pattern will be examined &lt;span class="o"&gt;(&lt;/span&gt;supports wildcards, example: -I *.java -I *.c&lt;span class="o"&gt;)&lt;/span&gt;

-i pattern
    Ignore the named files or directories &lt;span class="o"&gt;(&lt;/span&gt;supports wildcards, example: -i *.so -i *.dll&lt;span class="o"&gt;)&lt;/span&gt;

-j class
    Name of the JDBC driver class used by the &lt;span class="nb"&gt;history&lt;/span&gt; cache. Can use one of the shorthands &lt;span class="s2"&gt;&amp;quot;client&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;org.apache.derby.jdbc.ClientDriver&lt;span class="o"&gt;)&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;embedded&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;org.apache.derby.jdbc.EmbeddedDriver&lt;span class="o"&gt;)&lt;/span&gt;. Default: &lt;span class="s2"&gt;&amp;quot;client&amp;quot;&lt;/span&gt;

-k /path/to/repository
    Kill the &lt;span class="nb"&gt;history&lt;/span&gt; cache &lt;span class="k"&gt;for&lt;/span&gt; the given repository and exit. Use &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; to delete the cache &lt;span class="k"&gt;for&lt;/span&gt; all repositories.

-K
    List all repository pathes and exit.

-L path
    Path to the subdirectory in the web-application containing the requested stylesheet. The following factory-defaults exist: &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;offwhite&amp;quot;&lt;/span&gt; and &lt;span class="s2"&gt;&amp;quot;polished&amp;quot;&lt;/span&gt;

-l on/off
    Turn on/off locking of the Lucene database during index generation

-m number
    The maximum words to index in a file

-N /path/to/symlink
    Allow this symlink to be followed. Option may be repeated.

-n
    Do not generate indexes, but process all other &lt;span class="nb"&gt;command&lt;/span&gt; line options

-O on/off
    Turn on/off the optimization of the index database as part of the indexing step

-P
    Generate a project &lt;span class="k"&gt;for&lt;/span&gt; each of the top-level directories in &lt;span class="nb"&gt;source&lt;/span&gt; root

-p /path/to/default/project
    This is the path to the project that should be selected by default in the web application&lt;span class="o"&gt;(&lt;/span&gt;when no other project &lt;span class="nb"&gt;set&lt;/span&gt; either in cookie or in parameter&lt;span class="o"&gt;)&lt;/span&gt;. You should strip off the &lt;span class="nb"&gt;source&lt;/span&gt; root.

-Q on/off
    Turn on/off quick context scan. By default only the first 32k of a file is scanned, and a &lt;span class="s1"&gt;&amp;#39;[..all..]&amp;#39;&lt;/span&gt; link is inserted &lt;span class="k"&gt;if&lt;/span&gt; the file is bigger. Activating this may slow the server down &lt;span class="o"&gt;(&lt;/span&gt;Note: this is setting only affects the web application&lt;span class="o"&gt;)&lt;/span&gt;

-q
    Run as quietly as possible

-R /path/to/configuration
    Read configuration from the specified file

-r on/off
    Turn on/off support &lt;span class="k"&gt;for&lt;/span&gt; remote SCM systems

-S
    Search &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;external&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; repositories and add them

-s /path/to/source/root
    The root directory of the &lt;span class="nb"&gt;source&lt;/span&gt; tree

-T number
    The number of threads to use &lt;span class="k"&gt;for&lt;/span&gt; index generation. By default the number of threads will be &lt;span class="nb"&gt;set&lt;/span&gt; to the number of available CPUs

-t number
    Default tabsize to use &lt;span class="o"&gt;(&lt;/span&gt;number of spaces per tab character&lt;span class="o"&gt;)&lt;/span&gt;

-U host:port
    Send the current configuration to the specified address &lt;span class="o"&gt;(&lt;/span&gt;This is most likely the web-app configured with ConfigAddress&lt;span class="o"&gt;)&lt;/span&gt;

-u url
    URL to the database that contains the &lt;span class="nb"&gt;history&lt;/span&gt; cache. Default: If -j specifies &lt;span class="s2"&gt;&amp;quot;embedded&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;jdbc:derby:&lt;/span&gt;&lt;span class="nv"&gt;$DATA_ROOT&lt;/span&gt;&lt;span class="s2"&gt;/cachedb;create=true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; otherwise, &lt;span class="s2"&gt;&amp;quot;jdbc:derby://localhost/cachedb;create=true&amp;quot;&lt;/span&gt;

-V
    Print version and quit

-v
    Print progress information as we go along

-W /path/to/configuration
    Write the current configuration to the specified file &lt;span class="o"&gt;(&lt;/span&gt;so that the web application can use the same configuration

-w webapp-context
    Context of webapp. Default is /source. If you specify a different name, make sure to rename source.war to that name.

-X url:suffix
    URL Suffix &lt;span class="k"&gt;for&lt;/span&gt; the user Information provider. Default: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

-z number
    depth of scanning &lt;span class="k"&gt;for&lt;/span&gt; repositories in directory structure relative to &lt;span class="nb"&gt;source&lt;/span&gt; root
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;:默认情况下，调用OpenGork脚本是会生成项目的历史记录的，如果不想生成脚本的历史记录, 可以修改
OpenGrok脚本的&lt;code&gt;UpdateGeneratedData&lt;/code&gt; 方法，去掉&lt;code&gt;StdInvocation -H&lt;/code&gt;的&lt;code&gt;-H&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</content><category term="opengrok"></category></entry></feed>