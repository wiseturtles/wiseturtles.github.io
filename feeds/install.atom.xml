<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wise Turtles</title><link href="http://blog.wiseturtles.com/" rel="alternate"></link><link href="http://blog.wiseturtles.com/feeds/install.atom.xml" rel="self"></link><id>http://blog.wiseturtles.com/</id><updated>2015-02-09T23:49:00+08:00</updated><entry><title>CentOS上安装Supervisor</title><link href="http://blog.wiseturtles.com/posts/centos-supervisor.html" rel="alternate"></link><updated>2015-02-09T23:49:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-09:posts/centos-supervisor.html</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;部署项目从Ubuntu转战到CentOS,&amp;nbsp;使用yum命令安装supervisor后，发现无法正常使用，因此只有使用pip安装.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo pip install supervisor
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置supervisor&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;添加配置文件&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/supervisor
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/supervisor/conf.d
&lt;span class="c"&gt;# 添加如下配置文件&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/supervisor/supervisord.conf
&lt;span class="o"&gt;[&lt;/span&gt;unix_http_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/tmp/supervisor.sock    &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;the path to the socket file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;chmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;                       &lt;span class="p"&gt;;&lt;/span&gt; sockef file mode &lt;span class="o"&gt;(&lt;/span&gt;default 0700&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; the below section must remain in the config file &lt;span class="k"&gt;for&lt;/span&gt; RPC
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisorctl/web interface&lt;span class="o"&gt;)&lt;/span&gt; to work, additional interfaces may be
&lt;span class="p"&gt;;&lt;/span&gt; added by defining them in separate rpcinterface: sections
&lt;span class="o"&gt;[&lt;/span&gt;rpcinterface:supervisor&lt;span class="o"&gt;]&lt;/span&gt;
supervisor.rpcinterface_factory &lt;span class="o"&gt;=&lt;/span&gt; supervisor.rpcinterface:make_main_rpcinterface

&lt;span class="o"&gt;[&lt;/span&gt;supervisord&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisor.sock &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default is to run a UNIX domain socket server&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;http_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:9001  &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;alternately, ip_address:port specifies AF_INET&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socketmode &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignore, default 0700&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;sockchown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nobody.nogroup     &lt;span class="p"&gt;;&lt;/span&gt; AF_UNIX socket uid.gid owner &lt;span class="o"&gt;(&lt;/span&gt;AF_INET ignores&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;umask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;022&lt;/span&gt;                   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;process file creation &lt;span class="nb"&gt;umask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;default 022&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor/supervisord.log &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;main log file&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nv"&gt;$CWD&lt;/span&gt;/supervisord.log&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50MB       &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;max main logfile bytes b4 rotation&lt;span class="p"&gt;;&lt;/span&gt;default 50MB&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;num of main logfile rotation backups&lt;span class="p"&gt;;&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;loglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;logging level&lt;span class="p"&gt;;&lt;/span&gt;default info&lt;span class="p"&gt;;&lt;/span&gt; others: debug,warn&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/supervisord.pid &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;supervisord pidfile&lt;span class="p"&gt;;&lt;/span&gt;default supervisord.pid&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;nodaemon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;start in foreground &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;default &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minfds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;                 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail startup file descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 1024&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;minprocs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;                &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;min. avail process descriptors&lt;span class="p"&gt;;&lt;/span&gt;default 200&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;childlogdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/data/log/supervisor &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt; child log dir, default &lt;span class="nv"&gt;$TEMP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;nocleanup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;              &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;don&lt;span class="s1"&gt;&amp;#39;t clean up tempfiles at start;default false)&lt;/span&gt;
&lt;span class="s1"&gt;;http_username=user          ; (default is no username (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;http_password=123           ; (default is no password (open system))&lt;/span&gt;
&lt;span class="s1"&gt;;user=chrism                 ; (default is current user, required if root)&lt;/span&gt;
&lt;span class="s1"&gt;;directory=/tmp              ; (default is not to cd during start)&lt;/span&gt;
&lt;span class="s1"&gt;;environment=KEY=value       ; (key value pairs to add to environment)&lt;/span&gt;

&lt;span class="s1"&gt;[supervisorctl]&lt;/span&gt;
&lt;span class="s1"&gt;serverurl=unix:///var/tmp/supervisor.sock ; use a unix:// URL  for a unix socket&lt;/span&gt;
&lt;span class="s1"&gt;;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket&lt;/span&gt;
&lt;span class="s1"&gt;;username=chris              ; should be same as http_username if set&lt;/span&gt;
&lt;span class="s1"&gt;;password=123                ; should be same as http_password if set&lt;/span&gt;
&lt;span class="s1"&gt;;prompt=mysupervisor         ; cmd line prompt (default &amp;quot;supervisor&amp;quot;)&lt;/span&gt;

&lt;span class="s1"&gt;; The below sample program section shows all possible program subsection values,&lt;/span&gt;
&lt;span class="s1"&gt;; create one or more &amp;#39;&lt;/span&gt;real&lt;span class="s1"&gt;&amp;#39; program: sections to be able to control them under&lt;/span&gt;
&lt;span class="s1"&gt;; supervisor.&lt;/span&gt;

&lt;span class="s1"&gt;;[program:theprogramname]&lt;/span&gt;
&lt;span class="s1"&gt;;command=/bin/cat            ; the program (relative uses PATH, can take args)&lt;/span&gt;
&lt;span class="s1"&gt;;priority=999                ; the relative start priority (default 999)&lt;/span&gt;
&lt;span class="s1"&gt;;autostart=true              ; start at supervisord start (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;autorestart=true            ; retstart at unexpected quit (default: true)&lt;/span&gt;
&lt;span class="s1"&gt;;startsecs=10                ; number of secs prog must stay running (def. 10)&lt;/span&gt;
&lt;span class="s1"&gt;;startretries=3              ; max # of serial start failures (default 3)&lt;/span&gt;
&lt;span class="s1"&gt;;exitcodes=0,2               ; &amp;#39;&lt;/span&gt;expected&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;codes &lt;span class="k"&gt;for&lt;/span&gt; process &lt;span class="o"&gt;(&lt;/span&gt;default 0,2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopsignal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;QUIT             &lt;span class="p"&gt;;&lt;/span&gt; signal used to &lt;span class="nb"&gt;kill &lt;/span&gt;process &lt;span class="o"&gt;(&lt;/span&gt;default TERM&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;stopwaitsecs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; max num secs to &lt;span class="nb"&gt;wait &lt;/span&gt;before SIGKILL &lt;span class="o"&gt;(&lt;/span&gt;default 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;chrism                 &lt;span class="p"&gt;;&lt;/span&gt; setuid to this UNIX account to run the program
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;, log program stdout &lt;span class="o"&gt;(&lt;/span&gt;default &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;log_stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;, log program stderr &lt;span class="o"&gt;(&lt;/span&gt;def &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/log/cat.log    &lt;span class="p"&gt;;&lt;/span&gt; child log path, use NONE &lt;span class="k"&gt;for&lt;/span&gt; none&lt;span class="p"&gt;;&lt;/span&gt; default AUTO
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1MB        &lt;span class="p"&gt;;&lt;/span&gt; max &lt;span class="c"&gt;# logfile bytes b4 rotation (default 50MB)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# of logfile backups (default 10)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;include&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/supervisor/conf.d/*.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;项目的配置文件写入&amp;nbsp;/etc/supervisor/conf.d/目录即可&lt;/p&gt;
&lt;h2&gt;添加开机启动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 添加如下配置文件&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/init.d/supervisord

&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# /etc/rc.d/init.d/supervisord&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Supervisor is a client/server system that&lt;/span&gt;
&lt;span class="c"&gt;# allows its users to monitor and control a&lt;/span&gt;
&lt;span class="c"&gt;# number of processes on UNIX-like operating&lt;/span&gt;
&lt;span class="c"&gt;# systems.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# chkconfig: - 64 36&lt;/span&gt;
&lt;span class="c"&gt;# description: Supervisor Server&lt;/span&gt;
&lt;span class="c"&gt;# processname: supervisord&lt;/span&gt;

&lt;span class="c"&gt;# Source init functions&lt;/span&gt;
. /etc/rc.d/init.d/functions

&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;supervisord&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;prog_bin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;exec_prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/bin/supervisord&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/run/&lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;.pid&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-c /etc/supervisor/supervisord.conf &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

start&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;Starting &lt;span class="nv"&gt;$prog&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    daemon &lt;/span&gt;&lt;span class="nv"&gt;$prog_bin&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON_OPTS&lt;/span&gt;&lt;span class="s2"&gt; --pidfile &lt;/span&gt;&lt;span class="nv"&gt;$PIDFILE&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;    [ -f &lt;/span&gt;&lt;span class="nv"&gt;$PIDFILE&lt;/span&gt;&lt;span class="s2"&gt; ] &amp;amp;&amp;amp; success &lt;/span&gt;&lt;span class="nv"&gt;$&amp;quot;$prog&lt;/span&gt;&lt;span class="s2"&gt; startup&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; failure &lt;span class="nv"&gt;$&amp;quot;$prog&lt;/span&gt; startup&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    echo&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;stop()&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    echo -n &lt;/span&gt;&lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;Shutting down &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; killproc &lt;span class="nv"&gt;$prog&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; success &lt;span class="nv"&gt;$&amp;quot;$prog&lt;/span&gt; shutdown&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    echo&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;case &amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in&lt;/span&gt;

&lt;span class="s2"&gt;start)&lt;/span&gt;
&lt;span class="s2"&gt;start&lt;/span&gt;
&lt;span class="s2"&gt;;;&lt;/span&gt;

&lt;span class="s2"&gt;stop)&lt;/span&gt;
&lt;span class="s2"&gt;stop&lt;/span&gt;
&lt;span class="s2"&gt;;;&lt;/span&gt;

&lt;span class="s2"&gt;status)&lt;/span&gt;
&lt;span class="s2"&gt;    status &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;;;&lt;/span&gt;

&lt;span class="s2"&gt;restart)&lt;/span&gt;
&lt;span class="s2"&gt;stop&lt;/span&gt;
&lt;span class="s2"&gt;start&lt;/span&gt;
&lt;span class="s2"&gt;;;&lt;/span&gt;

&lt;span class="s2"&gt;*)&lt;/span&gt;
&lt;span class="s2"&gt;echo &amp;quot;&lt;/span&gt;Usage: &lt;span class="nv"&gt;$0&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;start&lt;span class="p"&gt;|&lt;/span&gt;stop&lt;span class="p"&gt;|&lt;/span&gt;restart&lt;span class="p"&gt;|&lt;/span&gt;status&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;;;&lt;/span&gt;

&lt;span class="s2"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;设置如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chmod +x /etc/init.d/supervisord
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chkconfig --add supervisord
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chkconfig supervisord on
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service supervisord start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="centos"></category><category term="supervisor"></category></entry><entry><title>OpenResty</title><link href="http://blog.wiseturtles.com/posts/openresty-install.html" rel="alternate"></link><updated>2015-02-06T15:45:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-02-06:posts/openresty-install.html</id><summary type="html">&lt;h2&gt;什么是OpenResty&lt;/h2&gt;
&lt;p&gt;OpenResty（也称为 ngx_openresty）是一个全功能的 Web 应用服务器，它打包了标准
的Nginx 核心，很多的常用的第三方模块，以及它们的大多数依赖项。对于经常需要使用&amp;nbsp;nginx第三方模块的人来说，是一个非常不错的选择.&lt;/p&gt;
&lt;h2&gt;下载及安装&lt;/h2&gt;
&lt;p&gt;关于如何下载及安装OpenResty, &lt;a href="http://openresty.org/cn/"&gt;官网&lt;/a&gt;已经有很详细的介&amp;nbsp;绍，不再赘述。&lt;/p&gt;
&lt;h2&gt;添加开机启动脚本&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建如下文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/init.d/nginx

&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# chkconfig: 2345 55 25&lt;/span&gt;
&lt;span class="c"&gt;# Description: Nginx init.d script, put in /etc/init.d, chmod +x /etc/init.d/nginx&lt;/span&gt;
&lt;span class="c"&gt;#              For Debian, run: update-rc.d -f nginx defaults&lt;/span&gt;
&lt;span class="c"&gt;#              For CentOS, run: chkconfig --add nginx&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Provides:          nginx&lt;/span&gt;
&lt;span class="c"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c"&gt;# Required-Stop:     $all&lt;/span&gt;
&lt;span class="c"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c"&gt;# Short-Description: nginx init.d script&lt;/span&gt;
&lt;span class="c"&gt;# Description:       OpenResty (aka. ngx_openresty) is a full-fledged web application server by bundling the standard Nginx core,&lt;/span&gt;
&lt;span class="c"&gt;#                    lots of 3rd-party Nginx modules, as well as most of their external dependencies.&lt;/span&gt;
&lt;span class="c"&gt;### END INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nginx Daemon&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nginx
&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/openresty/nginx
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/sbin/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/conf/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.conf
&lt;span class="nv"&gt;PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PREFIX&lt;/span&gt;/logs/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.pid
&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/init.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -x &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt; has no permission to run. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m Or &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
    sleep 1
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

do_start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; already exists. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; is already running or crashed. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reopening &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reopen -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reopened. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Stopping &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s stop -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; stopped. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Starting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; started. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Reloading &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reload -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; reloaded. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_quit&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$PID&lt;/span&gt;&lt;span class="s2"&gt; doesn&amp;#39;t exist. \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[33m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; isn&amp;#39;t running. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Quitting &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s quit -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
        sleep 1
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[36m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; quitted. \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_test&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\033[32m &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; Testing &lt;/span&gt;&lt;span class="nv"&gt;$CONF&lt;/span&gt;&lt;span class="s2"&gt; ... \033[0m&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -t -c &lt;span class="nv"&gt;$CONF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

do_info&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -V
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
start&lt;span class="o"&gt;)&lt;/span&gt;
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
&lt;span class="p"&gt;;;&lt;/span&gt;
reload&lt;span class="o"&gt;)&lt;/span&gt;
do_reload
&lt;span class="p"&gt;;;&lt;/span&gt;
restart&lt;span class="o"&gt;)&lt;/span&gt;
do_stop
do_start
&lt;span class="p"&gt;;;&lt;/span&gt;
quit&lt;span class="o"&gt;)&lt;/span&gt;
do_quit
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
do_test
&lt;span class="p"&gt;;;&lt;/span&gt;
info&lt;span class="o"&gt;)&lt;/span&gt;
do_info
&lt;span class="p"&gt;;;&lt;/span&gt;
*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$SCRIPT&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|reload|restart|quit|test|info}&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit &lt;/span&gt;2
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给文件设置执行权限&lt;code&gt;chmod +x /etc/init.d/nginx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加到开机启动&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CentOS系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chkconfig --list nginx   &lt;span class="c"&gt;# 列出系统nginx服务启动情况&lt;/span&gt;
chkconfig --add nginx    &lt;span class="c"&gt;# 添加nginx服务&lt;/span&gt;
chkconfig --level &lt;span class="m"&gt;35&lt;/span&gt; nginx on &lt;span class="c"&gt;# 设定nginx在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debian系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo update-rc.d -f nginx remove  &lt;span class="c"&gt;# 删除nginx服务&lt;/span&gt;
sudo update-rc.d apache2 defaults &lt;span class="c"&gt;# 添加nginx服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;使用logrotate切割日志&lt;/h2&gt;
&lt;p&gt;创建如下文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/logrotate.d/nginx
/etc/openresty/nginx/logs/*.log &lt;span class="o"&gt;{&lt;/span&gt;
    daily
    missingok
    rotate 52
    dateext
    dateformat  -%Y-%m-%d
    compress
    delaycompress
    notifempty
    create &lt;span class="m"&gt;0640&lt;/span&gt; www-data adm
    sharedscripts
    postrotate
        &lt;span class="o"&gt;[&lt;/span&gt; ! -f /etc/openresty/nginx/logs/nginx.pid &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -USR1 &lt;span class="sb"&gt;`&lt;/span&gt;cat /etc/openresty/nginx/logs/nginx.pid&lt;span class="sb"&gt;`&lt;/span&gt;
    endscript
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/openresty/nginx/logs/*.log&lt;/code&gt; 为OpenResty的log目录&lt;/li&gt;
&lt;li&gt;daily：每天轮询&lt;/li&gt;
&lt;li&gt;missingok:&amp;nbsp;如果日志丢失，不报错继续滚动下一个日志&lt;/li&gt;
&lt;li&gt;rotate&amp;nbsp;52：保留最多52次滚动的日志&lt;/li&gt;
&lt;li&gt;dateext：日期扩展&lt;/li&gt;
&lt;li&gt;dateformat:&amp;nbsp;日期格式&lt;/li&gt;
&lt;li&gt;compress：旧日志默认用gzip压缩&lt;/li&gt;
&lt;li&gt;notifempty:当日志为空时不进行滚动&lt;/li&gt;
&lt;li&gt;create: mode owner group&amp;nbsp;转储文件，使用指定的文件模式创建新的日志文件&lt;/li&gt;
&lt;li&gt;/etc/openresty/nginx/logs/nginx.pid：nginx主进程pid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;logroate -f /etc/logrotate.d/nginx
&lt;/pre&gt;&lt;/div&gt;</summary><category term="nginx"></category><category term="openresty"></category></entry><entry><title>Gerrit搭建指南</title><link href="http://blog.wiseturtles.com/posts/gerrit.html" rel="alternate"></link><updated>2015-01-15T17:09:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-01-15:posts/gerrit.html</id><summary type="html">&lt;h2&gt;什么是Gerrit&lt;/h2&gt;
&lt;p&gt;Gerrit，一种免费、开放源代码的代码审查软件，使用网页界面。利用网页浏览器，同一个团队的软件程序员，可以相互审阅彼此修改后的程序代码，决定是否能够提交，退回或者继续修改。它使用Git作为底层版本控制系统。&lt;/p&gt;
&lt;p&gt;本文以Ubuntu&amp;nbsp;12.04，Gerrit2.9.4(目前最新的版本)为例介绍整个搭建过程&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/install.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;环境要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;JDK&lt;/span&gt;&amp;nbsp;1.7+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;前期准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;span class="caps"&gt;JDK1&lt;/span&gt;.7&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:webupd8team/java
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install oracle-java7-installer
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install git
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Nginx服务器, 用于作为Gerrit网站的反向代理以及&lt;span class="caps"&gt;HTTP&lt;/span&gt;认证&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;数据库设置&lt;/h2&gt;
&lt;p&gt;Gerrit的使用必须依赖于数据库，目前支持的数据库有H2(Gerrit内置的), PostgreSQL, MySQL,&amp;nbsp;Oracle.&lt;/p&gt;
&lt;p&gt;本文以MySQL为例，介绍数据库的设置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 安装数据库&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install mysql-server

&lt;span class="c"&gt;# 创建数据库reviewdb和用户gerrit2为后面做准备&lt;/span&gt;
&lt;span class="c"&gt;# 数据库名和用户名可以根据实际的使用情况自己选择&lt;/span&gt;
mysql&amp;gt; CREATE USER &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; CREATE DATABASE reviewdb&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; GRANT ALL ON reviewdb.* TO &lt;span class="s1"&gt;&amp;#39;gerrit2&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
mysql&amp;gt; FLUSH PRIVILEGES&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;初始化Gerrit站点&lt;/h2&gt;
&lt;p&gt;由于Gerrit创建中需要保存自己的&lt;span class="caps"&gt;SSH&lt;/span&gt; Keys,&amp;nbsp;配置文件，代码库等信息，因此强烈建议单独创建一个用户来创建Gerrit站点。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 在系统上添加用户gerrit2&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser gerrit2
&lt;span class="c"&gt;# 切换到当前用户&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo su gerrit2
&lt;span class="c"&gt;# 下载gerrit安装包&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;wget http://gerrit-releases.storage.googleapis.com/gerrit-2.9.4.war
&lt;span class="c"&gt;# -d 指定站点的根目录, 本例以gerrit2 HOME目录下的gerrit为例&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;java -jar gerrit-2.9.4.war init -d gerrit

*** Gerrit Code Review 2.9.4
***

Create &lt;span class="s1"&gt;&amp;#39;/home/gerrit2/gerrit&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?

*** Git Repositories
***
&lt;span class="c"&gt;# 项目代码目录设置&lt;/span&gt;
Location of Git repositories   &lt;span class="o"&gt;[&lt;/span&gt;git&lt;span class="o"&gt;]&lt;/span&gt;:

*** SQL Database
***

Database server &lt;span class="nb"&gt;type&lt;/span&gt;           &lt;span class="o"&gt;[&lt;/span&gt;h2&lt;span class="o"&gt;]&lt;/span&gt;: mysql

Gerrit Code Review is not shipped with MySQL Connector/J 5.1.21
**  This library is required &lt;span class="k"&gt;for&lt;/span&gt; your configuration. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://repo2.maven.org/maven2/mysql/mysql-connector-java/5.1.21/mysql-connector-java-5.1.21.jar ... OK
Checksum mysql-connector-java-5.1.21.jar OK
Server hostname                &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:           &lt;span class="c"&gt;# 此处填写刚刚创建数据库时设置的信息&lt;/span&gt;
Server port                    &lt;span class="o"&gt;[(&lt;/span&gt;mysql default&lt;span class="o"&gt;)]&lt;/span&gt;:
Database name                  &lt;span class="o"&gt;[&lt;/span&gt;reviewdb&lt;span class="o"&gt;]&lt;/span&gt;:
Database username              &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
gerrit2&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password             :
            confirm password :

*** Index
***

Type                           &lt;span class="o"&gt;[&lt;/span&gt;LUCENE/?&lt;span class="o"&gt;]&lt;/span&gt;:

*** User Authentication
***

&lt;span class="c"&gt;# 认证方式设置, 根据实际情况自行选择，不清楚有哪些方式可以输入&amp;quot;?&amp;quot;查看&lt;/span&gt;
Authentication method          &lt;span class="o"&gt;[&lt;/span&gt;OPENID/?&lt;span class="o"&gt;]&lt;/span&gt;: http
Get username from custom HTTP header &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
SSO &lt;span class="nb"&gt;logout &lt;/span&gt;URL                 :

*** Review Labels
***

Install Verified label         &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

*** Email Delivery
***

&lt;span class="c"&gt;# 邮件服务器设置, 根据实际情况自行选择&lt;/span&gt;
SMTP server hostname           &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP server port               &lt;span class="o"&gt;[(&lt;/span&gt;default&lt;span class="o"&gt;)]&lt;/span&gt;:
SMTP encryption                &lt;span class="o"&gt;[&lt;/span&gt;NONE/?&lt;span class="o"&gt;]&lt;/span&gt;:
SMTP username                  :

*** Container Process
***

Run as                         &lt;span class="o"&gt;[&lt;/span&gt;gerrit2&lt;span class="o"&gt;]&lt;/span&gt;:
Java runtime                   &lt;span class="o"&gt;[&lt;/span&gt;/usr/lib/jvm/java-7-oracle/jre&lt;span class="o"&gt;]&lt;/span&gt;:
Copy gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Copying gerrit-2.9.4.war to /home/gerrit2/gerrit/bin/gerrit.war

*** SSH Daemon
***

Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;29418&lt;span class="o"&gt;]&lt;/span&gt;:

Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v149
If available, Gerrit can take advantage of features
in the library, but will also &lt;span class="k"&gt;function&lt;/span&gt; without it.
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcpkix-jdk15on-149.jar ... OK
Checksum bcpkix-jdk15on-149.jar OK

Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v149
** This library is required by Bouncy Castle Crypto SSL v149. **
Download and install it now &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
Downloading http://www.bouncycastle.org/download/bcprov-jdk15on-149.jar ... OK
Checksum bcprov-jdk15on-149.jar OK
Generating SSH host key ... rsa... dsa... &lt;span class="k"&gt;done&lt;/span&gt;

*** HTTP Daemon
***

&lt;span class="c"&gt;# 启用反向代理&lt;/span&gt;
Behind reverse proxy           &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;? y
Proxy uses SSL &lt;span class="o"&gt;(&lt;/span&gt;https://&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Subdirectory on proxy server   &lt;span class="o"&gt;[&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on address              &lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;:
Listen on port                 &lt;span class="o"&gt;[&lt;/span&gt;8081&lt;span class="o"&gt;]&lt;/span&gt;:     &lt;span class="c"&gt;# 设置gerrit网站监听端口&lt;/span&gt;
Canonical URL                  &lt;span class="o"&gt;[&lt;/span&gt;http://localhost/&lt;span class="o"&gt;]&lt;/span&gt;:

*** Plugins
***

Install plugin commit-message-length-validator version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin download-commands version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin replication version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin reviewnotes version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?
Install plugin singleusergroup version v2.9.4 &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;?

Initialized /home/gerrit2/gerrit
Executing /home/gerrit2/gerrit/bin/gerrit.sh start
Starting Gerrit Code Review: OK
Waiting &lt;span class="k"&gt;for&lt;/span&gt; server on localhost:80 ... OK
Opening http://localhost/#/admin/projects/ ...No protocol specified
No protocol specified
OK
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置nginx反向代理&lt;/h2&gt;
&lt;p&gt;在nginx配置中间中配置如下:&lt;/p&gt;
&lt;pre&gt;
      location / {
            proxy_pass        http://localhost:8081;
            proxy_set_header  X-Forwarded-For $remote_addr;
            proxy_set_header  Host $host;
            auth_basic "Restricted";  # 配置访问限制和密码文件
            auth_basic_user_file  /home/gerrit2/gerrit/etc/auth_passwd;

    }
&lt;/pre&gt;

&lt;p&gt;创建用户密码文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 创建用户名和密码都是admin的文件&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;htpasswd -b -c /home/gerrit2/gerrit/etc/auth_passwd admin admin
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;访问&lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;输入用户名和密码即可登陆到Gerrit&lt;/p&gt;
&lt;h2&gt;Gerrit目录结构&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tree -L &lt;span class="m"&gt;1&lt;/span&gt; gerrit
gerrit
├── bin
├── cache
├── data
├── etc  &lt;span class="c"&gt;# 配置信息, 创建站点时的配置信息都保存在这里，可以按照需要修改&lt;/span&gt;
├── git
├── index
├── lib
├── logs
├── plugins
├── static
└── tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gerrit/bin/gerrit.sh start  &lt;span class="c"&gt;# 启动gerrit服务&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;gerrit/bin/gerrit.sh stop   &lt;span class="c"&gt;# 关闭gerrit服务&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;gerrit/bin/gerrit.sh restart &lt;span class="c"&gt;# 重启gerrit服务&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;更多信息&lt;/h2&gt;
&lt;p&gt;关于gerrit主题设置，使用方法等更多信息，官方文档上已有详细描述,&amp;nbsp;请参考:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html"&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.9.4/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;更新&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;最近因工作需要，又重新搭建了一次gerrit, 遇到一些坑, 记录一下&lt;/em&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果用MySQL作为数据库，Gerrit数据库的引擎应该是Innodb.&lt;/li&gt;
&lt;li&gt;配置邮件时，一直认证失败，除了在&lt;code&gt;etc/gerrt.conf&lt;/code&gt;文件里指定&lt;code&gt;sendmail.smtpUser&lt;/code&gt;, 还需要指定&lt;code&gt;sendmail.from&lt;/code&gt;为发送邮件的用户信息, 格式为&lt;code&gt;username &amp;lt;youmail@mail.com&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;认证可以使用github oauth认证&lt;a href="https://github.com/davido/gerrit-oauth-provider"&gt;gerrit-oauth-provider&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="git"></category><category term="gerrit"></category></entry></feed>