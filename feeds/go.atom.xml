<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wise Turtles</title><link href="http://blog.wiseturtles.com/" rel="alternate"></link><link href="http://blog.wiseturtles.com/feeds/go.atom.xml" rel="self"></link><id>http://blog.wiseturtles.com/</id><updated>2015-07-13T16:45:00+08:00</updated><entry><title>Go学习笔记——(3)打造Sublime Text 3作为GO的集成开发环境(IDE)</title><link href="http://blog.wiseturtles.com/posts/go-ide.html" rel="alternate"></link><updated>2015-07-13T16:45:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-07-13:posts/go-ide.html</id><summary type="html">&lt;h3&gt;可用于&lt;span class="caps"&gt;GO&lt;/span&gt;开发的工具&lt;/h3&gt;
&lt;p&gt;可以用于&lt;span class="caps"&gt;GO&lt;/span&gt;开发的工具和插件目前已经非常多了,如&lt;span class="caps"&gt;VIM&lt;/span&gt;, Emacs, atom等，这里&lt;a href="https://github.com/golang/go/wiki/IDEsAndTextEditorPlugins"&gt;IDEs and Plugins for
Go&lt;/a&gt;罗列了许多可以作为&lt;span class="caps"&gt;GO&lt;/span&gt;开发
的&lt;span class="caps"&gt;IDE&lt;/span&gt;和插件，我们可以根据自己的使用习惯自行选择。本文主要阐述如何利用Sublime
Text 3 作为&lt;span class="caps"&gt;GO&lt;/span&gt;的开发环境.&lt;/p&gt;
&lt;h3&gt;安装Sublime text&amp;nbsp;3及插件&lt;/h3&gt;
&lt;p&gt;到Sublime 官网选择适合自己系统的版本&lt;a href="http://www.sublimetext.com/3"&gt;http://www.sublimetext.com/3&lt;/a&gt;, 我选择的是
Ubuntu&amp;nbsp;64位的tarball包，解压出来可以直接用了。&lt;/p&gt;
&lt;p&gt;依次安装插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Package&amp;nbsp;Control&lt;/li&gt;
&lt;li&gt;GoSublime&lt;/li&gt;
&lt;li&gt;GoDef&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我只列出了Go开发必须的插件, 其他的一些插件可以根据自身需要选择安装或者从
&lt;a href="http://blog.wiseturtles.com/posts/go-introduce.html"&gt;http://blog.wiseturtles.com/posts/go-introduce.html&lt;/a&gt;选择热门插件&lt;/p&gt;
&lt;h3&gt;安装插件依赖的Go&amp;nbsp;Package&lt;/h3&gt;
&lt;p&gt;上面的插件需要用到一些go cmd tools, 但是这些工具因为墙的问题，没法直接下载，好
在Github上面由这些工具的镜像，因此我们可以曲线救国，从镜像下载。在下载之前，首先，还是要先设置&lt;code&gt;GOPATH&lt;/code&gt;变
量, 怎么设置可以参考本系列文章第二篇&lt;a href="http://blog.wiseturtles.com/posts/go-introduce.html"&gt;http://blog.wiseturtles.com/posts/go-introduce.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装必备的cmd&amp;nbsp;tools&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#　创建目录&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your_go_path&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/golang.org/x

&lt;span class="c"&gt;# 根据实际需要下载对应分支的tools&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone -b release-branch.go1.4 git@github.com:golang/tools.git &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/golang.org/x/tools
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
&lt;span class="c"&gt;# 安装工具&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;go install golang.org/x/tools/cmd/goimports
&lt;span class="nv"&gt;$ &lt;/span&gt;go install golang.org/x/tools/cmd/vet
&lt;span class="nv"&gt;$ &lt;/span&gt;go install golang.org/x/tools/cmd/oracle
&lt;span class="nv"&gt;$ &lt;/span&gt;go install golang.org/x/tools/cmd/godoc

&lt;span class="c"&gt;# 安装不需要翻墙的工具&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;go get github.com/rogpeppe/godef

&lt;span class="c"&gt;# 最后两个是我做web开发需要安装的包，没有需要的话可以不下载&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;go get github.com/astaxie/beego
&lt;span class="nv"&gt;$ &lt;/span&gt;go get github.com/beego/bee
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置插件:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GoSublime 配置, Preferences -&amp;gt; Package Settings -&amp;gt; GoSublime -&amp;gt;　Settings -&amp;nbsp;User&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{
    // &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;specific&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
    // &lt;span class="nb"&gt;e&lt;/span&gt;.&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: { &lt;span class="s"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$HOME/go/bin:$PATH&amp;quot;&lt;/span&gt; }
    // &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;values&lt;/span&gt;, &lt;span class="nv"&gt;$PATH&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; ${&lt;span class="n"&gt;PATH&lt;/span&gt;} &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;replaced&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt;
    // &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;corresponding&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;(&lt;span class="n"&gt;PATH&lt;/span&gt;) &lt;span class="n"&gt;variable&lt;/span&gt;, &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="nb"&gt;exists&lt;/span&gt;.
    //&lt;span class="n"&gt;根据实际情况设置如下变量&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: {&lt;span class="s"&gt;&amp;quot;GOROOT&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;/usr/local/go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$HOME/golang&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;$GOPATH/bin:$GOROOT/bin:$PATH&amp;quot;&lt;/span&gt; },

    &lt;span class="s"&gt;&amp;quot;fmt_cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;goimports&amp;quot;&lt;/span&gt;],&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;comp-lint&lt;/span&gt;, &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;will&lt;/span&gt; &lt;span class="n"&gt;effectively&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;live&lt;/span&gt; &lt;span class="n"&gt;linter&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;comp_lint_enabled&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;comp_lint_commands&amp;quot;&lt;/span&gt;: [
        // &lt;span class="nb"&gt;run&lt;/span&gt; `&lt;span class="n"&gt;golint&lt;/span&gt;` &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;
        // &lt;span class="s"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;:&lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;required&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;through&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; (&lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt; `*.&lt;span class="n"&gt;go&lt;/span&gt;`)
        // &lt;span class="o"&gt;also&lt;/span&gt; &lt;span class="n"&gt;see:&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;documentation&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; `&lt;span class="n"&gt;shell&lt;/span&gt;` &lt;span class="n"&gt;setting&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;,&lt;span class="n"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;golint *.go&amp;quot;&lt;/span&gt;], &lt;span class="s"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;},&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;vet&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;vet&amp;quot;&lt;/span&gt;]},&lt;span class="sr"&gt;&lt;/span&gt;

&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; `&lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;` &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;package&lt;/span&gt;. &lt;span class="n"&gt;GOBIN&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;
&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="o"&gt;so&lt;/span&gt; `&lt;span class="n"&gt;main&lt;/span&gt;` &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="n"&gt;shouldn&amp;#39;t&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;installation&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;binary&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: [&lt;span class="s"&gt;&amp;quot;go&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;install&amp;quot;&lt;/span&gt;]}
    ],

    &lt;span class="s"&gt;&amp;quot;on_save&amp;quot;&lt;/span&gt;: [
        // &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;comp-lint&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt;,&lt;span class="sr"&gt;&lt;/span&gt;
&lt;span class="sr"&gt;        //&lt;/span&gt; &lt;span class="n"&gt;naturally&lt;/span&gt;, &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="nb"&gt;can&lt;/span&gt; &lt;span class="o"&gt;also&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; `&lt;span class="n"&gt;gs_comp_lint&lt;/span&gt;`
        // &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;key&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="nb"&gt;want&lt;/span&gt;
        {&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;gs_comp_lint&amp;quot;&lt;/span&gt;}
    ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GoDef 配置, Preferences -&amp;gt; Package Settings -&amp;gt; GoDef -&amp;gt;　Settings -&amp;nbsp;User&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{
    //根据实际情况设置如下变量
    &amp;quot;gopath&amp;quot;: &amp;quot;/home/linliang/golang&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用&lt;/h3&gt;
&lt;p&gt;创建一个Go文件，默认情况下:
&lt;em&gt; 连续两次输入&lt;code&gt;Ctrl + dot(.)&lt;/code&gt;, 可以查看GoSublime的功能和快捷键.
&lt;/em&gt; 使用&lt;code&gt;gd&lt;/code&gt;可以使用GoDef插件的跳转,&amp;nbsp;更多使用可以参考两个插件的帮助文档&lt;/p&gt;</summary><category term="go"></category><category term="ide"></category><category term="sublime"></category></entry><entry><title>Go学习笔记——(2)初识Go</title><link href="http://blog.wiseturtles.com/posts/go-introduce.html" rel="alternate"></link><updated>2015-06-30T23:37:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-30:posts/go-introduce.html</id><summary type="html">&lt;p&gt;本文参考于:
&lt;a href="https://golang.org/doc/code.html"&gt;How to Write Go&amp;nbsp;Code&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;代码组织&lt;/h2&gt;
&lt;h3&gt;工作空间&lt;/h3&gt;
&lt;p&gt;Go&amp;nbsp;tool先天就是设计来与开源仓库协作的，不管你愿不愿意发布你的代码，构建开发环境的方式是一样的。&lt;/p&gt;
&lt;p&gt;Go代码必须保存在一个工作空间里，　一个工作空间要有三个根目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;src&amp;nbsp;Go源代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pkg&amp;nbsp;Go库文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bin&amp;nbsp;包含可执行命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个工作空间的示例:
&lt;pre&gt;
bin/
    hello                          # command executable
    outyet                         # command executable
pkg/
    linux_amd64/
        github.com/golang/example/
            stringutil.a           # package object
src/
    github.com/golang/example/
        .git/                      # Git repository metadata
    hello/
        hello.go               # command source
    outyet/
        main.go                # command source
        main_test.go           # test source
    stringutil/
        reverse.go             # package source
        reverse_test.go        # test source
    github.com/golang/project1/
        ......
    github.com/golang/project2/
        ......
&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;设置&lt;span class="caps"&gt;GOPATH&lt;/span&gt;环境变量&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;GOPATH&lt;/span&gt;是Go中唯一必须需要设置的环境变量, &lt;span class="caps"&gt;GOPATH&lt;/span&gt;就是工作空间的路径&lt;/p&gt;
&lt;p&gt;如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir &lt;span class="nv"&gt;$HOME&lt;/span&gt;/go
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/go
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;包路径&lt;/h3&gt;
&lt;p&gt;无论你是否要发布你的程序, 你都应该以要发布的方式来构建你的程序,最好的包名是&amp;nbsp;github.com/user&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/user
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第一个Go程序&lt;/h3&gt;
&lt;p&gt;下面，我将介绍如何将从头构建一个简单的go程序.
首先, 我们以&lt;code&gt;/data/github/golang&lt;/code&gt;为工作空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p /data/github/golang
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /data/github/golang
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为了创建一个简单的程序. 首先要选择包路径, 如&lt;code&gt;github.com/crazygit/hello&lt;/code&gt;,&amp;nbsp;并创建对于的目录结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在目录&lt;code&gt;$GOPATH/src/github.com/crazygit/hello&lt;/code&gt;里创建&lt;code&gt;hello.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用go工具编译并安装程序&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;go install github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/github.com/crazygit/hello
&lt;span class="nv"&gt;$ &lt;/span&gt;go install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行了之后，可以看到&lt;code&gt;$GOPATH&lt;/code&gt;中多了一个&lt;code&gt;bin&lt;/code&gt;目录，里面有一个名为&lt;code&gt;hello&lt;/code&gt;的可执行文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ $GOPATH&lt;/span&gt;/bin/hello
Hello, world.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第一个Go库&lt;/h3&gt;
&lt;p&gt;让我们再创建一个库，同样，先创建包路径&lt;code&gt;github.com/crazygit/stringutil&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/crazygit/stringutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在里面再创建一个名为&lt;code&gt;reverse.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;stringutil&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;go build github.com/crazygit/stringutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译过程不会有什么文件产生, 可以使用&lt;code&gt;go install&lt;/code&gt;, 它会创建pkg目录
并生成&lt;code&gt;pkg/linux_amd64/github.com/crazygit/stringutil.a&lt;/code&gt;文件.&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;hello.go&lt;/code&gt;,让它使用我们刚刚创建的库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;github.com/crazygit/stringutil&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stringutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;!oG ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装，当安装的的时候，它会自动根据安装依赖,所以安装&lt;code&gt;hello&lt;/code&gt;时, 它会自动安装&lt;code&gt;stringutil&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go install github.com/crazygit/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ $GOPATH&lt;/span&gt;/bin/hello
Hello, Go!
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;包名&lt;/h3&gt;
&lt;p&gt;Go代码文件的第一句话必须是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;name就是要引起的包名，所有在同一个包下的包名也一样&lt;/p&gt;
&lt;p&gt;go里面为了方便，会使用引入包路径的最后一段作为包名，如 &lt;code&gt;crazygit/rot14&lt;/code&gt;的包名就是&lt;code&gt;rot14&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可执行的命令必须引入包&lt;code&gt;package main&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;Go自带了一个使用&lt;code&gt;go test&lt;/code&gt;的测试框架，为了写一个测试文件。&lt;/p&gt;
&lt;p&gt;应该创建一个文件名&lt;code&gt;_test.go&lt;/code&gt;结尾的文件，函数名为如&lt;code&gt;TestXXX&lt;/code&gt;的, 并且有参数&lt;code&gt;t *testing.T&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;让我们为stringutil包创建测试&lt;code&gt;$GOPATH/src/github.com/crazygit/stringutil/reverse_test.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;stringutil&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;testing&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestReverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cases&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;}{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dlrow ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, 世界&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;界世 ,olleH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;cases&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Reverse(%q) == %q, want %q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;want&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行测试&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go &lt;span class="nb"&gt;test &lt;/span&gt;github.com/crazygit/stringutil
ok      github.com/crazygit/stringutil  0.002s
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;第三方包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go get github.com/golang/example/hello
&lt;span class="nv"&gt;$ $GOPATH&lt;/span&gt;/bin/hello
Hello, Go examples!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果当前包已经存在，&lt;code&gt;go get&lt;/code&gt;会跳过下载&lt;/p&gt;
&lt;p&gt;到此，我们对go有了个大致的印象，虽然有些地方看不懂，不过没有关系，我们后面会继续学习。&lt;/p&gt;</summary><category term="go"></category><category term="入门"></category></entry><entry><title>Go学习笔记——(1)安装Go</title><link href="http://blog.wiseturtles.com/posts/go-install.html" rel="alternate"></link><updated>2015-06-30T23:11:00+08:00</updated><author><name>crazygit</name></author><id>tag:blog.wiseturtles.com,2015-06-30:posts/go-install.html</id><summary type="html">&lt;p&gt;本文参考于:
&lt;a href="https://golang.org/doc/install"&gt;Installing Go - Getting&amp;nbsp;Started&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;必备技能之翻墙&lt;/h3&gt;
&lt;p&gt;这个是必须的技能，不然go的官网都没法访问,&amp;nbsp;后面也不用看了。&lt;/p&gt;
&lt;h3&gt;开发环境搭建&lt;/h3&gt;
&lt;p&gt;整个安装过程比较简单，下载安装包，配置环境变量即可。&lt;/p&gt;
&lt;p&gt;以Linux为例. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加环境变量: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;export GOROOT=/usr/local/go&lt;/span&gt;
&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="x"&gt;/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;GOROOT&lt;/code&gt;是告诉系统Go安装在哪里，
&lt;code&gt;PATH&lt;/code&gt;是指定Go相关命令的调用路径.&lt;/p&gt;
&lt;p&gt;环境检查，按照国际惯例，当然是先来&amp;#8221;Hello World&amp;#8221;. 创建&lt;code&gt;hello.go&lt;/code&gt;: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello, world\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go run hello.go
hello, world
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果输出&amp;#8221;hello,world&amp;#8221;，&amp;nbsp;则表示环境没有什么问题. &lt;/p&gt;</summary><category term="go"></category><category term="入门"></category></entry></feed>